{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3","text":""},{"location":"#1","title":"1. \u6982\u8981","text":"<p>Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\uff08Domain-Driven Design, DDD\uff09\u306e\u539f\u5247\u306b\u5f93\u3063\u3066\u69cb\u7bc9\u3055\u308c\u305fGo\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\u3053\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30ac\u30a4\u30c9\u3067\u306f\u3001\u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\u304b\u3089\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u3001\u30c6\u30b9\u30c8\u307e\u3067\u306e\u4e00\u9023\u306e\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\u3002</p> <p></p>"},{"location":"#2","title":"2. \u524d\u63d0\u6761\u4ef6","text":"<p>Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u3067\u3059\uff1a</p> \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3 \u5099\u8003 Go 1.23 \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e Docker \u6700\u65b0 \u30b3\u30f3\u30c6\u30ca\u5316 Docker Compose \u6700\u65b0 \u30de\u30eb\u30c1\u30b3\u30f3\u30c6\u30ca\u7ba1\u7406 Git \u6700\u65b0 \u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406 Node.js 20.x \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u958b\u767a"},{"location":"#3","title":"3. \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806","text":"<p>\u4ee5\u4e0b\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u5f93\u3063\u3066\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002</p> <p></p>"},{"location":"#31","title":"3.1 \u524d\u63d0\u6761\u4ef6\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>\u5404\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u5fdc\u3058\u3066\u3001\u5fc5\u8981\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002</p>"},{"location":"#311-go","title":"3.1.1 Go \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>macOS: <pre><code>brew install go\n</code></pre></p> <p>Linux (Ubuntu/Debian): <pre><code>sudo apt-get update\nsudo apt-get install golang-go\n</code></pre></p> <p>Windows: 1. Go\u516c\u5f0f\u30b5\u30a4\u30c8\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 2. \u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u5b9f\u884c\u3057\u3001\u6307\u793a\u306b\u5f93\u3046</p> <p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d: <pre><code>go version\n</code></pre></p>"},{"location":"#312-docker-docker-compose","title":"3.1.2 Docker \u3068 Docker Compose \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>macOS &amp; Windows: 1. Docker Desktop\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb</p> <p>Linux (Ubuntu/Debian): <pre><code>sudo apt-get update\nsudo apt-get install docker.io\n</code></pre></p> <p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d: <pre><code>docker --version\ndocker compose --version\n</code></pre></p>"},{"location":"#313-nodejs","title":"3.1.3 Node.js \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>macOS: <pre><code>brew install node@20\n</code></pre></p> <p>Linux (Ubuntu/Debian): <pre><code>curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -\nsudo apt-get install -y nodejs\n</code></pre></p> <p>Windows: 1. Node.js\u516c\u5f0f\u30b5\u30a4\u30c8\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 2. \u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u5b9f\u884c\u3057\u3001\u6307\u793a\u306b\u5f93\u3046</p> <p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d: <pre><code>node --version\nnpm --version\n</code></pre></p>"},{"location":"#32","title":"3.2 \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30af\u30ed\u30fc\u30f3","text":"<p>\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3057\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u307e\u3059\uff1a</p> <pre><code>git clone https://github.com/yourusername/go-ddd.git\ncd go-ddd\n</code></pre>"},{"location":"#33","title":"3.3 \u4f9d\u5b58\u95a2\u4fc2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>Node.js \u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff1a</p> <pre><code>npm install\n</code></pre> <p>Go \u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\uff1a</p> <pre><code>go mod download\n</code></pre>"},{"location":"#34","title":"3.4 \u958b\u767a\u74b0\u5883\u306e\u8d77\u52d5","text":"<p>Docker Compose \u3092\u4f7f\u7528\u3057\u3066\u3001\u958b\u767a\u74b0\u5883\u3092\u8d77\u52d5\u3057\u307e\u3059\uff1a</p> <pre><code>docker compose up -d\n</code></pre> <p>\u8d77\u52d5\u3057\u305f\u30b5\u30fc\u30d3\u30b9\u3092\u78ba\u8a8d\u3057\u307e\u3059\uff1a</p> <pre><code>docker compose ps\n</code></pre> <p>\u4ee5\u4e0b\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u8d77\u52d5\u3057\u307e\u3059\uff1a - PostgreSQL (\u30dd\u30fc\u30c8 9920) - MySQL (\u30dd\u30fc\u30c8 3306) - Wiki.js (\u30dd\u30fc\u30c8 80) - PlantUML Server (\u30dd\u30fc\u30c8 9999)</p>"},{"location":"#35","title":"3.5 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u8d77\u52d5\u6642\u306b\u81ea\u52d5\u7684\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u60c5\u5831\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff1a</p> <p>PostgreSQL: - \u30db\u30b9\u30c8: localhost - \u30dd\u30fc\u30c8: 9920 - \u30e6\u30fc\u30b6\u30fc: root - \u30d1\u30b9\u30ef\u30fc\u30c9: password - \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9: mydb</p>"},{"location":"#36","title":"3.6 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u69cb\u7bc9","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\uff1a</p> <pre><code>go build -o app/backend/cmd/marketplace/marketplace app/backend/cmd/marketplace/main.go\n</code></pre>"},{"location":"#37","title":"3.7 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c","text":"<p>\u30d3\u30eb\u30c9\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u307e\u3059\uff1a</p> <pre><code>./app/backend/cmd/marketplace/marketplace\n</code></pre> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30dd\u30fc\u30c89090\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\uff1a</p> <pre><code>http://localhost:9090/api/v1/health\n</code></pre>"},{"location":"#38","title":"3.8 \u30c6\u30b9\u30c8\u306e\u5b9f\u884c","text":"<p>\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\uff1a</p> <pre><code>cd app/backend\ngo test ./...\n</code></pre>"},{"location":"#4","title":"4. \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u9020","text":"<p>Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u539f\u5247\u306b\u5f93\u3063\u3066\u3001\u4ee5\u4e0b\u306e\u30ec\u30a4\u30e4\u30fc\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\uff1a</p> <p></p>"},{"location":"#41","title":"4.1 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020","text":"<pre><code>go-ddd/\n\u251c\u2500\u2500 app/\n\u2502   \u2514\u2500\u2500 backend/\n\u2502       \u251c\u2500\u2500 cmd/\n\u2502       \u2502   \u2514\u2500\u2500 marketplace/\n\u2502       \u2502       \u2514\u2500\u2500 main.go\n\u2502       \u2514\u2500\u2500 internal/\n\u2502           \u251c\u2500\u2500 domain/\n\u2502           \u2502   \u251c\u2500\u2500 entities/\n\u2502           \u2502   \u2514\u2500\u2500 repositories/\n\u2502           \u251c\u2500\u2500 application/\n\u2502           \u2502   \u251c\u2500\u2500 services/\n\u2502           \u2502   \u251c\u2500\u2500 command/\n\u2502           \u2502   \u2514\u2500\u2500 query/\n\u2502           \u251c\u2500\u2500 infrastructure/\n\u2502           \u2502   \u2514\u2500\u2500 db/\n\u2502           \u2514\u2500\u2500 interface/\n\u2502               \u2514\u2500\u2500 api/\n\u2502                   \u2514\u2500\u2500 rest/\n\u251c\u2500\u2500 docs/\n\u2502   \u2514\u2500\u2500 wiki/\n\u251c\u2500\u2500 ops/\n\u2502   \u2514\u2500\u2500 docker/\n\u2514\u2500\u2500 docker-compose.yml\n</code></pre>"},{"location":"#42","title":"4.2 \u4e3b\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8","text":""},{"location":"#421","title":"4.2.1 \u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4e2d\u5fc3\u3067\u3042\u308a\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3068\u30eb\u30fc\u30eb\u3092\u542b\u307f\u307e\u3059\u3002</p> <ul> <li>\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3: \u5546\u54c1\uff08Product\uff09\u3084\u51fa\u54c1\u8005\uff08Seller\uff09\u306a\u3069\u306e\u30d3\u30b8\u30cd\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</li> <li>\u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9: \u30c7\u30fc\u30bf\u306e\u6c38\u7d9a\u5316\u3092\u62c5\u5f53\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9</li> </ul>"},{"location":"#422","title":"4.2.2 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306f\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u3001\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8abf\u6574\u3057\u307e\u3059\u3002</p> <ul> <li>\u30b5\u30fc\u30d3\u30b9: \u5546\u54c1\u30b5\u30fc\u30d3\u30b9\u3084\u51fa\u54c1\u8005\u30b5\u30fc\u30d3\u30b9\u306a\u3069\u3001\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u30b5\u30fc\u30d3\u30b9</li> <li>\u30b3\u30de\u30f3\u30c9: \u30c9\u30e1\u30a4\u30f3\u306e\u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u64cd\u4f5c\uff08\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\uff09</li> <li>\u30af\u30a8\u30ea: \u30c9\u30e1\u30a4\u30f3\u304b\u3089\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u64cd\u4f5c\uff08\u8aad\u307f\u53d6\u308a\u64cd\u4f5c\uff09</li> </ul>"},{"location":"#423","title":"4.2.3 \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ec\u30a4\u30e4\u30fc\u306f\u3001\u6c38\u7d9a\u5316\u3084\u305d\u306e\u4ed6\u306e\u6280\u8853\u7684\u306a\u95a2\u5fc3\u4e8b\u3092\u51e6\u7406\u3057\u307e\u3059\u3002</p> <ul> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5b9f\u88c5: \u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5b9f\u88c5\uff08GORM \u3092\u4f7f\u7528\uff09</li> </ul>"},{"location":"#424","title":"4.2.4 \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc\u306f\u3001\u5916\u90e8\u4e16\u754c\u3068\u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3057\u307e\u3059\u3002</p> <ul> <li>REST API: \u5546\u54c1\u3084\u51fa\u54c1\u8005\u306b\u95a2\u3059\u308bREST API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u63d0\u4f9b</li> </ul>"},{"location":"#5-api","title":"5. API \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8","text":"<p>Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u4ee5\u4e0b\u306eREST API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff1a</p> <p></p>"},{"location":"#51-api","title":"5.1 \u5546\u54c1 API","text":"\u30e1\u30bd\u30c3\u30c9 \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 \u8aac\u660e POST /api/v1/products \u65b0\u3057\u3044\u5546\u54c1\u3092\u4f5c\u6210 GET /api/v1/products \u3059\u3079\u3066\u306e\u5546\u54c1\u3092\u53d6\u5f97 GET /api/v1/products/{id} \u6307\u5b9aID\u306e\u5546\u54c1\u3092\u53d6\u5f97 PUT /api/v1/products/{id} \u6307\u5b9aID\u306e\u5546\u54c1\u3092\u66f4\u65b0"},{"location":"#52-api","title":"5.2 \u51fa\u54c1\u8005 API","text":"\u30e1\u30bd\u30c3\u30c9 \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 \u8aac\u660e POST /api/v1/sellers \u65b0\u3057\u3044\u51fa\u54c1\u8005\u3092\u4f5c\u6210 GET /api/v1/sellers \u3059\u3079\u3066\u306e\u51fa\u54c1\u8005\u3092\u53d6\u5f97 GET /api/v1/sellers/{id} \u6307\u5b9aID\u306e\u51fa\u54c1\u8005\u3092\u53d6\u5f97 PUT /api/v1/sellers/{id}/name \u6307\u5b9aID\u306e\u51fa\u54c1\u8005\u306e\u540d\u524d\u3092\u66f4\u65b0 PUT /api/v1/sellers/{id}/email \u6307\u5b9aID\u306e\u51fa\u54c1\u8005\u306e\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u66f4\u65b0 DELETE /api/v1/sellers/{id} \u6307\u5b9aID\u306e\u51fa\u54c1\u8005\u3092\u524a\u9664"},{"location":"#53-api","title":"5.3 \u30b7\u30b9\u30c6\u30e0 API","text":"\u30e1\u30bd\u30c3\u30c9 \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 \u8aac\u660e GET /api/v1/health \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af"},{"location":"#6","title":"6. \u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0","text":""},{"location":"#61","title":"6.1 \u3088\u304f\u3042\u308b\u554f\u984c\u3068\u89e3\u6c7a\u7b56","text":""},{"location":"#_1","title":"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u30a8\u30e9\u30fc","text":"<p>\u75c7\u72b6: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u6642\u306b\u300cFailed to connect to database\u300d\u306a\u3069\u306e\u30a8\u30e9\u30fc\u304c\u8868\u793a\u3055\u308c\u308b</p> <p>\u89e3\u6c7a\u7b56: 1. Docker Compose\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u304b\u78ba\u8a8d: <code>docker compose ps</code> 2. \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u60c5\u5831\u304c\u6b63\u3057\u3044\u304b\u78ba\u8a8d 3. \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b3\u30f3\u30c6\u30ca\u306b\u76f4\u63a5\u63a5\u7d9a\u3057\u3066\u307f\u308b: <code>docker compose exec db_postgresql psql -U root -d mydb</code></p>"},{"location":"#_2","title":"\u30d3\u30eb\u30c9\u30a8\u30e9\u30fc","text":"<p>\u75c7\u72b6: <code>go build</code> \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b</p> <p>\u89e3\u6c7a\u7b56: 1. Go\u4f9d\u5b58\u95a2\u4fc2\u304c\u6b63\u3057\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d: <code>go mod download</code> 2. \u4f9d\u5b58\u95a2\u4fc2\u3092\u6574\u7406: <code>go mod tidy</code> 3. Go\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c1.23\u4ee5\u4e0a\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d: <code>go version</code></p>"},{"location":"#_3","title":"\u5b9f\u884c\u6642\u30a8\u30e9\u30fc","text":"<p>\u75c7\u72b6: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b</p> <p>\u89e3\u6c7a\u7b56: 1. \u30ed\u30b0\u3092\u78ba\u8a8d\u3057\u3066\u5177\u4f53\u7684\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u7279\u5b9a 2. \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u6210\u529f\u3057\u305f\u304b\u78ba\u8a8d 3. \u5fc5\u8981\u306a\u30c6\u30fc\u30d6\u30eb\u304c\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d</p>"},{"location":"#7","title":"7. \u307e\u3068\u3081","text":"<p>\u3053\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30ac\u30a4\u30c9\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\uff10\u304b\u3089\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u539f\u5247\u306b\u5f93\u3063\u3066\u69cb\u7bc9\u3055\u308c\u305f\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u63a1\u7528\u3057\u3001\u5404\u30ec\u30a4\u30e4\u30fc\u304c\u660e\u78ba\u306b\u5206\u96e2\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p></p> <p>\u3053\u306e\u30ac\u30a4\u30c9\u306b\u5f93\u3046\u3053\u3068\u3067\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7c21\u5358\u306b\u69cb\u7bc9\u3057\u3001\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u539f\u5247\u3092\u5b66\u3073\u3001\u5b9f\u8df5\u3059\u308b\u305f\u3081\u306e\u826f\u3044\u4f8b\u3068\u3057\u3066\u3082\u6d3b\u7528\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"#8","title":"8. \u53c2\u8003\u30ea\u30f3\u30af","text":"<ul> <li>Go\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>Docker\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>GORM\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>Echo Framework\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9</li> </ul>"},{"location":"architecture/","title":"Go-DDD \u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u8aac\u660e\u3059\u308b\u3082\u306e\u3067\u3059\u3002</p> <p></p> <p></p>"},{"location":"architecture/#1","title":"1. \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u6982\u8981","text":"<p>Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\uff08Domain-Driven Design, DDD\uff09\u306e\u539f\u5247\u306b\u5f93\u3063\u3066\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u4ee5\u4e0b\u306e\u4e3b\u8981\u306a\u30ec\u30a4\u30e4\u30fc\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\uff1a</p> <ol> <li>\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc: \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3068\u30eb\u30fc\u30eb\u3092\u542b\u3080</li> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc: \u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u3001\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u3092\u8abf\u6574\u3059\u308b</li> <li>\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ec\u30a4\u30e4\u30fc: \u6c38\u7d9a\u5316\u3084\u305d\u306e\u4ed6\u306e\u6280\u8853\u7684\u306a\u95a2\u5fc3\u4e8b\u3092\u51e6\u7406\u3059\u308b</li> <li>\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc: \u5916\u90e8\u4e16\u754c\u3068\u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b</li> </ol> <p>\u3053\u308c\u3089\u306e\u30ec\u30a4\u30e4\u30fc\u306f\u3001\u4f9d\u5b58\u95a2\u4fc2\u306e\u65b9\u5411\u304c\u5185\u5074\u306b\u5411\u304b\u3046\u3088\u3046\u306b\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\uff08\u30aa\u30cb\u30aa\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\uff09\u3002\u3064\u307e\u308a\u3001\u5185\u5074\u306e\u30ec\u30a4\u30e4\u30fc\u306f\u5916\u5074\u306e\u30ec\u30a4\u30e4\u30fc\u306b\u4f9d\u5b58\u3057\u307e\u305b\u3093\u3002</p>"},{"location":"architecture/#2","title":"2. \u30ec\u30a4\u30e4\u30fc\u8a73\u7d30","text":""},{"location":"architecture/#21","title":"2.1 \u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4e2d\u5fc3\u3067\u3042\u308a\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3068\u30eb\u30fc\u30eb\u3092\u542b\u307f\u307e\u3059\u3002</p>"},{"location":"architecture/#211","title":"2.1.1 \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3","text":"<ul> <li>Product: \u5546\u54c1\u3092\u8868\u3059\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3</li> <li>Seller: \u51fa\u54c1\u8005\u3092\u8868\u3059\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3</li> <li>ValidatedProduct: \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u6e08\u307f\u306e\u5546\u54c1\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3</li> <li>ValidatedSeller: \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u6e08\u307f\u306e\u51fa\u54c1\u8005\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3</li> </ul>"},{"location":"architecture/#212","title":"2.1.2 \u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9","text":"<ul> <li>ProductRepository: \u5546\u54c1\u306e\u6c38\u7d9a\u5316\u3092\u62c5\u5f53\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9</li> <li>SellerRepository: \u51fa\u54c1\u8005\u306e\u6c38\u7d9a\u5316\u3092\u62c5\u5f53\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9</li> </ul>"},{"location":"architecture/#22","title":"2.2 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306f\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u3001\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8abf\u6574\u3057\u307e\u3059\u3002</p>"},{"location":"architecture/#221","title":"2.2.1 \u30b5\u30fc\u30d3\u30b9","text":"<ul> <li>ProductService: \u5546\u54c1\u95a2\u9023\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u30b5\u30fc\u30d3\u30b9</li> <li>SellerService: \u51fa\u54c1\u8005\u95a2\u9023\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u30b5\u30fc\u30d3\u30b9</li> </ul>"},{"location":"architecture/#222","title":"2.2.2 \u30b3\u30de\u30f3\u30c9\u3068\u30af\u30a8\u30ea","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306fCQRS\uff08Command Query Responsibility Segregation\uff09\u30d1\u30bf\u30fc\u30f3\u3092\u63a1\u7528\u3057\u3066\u3044\u307e\u3059\uff1a</p> <ul> <li>Command: \u30c9\u30e1\u30a4\u30f3\u306e\u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u64cd\u4f5c\uff08\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\uff09</li> <li>Query: \u30c9\u30e1\u30a4\u30f3\u304b\u3089\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u64cd\u4f5c\uff08\u8aad\u307f\u53d6\u308a\u64cd\u4f5c\uff09</li> </ul>"},{"location":"architecture/#223","title":"2.2.3 \u30de\u30c3\u30d1\u30fc","text":"<ul> <li>\u30c9\u30e1\u30a4\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u5916\u90e8\u8868\u73fe\uff08DTO\u306a\u3069\uff09\u306e\u9593\u306e\u5909\u63db\u3092\u62c5\u5f53</li> </ul>"},{"location":"architecture/#23","title":"2.3 \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ec\u30a4\u30e4\u30fc\u306f\u3001\u6c38\u7d9a\u5316\u3084\u305d\u306e\u4ed6\u306e\u6280\u8853\u7684\u306a\u95a2\u5fc3\u4e8b\u3092\u51e6\u7406\u3057\u307e\u3059\u3002</p>"},{"location":"architecture/#231","title":"2.3.1 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5b9f\u88c5","text":"<ul> <li>PostgreSQL: \u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306ePostgreSQL\u5b9f\u88c5</li> <li>GormProductRepository: \u5546\u54c1\u30ea\u30dd\u30b8\u30c8\u30ea\u306eGORM\u5b9f\u88c5</li> <li>GormSellerRepository: \u51fa\u54c1\u8005\u30ea\u30dd\u30b8\u30c8\u30ea\u306eGORM\u5b9f\u88c5</li> </ul>"},{"location":"architecture/#24","title":"2.4 \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc\u306f\u3001\u5916\u90e8\u4e16\u754c\u3068\u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3057\u307e\u3059\u3002</p>"},{"location":"architecture/#241-rest-api","title":"2.4.1 REST API","text":"<ul> <li>ProductController: \u5546\u54c1\u95a2\u9023\u306eREST API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u63d0\u4f9b</li> <li>SellerController: \u51fa\u54c1\u8005\u95a2\u9023\u306eREST API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u63d0\u4f9b</li> </ul>"},{"location":"architecture/#3","title":"3. \u4f9d\u5b58\u95a2\u4fc2\u306e\u6d41\u308c","text":"<p>\u4f9d\u5b58\u95a2\u4fc2\u306f\u5185\u5074\u306b\u5411\u304b\u3063\u3066\u6d41\u308c\u307e\u3059\uff1a</p> <ol> <li>\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306b\u4f9d\u5b58</li> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306f\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u306b\u4f9d\u5b58</li> <li>\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ec\u30a4\u30e4\u30fc\u306f\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u306b\u4f9d\u5b58\uff08\u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\uff09</li> </ol>"},{"location":"architecture/#4","title":"4. \u4e3b\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u9593\u306e\u76f8\u4e92\u4f5c\u7528","text":"<ol> <li>REST API\u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406:</li> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304cREST API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1</li> <li>\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001\u9069\u5207\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d3\u30b9\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059</li> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d3\u30b9\u304c\u30c9\u30e1\u30a4\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f7f\u7528\u3057\u3066\u64cd\u4f5c\u3092\u5b9f\u884c</li> <li> <p>\u7d50\u679c\u304c\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306b\u8fd4\u3055\u308c\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u9001\u4fe1\u3055\u308c\u308b</p> </li> <li> <p>\u5546\u54c1\u4f5c\u6210\u30d5\u30ed\u30fc:</p> </li> </ol> <p></p> <ul> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u5546\u54c1\u4f5c\u6210\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1</li> <li>ProductController\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001ProductService\u306eCreate\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059</li> <li>ProductService\u304c\u5546\u54c1\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f5c\u6210\u3057\u3001\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c</li> <li>ProductService\u304cProductRepository\u3092\u4f7f\u7528\u3057\u3066\u5546\u54c1\u3092\u4fdd\u5b58</li> <li> <p>\u7d50\u679c\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3055\u308c\u308b</p> </li> <li> <p>\u51fa\u54c1\u8005\u66f4\u65b0\u30d5\u30ed\u30fc:</p> </li> </ul> <p></p> <ul> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u51fa\u54c1\u8005\u66f4\u65b0\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1</li> <li>SellerController\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001SellerService\u306eUpdate\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059</li> <li>SellerService\u304c\u51fa\u54c1\u8005\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u53d6\u5f97\u3057\u3001\u66f4\u65b0\u3057\u3001\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c</li> <li>SellerService\u304cSellerRepository\u3092\u4f7f\u7528\u3057\u3066\u51fa\u54c1\u8005\u3092\u4fdd\u5b58</li> <li> <p>\u7d50\u679c\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3055\u308c\u308b</p> </li> <li> <p>\u5546\u54c1\u4e00\u89a7\u53d6\u5f97\u30d5\u30ed\u30fc:</p> </li> </ul> <p></p> <ul> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u5546\u54c1\u4e00\u89a7\u53d6\u5f97\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1</li> <li>ProductController\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001ProductService\u306eFindAll\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059</li> <li>ProductService\u304cProductRepository\u3092\u4f7f\u7528\u3057\u3066\u5168\u5546\u54c1\u3092\u53d6\u5f97</li> <li> <p>\u7d50\u679c\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3055\u308c\u308b</p> </li> <li> <p>\u5546\u54c1\u8a73\u7d30\u53d6\u5f97\u30d5\u30ed\u30fc:</p> </li> </ul> <p></p> <ul> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u5546\u54c1\u8a73\u7d30\u53d6\u5f97\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1</li> <li>ProductController\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001ProductService\u306eById\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059</li> <li>ProductService\u304cProductRepository\u3092\u4f7f\u7528\u3057\u3066\u6307\u5b9aID\u306e\u5546\u54c1\u3092\u53d6\u5f97</li> <li> <p>\u7d50\u679c\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3055\u308c\u308b</p> </li> <li> <p>\u5546\u54c1\u66f4\u65b0\u30d5\u30ed\u30fc:</p> </li> </ul> <p></p> <ul> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u5546\u54c1\u66f4\u65b0\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1</li> <li>ProductController\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001ProductService\u306eUpdate\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059</li> <li>ProductService\u304c\u5546\u54c1\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u53d6\u5f97\u3057\u3001\u66f4\u65b0\u3057\u3001\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c</li> <li>ProductService\u304cProductRepository\u3092\u4f7f\u7528\u3057\u3066\u5546\u54c1\u3092\u66f4\u65b0</li> <li> <p>\u7d50\u679c\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3055\u308c\u308b</p> </li> <li> <p>\u51fa\u54c1\u8005\u4f5c\u6210\u30d5\u30ed\u30fc:</p> </li> </ul> <p></p> <ul> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u51fa\u54c1\u8005\u4f5c\u6210\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1</li> <li>SellerController\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001SellerService\u306eCreate\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059</li> <li>SellerService\u304c\u51fa\u54c1\u8005\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f5c\u6210\u3057\u3001\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c</li> <li>SellerService\u304cSellerRepository\u3092\u4f7f\u7528\u3057\u3066\u51fa\u54c1\u8005\u3092\u4fdd\u5b58</li> <li> <p>\u7d50\u679c\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3055\u308c\u308b</p> </li> <li> <p>\u51fa\u54c1\u8005\u4e00\u89a7\u53d6\u5f97\u30d5\u30ed\u30fc:</p> </li> </ul> <p></p> <ul> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u51fa\u54c1\u8005\u4e00\u89a7\u53d6\u5f97\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1</li> <li>SellerController\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001SellerService\u306eFindAll\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059</li> <li>SellerService\u304cSellerRepository\u3092\u4f7f\u7528\u3057\u3066\u5168\u51fa\u54c1\u8005\u3092\u53d6\u5f97</li> <li> <p>\u7d50\u679c\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3055\u308c\u308b</p> </li> <li> <p>\u51fa\u54c1\u8005\u8a73\u7d30\u53d6\u5f97\u30d5\u30ed\u30fc:</p> </li> </ul> <p></p> <ul> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u51fa\u54c1\u8005\u8a73\u7d30\u53d6\u5f97\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1</li> <li>SellerController\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001SellerService\u306eById\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059</li> <li>SellerService\u304cSellerRepository\u3092\u4f7f\u7528\u3057\u3066\u6307\u5b9aID\u306e\u51fa\u54c1\u8005\u3092\u53d6\u5f97</li> <li> <p>\u7d50\u679c\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3055\u308c\u308b</p> </li> <li> <p>\u51fa\u54c1\u8005\u524a\u9664\u30d5\u30ed\u30fc:</p> </li> </ul> <p></p> <ul> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u51fa\u54c1\u8005\u524a\u9664\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1</li> <li>SellerController\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001SellerService\u306eDelete\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059</li> <li>SellerService\u304c\u51fa\u54c1\u8005\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u53d6\u5f97\u3057\u3001\u524a\u9664\u3092\u5b9f\u884c</li> <li>SellerService\u304cSellerRepository\u3092\u4f7f\u7528\u3057\u3066\u51fa\u54c1\u8005\u3092\u524a\u9664</li> <li> <p>\u7d50\u679c\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3055\u308c\u308b</p> </li> <li> <p>JWT\u8a8d\u8a3c\u30d5\u30ed\u30fc:</p> </li> </ul> <p></p> <ul> <li> <p>\u30ed\u30b0\u30a4\u30f3\u30d5\u30ed\u30fc:</p> <ul> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30ed\u30b0\u30a4\u30f3\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1</li> <li>AuthController\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001UserService\u306e\u8a8d\u8a3c\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059</li> <li>UserService\u304c\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u691c\u8a3c\u3057\u3001\u8a8d\u8a3c\u7d50\u679c\u3092\u8fd4\u3059</li> <li>\u8a8d\u8a3c\u6210\u529f\u6642\u3001AuthController\u304cJWT\u30c8\u30fc\u30af\u30f3\u3092\u751f\u6210\u3057\u3066\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3059</li> </ul> </li> <li> <p>\u4fdd\u8b77\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u30d5\u30ed\u30fc:</p> <ul> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u4fdd\u8b77\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\uff08Authorization: Bearer \u30d8\u30c3\u30c0\u30fc\u4ed8\u304d\uff09 <li>JWT\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u304c\u30c8\u30fc\u30af\u30f3\u3092\u691c\u8a3c\uff08\u7f72\u540d\u3068\u6709\u52b9\u671f\u9650\uff09</li> <li>\u30c8\u30fc\u30af\u30f3\u304c\u6709\u52b9\u306a\u5834\u5408\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u51e6\u7406\u3055\u308c\u3001\u7d50\u679c\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3055\u308c\u308b</li> <li>\u30c8\u30fc\u30af\u30f3\u304c\u7121\u52b9\u306a\u5834\u5408\u3001401 Unauthorized\u30a8\u30e9\u30fc\u304c\u8fd4\u3055\u308c\u308b</li> <p>JWT\u8a8d\u8a3c\u306f\u4ee5\u4e0b\u306e\u5f79\u5272\u3092\u62c5\u3044\u307e\u3059\uff1a</p> <ol> <li>\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c: \u30e6\u30fc\u30b6\u30fc\u306e\u30ed\u30b0\u30a4\u30f3\u60c5\u5831\u3092\u691c\u8a3c\u3057\u3001\u6709\u52b9\u306a\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\u3092\u767a\u884c\u3057\u307e\u3059\u3002</li> <li>\u30a2\u30af\u30bb\u30b9\u5236\u5fa1: \u4fdd\u8b77\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u5236\u9650\u3057\u3001\u8a8d\u8a3c\u3055\u308c\u305f\u30e6\u30fc\u30b6\u30fc\u306e\u307f\u304c\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</li> <li>\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u8a8d\u8a3c: \u30b5\u30fc\u30d0\u30fc\u5074\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u72b6\u614b\u3092\u4fdd\u6301\u305b\u305a\u3001\u30c8\u30fc\u30af\u30f3\u81ea\u4f53\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u542b\u3081\u308b\u3053\u3068\u3067\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306a\u8a8d\u8a3c\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002</li> <li>\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u8a8d\u8a3c: \u7570\u306a\u308b\u30c9\u30e1\u30a4\u30f3\u9593\u3067\u3082\u8a8d\u8a3c\u60c5\u5831\u3092\u5b89\u5168\u306b\u5171\u6709\u3067\u304d\u307e\u3059\u3002</li> </ol>"},{"location":"cucumber_japanese_support/","title":"Cucumber\u65e5\u672c\u8a9e\u30b5\u30dd\u30fc\u30c8","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067Cucumber\u30d5\u30a3\u30fc\u30c1\u30e3\u3092\u65e5\u672c\u8a9e\u3067\u8a18\u8ff0\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002</p>"},{"location":"cucumber_japanese_support/#_1","title":"\u6982\u8981","text":"<p>Cucumber\u306f\u30d5\u30a3\u30fc\u30c1\u30e3\u30d5\u30a1\u30a4\u30eb\u3092\u8a18\u8ff0\u3059\u308b\u305f\u3081\u306e\u8907\u6570\u306e\u8a00\u8a9e\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u65e5\u672c\u8a9e\u30b5\u30dd\u30fc\u30c8\u3092\u6709\u52b9\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u4ee5\u4e0b\u306e\u5909\u66f4\u3092\u884c\u3044\u307e\u3057\u305f\uff1a</p> <ol> <li>\u5404\u30d5\u30a3\u30fc\u30c1\u30e3\u30d5\u30a1\u30a4\u30eb\u306e\u5148\u982d\u306b <code># language: ja</code> \u3092\u8ffd\u52a0</li> <li>\u82f1\u8a9e\u306eGherkin\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u65e5\u672c\u8a9e\u306e\u540c\u7b49\u306e\u3082\u306e\u306b\u7f6e\u304d\u63db\u3048</li> </ol>"},{"location":"cucumber_japanese_support/#gherkin","title":"\u65e5\u672c\u8a9eGherkin\u30ad\u30fc\u30ef\u30fc\u30c9","text":"<p>\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u7528\u3055\u308c\u308bGherkin\u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u65e5\u672c\u8a9e\u306e\u540c\u7b49\u8a9e\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff1a</p> \u82f1\u8a9e \u65e5\u672c\u8a9e Feature \u30d5\u30a3\u30fc\u30c1\u30e3 Scenario \u30b7\u30ca\u30ea\u30aa Given \u524d\u63d0 When \u3082\u3057 Then \u306a\u3089\u3070 And \u304b\u3064"},{"location":"cucumber_japanese_support/#_2","title":"\u4f8b","text":"<pre><code># language: ja\n\u30d5\u30a3\u30fc\u30c1\u30e3: \u5546\u54c1\u7ba1\u7406\n  \u30b7\u30b9\u30c6\u30e0\u5185\u306e\u5546\u54c1\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\n  \u30e6\u30fc\u30b6\u30fc\u3068\u3057\u3066\n  \u5546\u54c1\u306e\u4f5c\u6210\u3001\u8aad\u307f\u53d6\u308a\u3001\u66f4\u65b0\u3001\u524a\u9664\u304c\u3067\u304d\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\n  \u30b7\u30ca\u30ea\u30aa: \u65b0\u3057\u3044\u5546\u54c1\u3092\u4f5c\u6210\u3059\u308b\n    \u524d\u63d0 \u5546\u54c1\u306e\u8a73\u7d30\u3092\u6301\u3063\u3066\u3044\u307e\u3059\n      | \u540d\u524d        | \u4fa1\u683c  |\n      | \u30c6\u30b9\u30c8\u5546\u54c1  | 10.99 |\n    \u304b\u3064 \u51fa\u54c1\u8005\u3092\u6301\u3063\u3066\u3044\u307e\u3059\n    \u3082\u3057 \u65b0\u3057\u3044\u5546\u54c1\u3092\u4f5c\u6210\u3057\u307e\u3059\n    \u306a\u3089\u3070 \u5546\u54c1\u304c\u30b7\u30b9\u30c6\u30e0\u306b\u4fdd\u5b58\u3055\u308c\u308b\u3079\u304d\u3067\u3059\n    \u304b\u3064 ID\u3067\u5546\u54c1\u3092\u53d6\u5f97\u3067\u304d\u308b\u3079\u304d\u3067\u3059\n</code></pre>"},{"location":"cucumber_japanese_support/#_3","title":"\u65e5\u672c\u8a9e\u3067\u65b0\u3057\u3044\u30d5\u30a3\u30fc\u30c1\u30e3\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5","text":"<p>\u65e5\u672c\u8a9e\u3067\u65b0\u3057\u3044\u30d5\u30a3\u30fc\u30c1\u30e3\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\uff1a</p> <ol> <li><code>.feature</code> \u62e1\u5f35\u5b50\u3067\u65b0\u3057\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059</li> <li>\u30d5\u30a1\u30a4\u30eb\u306e\u6700\u521d\u306e\u884c\u3068\u3057\u3066 <code># language: ja</code> \u3092\u8ffd\u52a0\u3057\u307e\u3059</li> <li>\u65e5\u672c\u8a9e\u306eGherkin\u30ad\u30fc\u30ef\u30fc\u30c9\uff08\u30d5\u30a3\u30fc\u30c1\u30e3, \u30b7\u30ca\u30ea\u30aa, \u524d\u63d0, \u3082\u3057, \u306a\u3089\u3070, \u304b\u3064\uff09\u3092\u4f7f\u7528\u3057\u307e\u3059</li> <li>\u30b9\u30c6\u30c3\u30d7\u306e\u5b9f\u88c5\u306f\u82f1\u8a9e\uff08\u307e\u305f\u306f\u30b9\u30c6\u30c3\u30d7\u5b9a\u7fa9\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u4efb\u610f\u306e\u8a00\u8a9e\uff09\u3067\u8a18\u8ff0\u3057\u307e\u3059</li> </ol>"},{"location":"cucumber_japanese_support/#_4","title":"\u6ce8\u610f\u4e8b\u9805","text":"<ul> <li>Gherkin\u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u307f\u304c\u65e5\u672c\u8a9e\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30b9\u30c6\u30c3\u30d7\u306e\u5b9f\u88c5\u3068\u8aac\u660e\u306f\u4efb\u610f\u306e\u8a00\u8a9e\u3067\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002</li> <li>\u30b3\u30fc\u30c9\u5185\u306e\u30b9\u30c6\u30c3\u30d7\u5b9a\u7fa9\u306f\u3001\u30b9\u30c6\u30c3\u30d7\u5185\u306e\u82f1\u8a9e\u306e\u30c6\u30ad\u30b9\u30c8\u3068\u4e00\u81f4\u3059\u308b\u305f\u3081\u3001\u5909\u66f4\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002</li> <li>\u30c6\u30fc\u30d6\u30eb\u306e\u30d8\u30c3\u30c0\u30fc\u3082\u65e5\u672c\u8a9e\u306b\u7ffb\u8a33\u3067\u304d\u307e\u3059\u304c\u3001\u305d\u306e\u5834\u5408\u306f\u30b9\u30c6\u30c3\u30d7\u5b9a\u7fa9\u95a2\u6570\u5185\u3067\u30d8\u30c3\u30c0\u30fc\u540d\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</li> </ul>"},{"location":"documentation_summary/","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u4f5c\u696d\u6982\u8981","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001Go-DDD\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u5b9f\u65bd\u3057\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u4f5c\u696d\u306e\u6982\u8981\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3084\u5831\u544a\u66f8\u4f5c\u6210\u306e\u969b\u306b\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"documentation_summary/#1","title":"1. \u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u69cb\u9020","text":"<p>Go-DDD\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u4ee5\u4e0b\u306e\u69cb\u9020\u3067\u6574\u7406\u3055\u308c\u3066\u3044\u307e\u3059\uff1a</p> <pre><code>docs/\n\u251c\u2500\u2500 adr/                 # \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u6c7a\u5b9a\u8a18\u9332\n\u251c\u2500\u2500 images/              # \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u7528\u753b\u50cf\n\u251c\u2500\u2500 slides/              # \u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u8cc7\u6599\n\u2514\u2500\u2500 wiki/                # \u30d7\u30ed\u30b8\u30a7\u30af\u30c8Wiki\n    \u251c\u2500\u2500 architecture.md  # \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u8aac\u660e\n    \u251c\u2500\u2500 feature_list.md  # \u6a5f\u80fd\u4e00\u89a7\n    \u251c\u2500\u2500 home.md          # \u30db\u30fc\u30e0\u30da\u30fc\u30b8\n    \u251c\u2500\u2500 ...              # \u305d\u306e\u4ed6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n</code></pre>"},{"location":"documentation_summary/#2","title":"2. \u4e3b\u8981\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":""},{"location":"documentation_summary/#21","title":"2.1 \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<p>\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff08<code>architecture.md</code>\uff09\u3067\u306f\u3001Go-DDD\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u3064\u3044\u3066\u8a73\u7d30\u306b\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002\u4e3b\u306a\u5185\u5bb9\uff1a</p> <ul> <li>\u30aa\u30cb\u30aa\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u63a1\u7528\u3068\u5b9f\u88c5\u65b9\u6cd5</li> <li>\u30c9\u30e1\u30a4\u30f3\u5c64\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u5c64\u306e\u5206\u96e2</li> <li>\u4f9d\u5b58\u95a2\u4fc2\u306e\u65b9\u5411\u6027\u3068\u4f9d\u5b58\u6027\u6ce8\u5165\u306e\u5b9f\u8df5</li> </ul>"},{"location":"documentation_summary/#22","title":"2.2 \u5b9f\u88c5\u30ac\u30a4\u30c9","text":"<p>\u5b9f\u88c5\u95a2\u9023\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001\u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5b9f\u88c5\u8a73\u7d30\u3092\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\uff1a</p> <ul> <li><code>system_implementation.md</code> - \u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306e\u5b9f\u88c5\u6982\u8981</li> <li><code>product_implementation.md</code> - \u5546\u54c1\u95a2\u9023\u6a5f\u80fd\u306e\u5b9f\u88c5</li> <li><code>seller_implementation.md</code> - \u51fa\u54c1\u8005\u95a2\u9023\u6a5f\u80fd\u306e\u5b9f\u88c5</li> <li><code>orm_mapper_implementation.md</code> - ORM\u30de\u30c3\u30d1\u30fc\u306e\u5b9f\u88c5</li> </ul>"},{"location":"documentation_summary/#23","title":"2.3 \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30ac\u30a4\u30c9","text":"<p>\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30ac\u30a4\u30c9\uff08<code>setup_guide.md</code>\u3001<code>setup_guide_mermaid.md</code>\uff09\u3067\u306f\u3001\u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\u624b\u9806\u3092\u8a73\u7d30\u306b\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002Mermaid\u3092\u4f7f\u7528\u3057\u305f\u56f3\u89e3\u4ed8\u304d\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"documentation_summary/#24","title":"2.4 \u8a08\u753b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li><code>release_plan.md</code> - \u30ea\u30ea\u30fc\u30b9\u8a08\u753b</li> <li><code>iteration_plan.md</code> - \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u8a08\u753b</li> <li><code>user_stories.md</code> - \u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc</li> </ul>"},{"location":"documentation_summary/#25","title":"2.5 \u6280\u8853\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li><code>modules_explanation.md</code> - \u4f7f\u7528\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u89e3\u8aac</li> <li><code>echo_jwt_authentication.md</code> - Echo\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u306eJWT\u8a8d\u8a3c\u5b9f\u88c5</li> </ul>"},{"location":"documentation_summary/#3","title":"3. \u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u6280\u8853","text":"<p>Go-DDD\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u6280\u8853\u3092\u6d3b\u7528\u3057\u3066\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u4f5c\u6210\u30fb\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\uff1a</p> <ul> <li>MkDocs - \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b5\u30a4\u30c8\u751f\u6210</li> <li>Material for MkDocs - \u30e2\u30c0\u30f3\u306a\u30c6\u30fc\u30de\u3068UI</li> <li>Mermaid - \u30d5\u30ed\u30fc\u30c1\u30e3\u30fc\u30c8\u3084\u30b7\u30fc\u30b1\u30f3\u30b9\u56f3\u306e\u4f5c\u6210</li> <li>PlantUML - UML\u56f3\u306e\u4f5c\u6210</li> <li>Markdown - \u57fa\u672c\u7684\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5f62\u5f0f</li> </ul>"},{"location":"documentation_summary/#4","title":"4. \u6700\u8fd1\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u66f4\u65b0","text":"<p>2023\u5e748\u6708\u304b\u30892024\u5e7410\u6708\u306b\u304b\u3051\u3066\u3001\u4ee5\u4e0b\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u66f4\u65b0\u304c\u884c\u308f\u308c\u307e\u3057\u305f\uff1a</p> <ul> <li>2024\u5e744\u670825\u65e5: README.md\u306b\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0</li> <li>2024\u5e744\u670826\u65e5: README.md\u306b\u300cfind vs get\u300d\u306e\u8aac\u660e\u3092\u8ffd\u52a0</li> <li>2024\u5e744\u670827\u65e5: README.md\u306b\u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8\u306b\u3064\u3044\u3066\u306e\u8aac\u660e\u3092\u8ffd\u52a0</li> <li>2024\u5e745\u67084\u65e5: README.md\u306b\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u56f3\u3092\u8ffd\u52a0</li> <li>2024\u5e745\u67084\u65e5: README.md\u306e\u56f3\u3092\u66f4\u65b0</li> <li>2024\u5e749\u67083\u65e5: README.md\u306e\u5168\u4f53\u7684\u306a\u66f4\u65b0</li> </ul>"},{"location":"documentation_summary/#5","title":"5. \u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u7279\u5fb4","text":"<p>Go-DDD\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u306f\u4ee5\u4e0b\u306e\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\uff1a</p> <ol> <li>\u8996\u899a\u7684\u8aac\u660e - Mermaid\u3001PlantUML\u3092\u6d3b\u7528\u3057\u305f\u56f3\u89e3</li> <li>\u591a\u8a00\u8a9e\u5bfe\u5fdc - \u65e5\u672c\u8a9e\u3068\u82f1\u8a9e\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u63d0\u4f9b</li> <li>\u30b3\u30fc\u30c9\u9023\u643a - \u5b9f\u88c5\u30b3\u30fc\u30c9\u3068\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u6574\u5408\u6027\u3092\u7dad\u6301</li> <li>\u5909\u66f4\u5c65\u6b74\u7ba1\u7406 - \u8a73\u7d30\u306a\u5909\u66f4\u5c65\u6b74\u3092<code>revision_summary.md</code>\u3067\u7ba1\u7406</li> </ol>"},{"location":"documentation_summary/#6","title":"6. \u4eca\u5f8c\u306e\u8a08\u753b","text":"<p>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u95a2\u3059\u308b\u4eca\u5f8c\u306e\u8a08\u753b\uff1a</p> <ol> <li>API\u4ed5\u69d8\u66f8\u306e\u81ea\u52d5\u751f\u6210\u6a5f\u80fd\u306e\u8ffd\u52a0</li> <li>\u30e6\u30fc\u30b6\u30fc\u30de\u30cb\u30e5\u30a2\u30eb\u306e\u62e1\u5145</li> <li>\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30d3\u30c7\u30aa\u306e\u4f5c\u6210</li> <li>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u7d99\u7d9a\u7684\u306a\u66f4\u65b0\u3068\u6539\u5584</li> </ol>"},{"location":"documentation_summary/#7","title":"7. \u307e\u3068\u3081","text":"<p>Go-DDD\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u539f\u5247\u306b\u57fa\u3065\u3044\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3092\u652f\u63f4\u3059\u308b\u305f\u3081\u306e\u5305\u62ec\u7684\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002MkDocs\u3068Markdown\u3092\u57fa\u76e4\u3068\u3057\u3001Mermaid\u3001PlantUML\u306a\u3069\u306e\u8996\u899a\u5316\u30c4\u30fc\u30eb\u3092\u6d3b\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u7406\u89e3\u3057\u3084\u3059\u304f\u7dad\u6301\u7ba1\u7406\u304c\u5bb9\u6613\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"echo_framework_implementation/","title":"Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 Echo\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5b9f\u88c5\u306e\u8a73\u7d30\u89e3\u8aac","text":""},{"location":"echo_framework_implementation/#1","title":"1. \u6982\u8981","text":"<p>\u3053\u306e\u6587\u66f8\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308bEcho\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u89e3\u8aac\u3057\u307e\u3059\u3002Echo\u306f\u9ad8\u6027\u80fd\u3067\u30df\u30cb\u30de\u30eb\u306aGo\u306eWeb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308a\u3001RESTful API\u306e\u69cb\u7bc9\u306b\u9069\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"echo_framework_implementation/#11-echo","title":"1.1 Echo\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u5f79\u5272","text":"<p>Echo\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u4ee5\u4e0b\u306e\u5f79\u5272\u3092\u62c5\u3044\u307e\u3059\uff1a</p> <ol> <li>HTTP\u30ea\u30af\u30a8\u30b9\u30c8/\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u51e6\u7406: \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306eHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001\u9069\u5207\u306a\u30cf\u30f3\u30c9\u30e9\u306b\u8ee2\u9001\u3057\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002</li> <li>\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0: URL\u30d1\u30b9\u3068HTTP\u30e1\u30bd\u30c3\u30c9\u306b\u57fa\u3065\u3044\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9069\u5207\u306a\u30cf\u30f3\u30c9\u30e9\u95a2\u6570\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\u3002</li> <li>\u30df\u30c9\u30eb\u30a6\u30a7\u30a2: \u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406\u306e\u524d\u5f8c\u306b\u5b9f\u884c\u3055\u308c\u308b\u6a5f\u80fd\uff08\u30ed\u30ae\u30f3\u30b0\u3001\u8a8d\u8a3c\u3001\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306a\u3069\uff09\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</li> <li>\u30d1\u30e9\u30e1\u30fc\u30bf\u53d6\u5f97: URL\u30d1\u30b9\u3001\u30af\u30a8\u30ea\u6587\u5b57\u5217\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u304b\u3089\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u53d6\u5f97\u3092\u7c21\u7d20\u5316\u3057\u307e\u3059\u3002</li> <li>\u30ec\u30b9\u30dd\u30f3\u30b9\u751f\u6210: JSON\u3001XML\u3001HTML\u306a\u3069\u69d8\u3005\u306a\u5f62\u5f0f\u3067\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u751f\u6210\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002</li> </ol>"},{"location":"echo_framework_implementation/#12","title":"1.2 \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u304a\u3051\u308b\u4f4d\u7f6e\u3065\u3051","text":"<p>\u4ee5\u4e0b\u306e\u56f3\u306f\u3001Echo\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u304a\u3051\u308b\u4f4d\u7f6e\u3065\u3051\u3092\u793a\u3057\u3066\u3044\u307e\u3059\uff1a</p> <p></p>"},{"location":"echo_framework_implementation/#2-echo","title":"2. Echo\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u5b9f\u88c5","text":"<p>\u4ee5\u4e0b\u306fEcho\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5b9f\u88c5\u306e\u6982\u8981\u3092\u8868\u3059\u30d5\u30ed\u30fc\u56f3\u3067\u3059\uff1a</p> <p></p>"},{"location":"echo_framework_implementation/#21","title":"2.1 \u57fa\u672c\u8a2d\u5b9a","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001Echo\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210\u3068\u57fa\u672c\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002</p> <pre><code>package main\n\nimport (\n    \"github.com/labstack/echo/v4\"\n    \"github.com/labstack/echo/v4/middleware\"\n)\n\nfunc main() {\n    // Echo\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210\n    e := echo.New()\n\n    // \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u8a2d\u5b9a\n    e.Use(middleware.Logger())\n    e.Use(middleware.Recover())\n    e.Use(middleware.CORS())\n\n    // \u30b5\u30fc\u30d0\u30fc\u8d77\u52d5\n    e.Start(\":8080\")\n}\n</code></pre>"},{"location":"echo_framework_implementation/#22","title":"2.2 \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a","text":"<p>API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002</p> <pre><code>package rest\n\nimport (\n    \"github.com/labstack/echo/v4\"\n    \"github.com/labstack/echo/v4/middleware\"\n    \"github.com/sklinkert/go-ddd/internal/application/services\"\n)\n\n// SetupRouter configures the Echo router with all API endpoints\nfunc SetupRouter(e *echo.Echo, productService *services.ProductService, sellerService *services.SellerService) {\n    // \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u8a2d\u5b9a\n    e.Use(middleware.Logger())\n    e.Use(middleware.Recover())\n    e.Use(middleware.CORS())\n\n    // API\u30d0\u30fc\u30b8\u30e7\u30f3\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\n    api := e.Group(\"/api/v1\")\n\n    // \u5546\u54c1\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\n    NewProductController(api, productService)\n\n    // \u51fa\u54c1\u8005\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\n    NewSellerController(api, sellerService)\n\n    // \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\n    api.GET(\"/health\", func(c echo.Context) error {\n        return c.JSON(200, map[string]string{\"status\": \"ok\"})\n    })\n}\n</code></pre>"},{"location":"echo_framework_implementation/#3","title":"3. \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5b9f\u88c5","text":""},{"location":"echo_framework_implementation/#31","title":"3.1 \u5546\u54c1\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc","text":"<p>\u5546\u54c1\u95a2\u9023\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u51e6\u7406\u3059\u308b\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</p> <pre><code>package rest\n\nimport (\n    \"github.com/labstack/echo/v4\"\n    \"github.com/sklinkert/go-ddd/internal/application/command\"\n    \"github.com/sklinkert/go-ddd/internal/application/services\"\n    \"net/http\"\n)\n\ntype ProductController struct {\n    productService *services.ProductService\n}\n\nfunc NewProductController(api *echo.Group, productService *services.ProductService) {\n    controller := &amp;ProductController{\n        productService: productService,\n    }\n\n    api.POST(\"/products\", controller.Create)\n    api.GET(\"/products\", controller.FindAll)\n    api.GET(\"/products/:id\", controller.ById)\n    api.PUT(\"/products/:id\", controller.Update)\n}\n\n// Create handles POST /products\nfunc (c *ProductController) Create(ctx echo.Context) error {\n    var req struct {\n        Name        string  `json:\"name\"`\n        Description string  `json:\"description\"`\n        Price       float64 `json:\"price\"`\n        SellerId    string  `json:\"seller_id\"`\n    }\n\n    if err := ctx.Bind(&amp;req); err != nil {\n        return ctx.JSON(http.StatusBadRequest, map[string]string{\"error\": err.Error()})\n    }\n\n    cmd := command.CreateProductCommand{\n        Name:        req.Name,\n        Description: req.Description,\n        Price:       req.Price,\n        SellerId:    req.SellerId,\n    }\n\n    product, err := c.productService.Create(cmd)\n    if err != nil {\n        return ctx.JSON(http.StatusInternalServerError, map[string]string{\"error\": err.Error()})\n    }\n\n    return ctx.JSON(http.StatusCreated, product)\n}\n\n// \u4ed6\u306e\u30cf\u30f3\u30c9\u30e9\u30e1\u30bd\u30c3\u30c9\uff08FindAll, ById, Update\uff09\u3082\u540c\u69d8\u306b\u5b9f\u88c5\n</code></pre>"},{"location":"echo_framework_implementation/#32","title":"3.2 \u51fa\u54c1\u8005\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc","text":"<p>\u51fa\u54c1\u8005\u95a2\u9023\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u51e6\u7406\u3059\u308b\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</p> <pre><code>package rest\n\nimport (\n    \"github.com/labstack/echo/v4\"\n    \"github.com/sklinkert/go-ddd/internal/application/command\"\n    \"github.com/sklinkert/go-ddd/internal/application/services\"\n    \"net/http\"\n)\n\ntype SellerController struct {\n    sellerService *services.SellerService\n}\n\nfunc NewSellerController(api *echo.Group, sellerService *services.SellerService) {\n    controller := &amp;SellerController{\n        sellerService: sellerService,\n    }\n\n    api.POST(\"/sellers\", controller.Create)\n    api.GET(\"/sellers\", controller.FindAll)\n    api.GET(\"/sellers/:id\", controller.ById)\n    api.PUT(\"/sellers/:id/name\", controller.UpdateName)\n    api.PUT(\"/sellers/:id/email\", controller.UpdateEmail)\n    api.DELETE(\"/sellers/:id\", controller.Delete)\n}\n\n// Create handles POST /sellers\nfunc (c *SellerController) Create(ctx echo.Context) error {\n    var req struct {\n        Name  string `json:\"name\"`\n        Email string `json:\"email\"`\n    }\n\n    if err := ctx.Bind(&amp;req); err != nil {\n        return ctx.JSON(http.StatusBadRequest, map[string]string{\"error\": err.Error()})\n    }\n\n    cmd := command.CreateSellerCommand{\n        Name:  req.Name,\n        Email: req.Email,\n    }\n\n    seller, err := c.sellerService.Create(cmd)\n    if err != nil {\n        return ctx.JSON(http.StatusInternalServerError, map[string]string{\"error\": err.Error()})\n    }\n\n    return ctx.JSON(http.StatusCreated, seller)\n}\n\n// \u4ed6\u306e\u30cf\u30f3\u30c9\u30e9\u30e1\u30bd\u30c3\u30c9\uff08FindAll, ById, UpdateName, UpdateEmail, Delete\uff09\u3082\u540c\u69d8\u306b\u5b9f\u88c5\n</code></pre>"},{"location":"echo_framework_implementation/#4","title":"4. \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u5b9f\u88c5","text":""},{"location":"echo_framework_implementation/#41","title":"4.1 \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u30df\u30c9\u30eb\u30a6\u30a7\u30a2","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3067\u4e00\u8cab\u3057\u305f\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</p> <pre><code>package rest\n\nimport (\n    \"github.com/labstack/echo/v4\"\n    \"github.com/sklinkert/go-ddd/internal/application/common\"\n    \"net/http\"\n)\n\n// ErrorHandlerMiddleware \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a8\u30e9\u30fc\u3092\u9069\u5207\u306aHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u5909\u63db\u3059\u308b\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\nfunc ErrorHandlerMiddleware(next echo.HandlerFunc) echo.HandlerFunc {\n    return func(c echo.Context) error {\n        err := next(c)\n        if err == nil {\n            return nil\n        }\n\n        // \u30a8\u30e9\u30fc\u306e\u7a2e\u985e\u306b\u5fdc\u3058\u3066HTTP\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u6c7a\u5b9a\n        var statusCode int\n        var message string\n\n        // AppError\u306e\u5834\u5408\n        if appErr, ok := err.(common.AppError); ok {\n            switch appErr.Type {\n            case common.NotFound:\n                statusCode = http.StatusNotFound\n                message = appErr.Message\n            case common.ValidationError:\n                statusCode = http.StatusBadRequest\n                message = appErr.Message\n            case common.DatabaseError:\n                statusCode = http.StatusInternalServerError\n                message = \"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\"\n            default:\n                statusCode = http.StatusInternalServerError\n                message = appErr.Message\n            }\n        } else if httpErr, ok := err.(*echo.HTTPError); ok {\n            // Echo\u306e\u6a19\u6e96HTTP\u30a8\u30e9\u30fc\u306e\u5834\u5408\n            statusCode = httpErr.Code\n            message = httpErr.Message.(string)\n        } else {\n            // \u305d\u306e\u4ed6\u306e\u30a8\u30e9\u30fc\n            statusCode = http.StatusInternalServerError\n            message = \"\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\"\n        }\n\n        // JSON\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\n        return c.JSON(statusCode, map[string]string{\"error\": message})\n    }\n}\n</code></pre>"},{"location":"echo_framework_implementation/#42","title":"4.2 \u8a8d\u8a3c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2","text":"<p>JWT\u3092\u4f7f\u7528\u3057\u305f\u8a8d\u8a3c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</p> <pre><code>package rest\n\nimport (\n    \"github.com/labstack/echo/v4\"\n    \"github.com/labstack/echo/v4/middleware\"\n)\n\n// SetupAuthMiddleware configures JWT authentication middleware\nfunc SetupAuthMiddleware(e *echo.Echo) {\n    // JWT\u8a2d\u5b9a\n    config := middleware.JWTConfig{\n        SigningKey: []byte(\"your-secret-key\"),\n        TokenLookup: \"header:Authorization\",\n        AuthScheme: \"Bearer\",\n    }\n\n    // \u8a8d\u8a3c\u304c\u5fc5\u8981\u306a\u30eb\u30fc\u30c8\u30b0\u30eb\u30fc\u30d7\n    auth := e.Group(\"/api/v1/auth\")\n    auth.Use(middleware.JWTWithConfig(config))\n\n    // \u8a8d\u8a3c\u304c\u5fc5\u8981\u306a\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u8ffd\u52a0\n    auth.GET(\"/profile\", getProfile)\n}\n\n// getProfile handles GET /api/v1/auth/profile\nfunc getProfile(c echo.Context) error {\n    // JWT\u304b\u3089\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\n    user := c.Get(\"user\").(*jwt.Token)\n    claims := user.Claims.(jwt.MapClaims)\n    userId := claims[\"id\"].(string)\n\n    // \u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u8fd4\u3059\n    return c.JSON(http.StatusOK, map[string]string{\n        \"id\": userId,\n        \"message\": \"\u8a8d\u8a3c\u6e08\u307f\u30e6\u30fc\u30b6\u30fc\",\n    })\n}\n</code></pre>"},{"location":"echo_framework_implementation/#5","title":"5. \u30ea\u30af\u30a8\u30b9\u30c8/\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u51e6\u7406","text":""},{"location":"echo_framework_implementation/#51","title":"5.1 \u30ea\u30af\u30a8\u30b9\u30c8\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0","text":"<p>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u69cb\u9020\u4f53\u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002</p> <pre><code>// JSON\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d0\u30a4\u30f3\u30c9\u4f8b\nfunc (c *ProductController) Create(ctx echo.Context) error {\n    var req struct {\n        Name        string  `json:\"name\"`\n        Description string  `json:\"description\"`\n        Price       float64 `json:\"price\"`\n        SellerId    string  `json:\"seller_id\"`\n    }\n\n    if err := ctx.Bind(&amp;req); err != nil {\n        return ctx.JSON(http.StatusBadRequest, map[string]string{\"error\": err.Error()})\n    }\n\n    // \u4ee5\u964d\u306e\u51e6\u7406...\n}\n\n// URL\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u53d6\u5f97\u4f8b\nfunc (c *ProductController) ById(ctx echo.Context) error {\n    id := ctx.Param(\"id\")\n\n    product, err := c.productService.ById(id)\n    if err != nil {\n        return ctx.JSON(http.StatusNotFound, map[string]string{\"error\": err.Error()})\n    }\n\n    return ctx.JSON(http.StatusOK, product)\n}\n\n// \u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u53d6\u5f97\u4f8b\nfunc (c *ProductController) FindAll(ctx echo.Context) error {\n    limit := ctx.QueryParam(\"limit\")\n    offset := ctx.QueryParam(\"offset\")\n\n    // limit\u3068offset\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u3066\u4f7f\u7528\n    // ...\n\n    products, err := c.productService.FindAll()\n    if err != nil {\n        return ctx.JSON(http.StatusInternalServerError, map[string]string{\"error\": err.Error()})\n    }\n\n    return ctx.JSON(http.StatusOK, products)\n}\n</code></pre>"},{"location":"echo_framework_implementation/#52","title":"5.2 \u30ec\u30b9\u30dd\u30f3\u30b9\u751f\u6210","text":"<p>\u69d8\u3005\u306a\u5f62\u5f0f\u3067\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u751f\u6210\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>```go // JSON\u30ec\u30b9\u30dd\u30f3\u30b9 func (c *ProductController) ById(ctx echo.Context) error {     // ...     return ctx.JSON(http.StatusOK, product) }</p> <p>// \u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9 func (c *ProductController) Update(ctx echo.Context) error {     // ...     if err != nil {         return ctx.JSON(http.StatusInternalServerError, map[string]string{             \"error\": err.Error(),         })     }     // ... }</p> <p>// \u30ab\u30b9\u30bf\u30e0HTTP\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9 func (c *ProductController) Create(ctx echo.Context) error {     // ...     return ctx.JSON(http.StatusCreated, product) }</p>"},{"location":"echo_jwt_authentication/","title":"Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 Echo JWT\u8a8d\u8a3c\u306e\u8a73\u7d30\u89e3\u8aac","text":""},{"location":"echo_jwt_authentication/#1","title":"1. \u6982\u8981","text":"<p>\u3053\u306e\u6587\u66f8\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308bJWT\uff08JSON Web Token\uff09\u3092\u4f7f\u7528\u3057\u305f\u8a8d\u8a3c\u6a5f\u80fd\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u89e3\u8aac\u3057\u307e\u3059\u3002JWT\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u9593\u3067\u5b89\u5168\u306b\u60c5\u5831\u3092\u4ea4\u63db\u3059\u308b\u305f\u3081\u306e\u3001\u30b3\u30f3\u30d1\u30af\u30c8\u3067\u81ea\u5df1\u5b8c\u7d50\u578b\u306e\u30c8\u30fc\u30af\u30f3\u5f62\u5f0f\u3067\u3059\u3002</p>"},{"location":"echo_jwt_authentication/#11-jwt","title":"1.1 JWT\u8a8d\u8a3c\u306e\u5f79\u5272","text":"<p>JWT\u8a8d\u8a3c\u306f\u4ee5\u4e0b\u306e\u5f79\u5272\u3092\u62c5\u3044\u307e\u3059\uff1a</p> <ol> <li>\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c: \u30e6\u30fc\u30b6\u30fc\u306e\u30ed\u30b0\u30a4\u30f3\u60c5\u5831\u3092\u691c\u8a3c\u3057\u3001\u6709\u52b9\u306a\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\u3092\u767a\u884c\u3057\u307e\u3059\u3002</li> <li>\u30a2\u30af\u30bb\u30b9\u5236\u5fa1: \u4fdd\u8b77\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u5236\u9650\u3057\u3001\u8a8d\u8a3c\u3055\u308c\u305f\u30e6\u30fc\u30b6\u30fc\u306e\u307f\u304c\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</li> <li>\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u8a8d\u8a3c: \u30b5\u30fc\u30d0\u30fc\u5074\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u72b6\u614b\u3092\u4fdd\u6301\u305b\u305a\u3001\u30c8\u30fc\u30af\u30f3\u81ea\u4f53\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u542b\u3081\u308b\u3053\u3068\u3067\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306a\u8a8d\u8a3c\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002</li> <li>\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u8a8d\u8a3c: \u7570\u306a\u308b\u30c9\u30e1\u30a4\u30f3\u9593\u3067\u3082\u8a8d\u8a3c\u60c5\u5831\u3092\u5b89\u5168\u306b\u5171\u6709\u3067\u304d\u307e\u3059\u3002</li> </ol>"},{"location":"echo_jwt_authentication/#12","title":"1.2 \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u304a\u3051\u308b\u4f4d\u7f6e\u3065\u3051","text":"<p>\u4ee5\u4e0b\u306e\u56f3\u306f\u3001JWT\u8a8d\u8a3c\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u304a\u3051\u308b\u4f4d\u7f6e\u3065\u3051\u3092\u793a\u3057\u3066\u3044\u307e\u3059\uff1a</p> <p></p>"},{"location":"echo_jwt_authentication/#2-jwt","title":"2. JWT\u8a8d\u8a3c\u306e\u5b9f\u88c5","text":"<p>\u4ee5\u4e0b\u306fJWT\u8a8d\u8a3c\u5b9f\u88c5\u306e\u6982\u8981\u3092\u8868\u3059\u30d5\u30ed\u30fc\u56f3\u3067\u3059\uff1a</p> <p></p>"},{"location":"echo_jwt_authentication/#21-jwt","title":"2.1 JWT\u8a2d\u5b9a","text":""},{"location":"echo_jwt_authentication/#211-jwt","title":"2.1.1 JWT\u8a2d\u5b9a\u306e\u5b9a\u7fa9","text":"<p>JWT\u8a8d\u8a3c\u306b\u5fc5\u8981\u306a\u8a2d\u5b9a\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</p> <pre><code>package config\n\nimport (\n    \"time\"\n)\n\n// JWTConfig \u306fJWT\u8a8d\u8a3c\u306e\u8a2d\u5b9a\ntype JWTConfig struct {\n    SecretKey     string\n    TokenExpiry   time.Duration\n    SigningMethod string\n}\n\n// NewJWTConfig \u306fJWT\u8a2d\u5b9a\u3092\u4f5c\u6210\u3059\u308b\nfunc NewJWTConfig() *JWTConfig {\n    return &amp;JWTConfig{\n        SecretKey:     \"your-secret-key\", // \u672c\u756a\u74b0\u5883\u3067\u306f\u74b0\u5883\u5909\u6570\u304b\u3089\u53d6\u5f97\u3059\u308b\u306a\u3069\u5b89\u5168\u306b\u7ba1\u7406\u3059\u308b\n        TokenExpiry:   24 * time.Hour,    // \u30c8\u30fc\u30af\u30f3\u306e\u6709\u52b9\u671f\u9650\uff0824\u6642\u9593\uff09\n        SigningMethod: \"HS256\",           // \u7f72\u540d\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n    }\n}\n</code></pre>"},{"location":"echo_jwt_authentication/#212","title":"2.1.2 \u8a8d\u8a3c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u8a2d\u5b9a","text":"<p>Echo\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u8a8d\u8a3c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002</p> <pre><code>package rest\n\nimport (\n    \"github.com/labstack/echo/v4\"\n    \"github.com/labstack/echo/v4/middleware\"\n    \"github.com/sklinkert/go-ddd/internal/config\"\n)\n\n// SetupAuthMiddleware \u306fJWT\u8a8d\u8a3c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u8a2d\u5b9a\u3059\u308b\nfunc SetupAuthMiddleware(e *echo.Echo, jwtConfig *config.JWTConfig) {\n    // JWT\u8a2d\u5b9a\n    config := middleware.JWTConfig{\n        SigningKey:  []byte(jwtConfig.SecretKey),\n        TokenLookup: \"header:Authorization\",\n        AuthScheme:  \"Bearer\",\n    }\n\n    // \u8a8d\u8a3c\u304c\u5fc5\u8981\u306a\u30eb\u30fc\u30c8\u30b0\u30eb\u30fc\u30d7\n    auth := e.Group(\"/api/v1/auth\")\n    auth.Use(middleware.JWTWithConfig(config))\n\n    // \u8a8d\u8a3c\u304c\u5fc5\u8981\u306a\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u8ffd\u52a0\n    auth.GET(\"/profile\", getProfile)\n    auth.GET(\"/orders\", getOrders)\n    // \u305d\u306e\u4ed6\u306e\u4fdd\u8b77\u3055\u308c\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\n}\n</code></pre>"},{"location":"echo_jwt_authentication/#22","title":"2.2 \u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c","text":""},{"location":"echo_jwt_authentication/#221","title":"2.2.1 \u30ed\u30b0\u30a4\u30f3\u30cf\u30f3\u30c9\u30e9\u306e\u5b9f\u88c5","text":"<p>\u30e6\u30fc\u30b6\u30fc\u306e\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u3092\u884c\u3046\u30cf\u30f3\u30c9\u30e9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</p> <pre><code>package rest\n\nimport (\n    \"github.com/dgrijalva/jwt-go\"\n    \"github.com/labstack/echo/v4\"\n    \"github.com/sklinkert/go-ddd/internal/application/services\"\n    \"github.com/sklinkert/go-ddd/internal/config\"\n    \"net/http\"\n    \"time\"\n)\n\ntype AuthController struct {\n    userService *services.UserService\n    jwtConfig   *config.JWTConfig\n}\n\nfunc NewAuthController(e *echo.Echo, userService *services.UserService, jwtConfig *config.JWTConfig) {\n    controller := &amp;AuthController{\n        userService: userService,\n        jwtConfig:   jwtConfig,\n    }\n\n    // \u8a8d\u8a3c\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\n    e.POST(\"/api/v1/login\", controller.Login)\n}\n\n// Login \u306f\u30e6\u30fc\u30b6\u30fc\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u3092\u884c\u3046\nfunc (c *AuthController) Login(ctx echo.Context) error {\n    // \u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\n    var req struct {\n        Email    string `json:\"email\"`\n        Password string `json:\"password\"`\n    }\n\n    if err := ctx.Bind(&amp;req); err != nil {\n        return ctx.JSON(http.StatusBadRequest, map[string]string{\"error\": \"Invalid request\"})\n    }\n\n    // \u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\n    user, err := c.userService.Authenticate(req.Email, req.Password)\n    if err != nil {\n        return ctx.JSON(http.StatusUnauthorized, map[string]string{\"error\": \"Invalid credentials\"})\n    }\n\n    // JWT\u30c8\u30fc\u30af\u30f3\u306e\u751f\u6210\n    token, err := c.generateToken(user.ID, user.Email)\n    if err != nil {\n        return ctx.JSON(http.StatusInternalServerError, map[string]string{\"error\": \"Failed to generate token\"})\n    }\n\n    // \u30ec\u30b9\u30dd\u30f3\u30b9\n    return ctx.JSON(http.StatusOK, map[string]string{\n        \"token\": token,\n        \"type\":  \"Bearer\",\n    })\n}\n\n// generateToken \u306fJWT\u30c8\u30fc\u30af\u30f3\u3092\u751f\u6210\u3059\u308b\nfunc (c *AuthController) generateToken(userID, email string) (string, error) {\n    // \u30c8\u30fc\u30af\u30f3\u306e\u6709\u52b9\u671f\u9650\n    expiry := time.Now().Add(c.jwtConfig.TokenExpiry)\n\n    // \u30af\u30ec\u30fc\u30e0\u306e\u4f5c\u6210\n    claims := jwt.MapClaims{\n        \"id\":    userID,\n        \"email\": email,\n        \"exp\":   expiry.Unix(),\n    }\n\n    // \u30c8\u30fc\u30af\u30f3\u306e\u4f5c\u6210\n    token := jwt.NewWithClaims(jwt.GetSigningMethod(c.jwtConfig.SigningMethod), claims)\n\n    // \u30c8\u30fc\u30af\u30f3\u306e\u7f72\u540d\n    return token.SignedString([]byte(c.jwtConfig.SecretKey))\n}\n</code></pre>"},{"location":"echo_jwt_authentication/#222","title":"2.2.2 \u30e6\u30fc\u30b6\u30fc\u691c\u8a3c\u306e\u5b9f\u88c5","text":"<p>\u30e6\u30fc\u30b6\u30fc\u30b5\u30fc\u30d3\u30b9\u3067\u306e\u8a8d\u8a3c\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</p> <pre><code>package services\n\nimport (\n    \"errors\"\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n    \"github.com/sklinkert/go-ddd/internal/domain/repositories\"\n    \"golang.org/x/crypto/bcrypt\"\n)\n\ntype UserService struct {\n    userRepository repositories.UserRepository\n}\n\nfunc NewUserService(userRepository repositories.UserRepository) *UserService {\n    return &amp;UserService{\n        userRepository: userRepository,\n    }\n}\n\n// Authenticate \u306f\u30e6\u30fc\u30b6\u30fc\u306e\u8a8d\u8a3c\u3092\u884c\u3046\nfunc (s *UserService) Authenticate(email, password string) (*entities.User, error) {\n    // \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3067\u30e6\u30fc\u30b6\u30fc\u3092\u691c\u7d22\n    user, err := s.userRepository.FindByEmail(email)\n    if err != nil {\n        return nil, errors.New(\"user not found\")\n    }\n\n    // \u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u691c\u8a3c\n    err = bcrypt.CompareHashAndPassword([]byte(user.PasswordHash), []byte(password))\n    if err != nil {\n        return nil, errors.New(\"invalid password\")\n    }\n\n    return user, nil\n}\n</code></pre>"},{"location":"echo_jwt_authentication/#23","title":"2.3 \u4fdd\u8b77\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9","text":""},{"location":"echo_jwt_authentication/#231","title":"2.3.1 \u8a8d\u8a3c\u6e08\u307f\u30e6\u30fc\u30b6\u30fc\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u53d6\u5f97","text":"<p>\u8a8d\u8a3c\u304c\u5fc5\u8981\u306a\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u5b9f\u88c5\u4f8b\u3067\u3059\u3002</p> <pre><code>// getProfile \u306f\u8a8d\u8a3c\u6e08\u307f\u30e6\u30fc\u30b6\u30fc\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u3092\u8fd4\u3059\nfunc getProfile(c echo.Context) error {\n    // JWT\u30c8\u30fc\u30af\u30f3\u304b\u3089\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\n    user := c.Get(\"user\").(*jwt.Token)\n    claims := user.Claims.(jwt.MapClaims)\n    userID := claims[\"id\"].(string)\n    email := claims[\"email\"].(string)\n\n    // \u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u8fd4\u3059\n    return c.JSON(http.StatusOK, map[string]interface{}{\n        \"id\":    userID,\n        \"email\": email,\n        \"message\": \"\u8a8d\u8a3c\u6e08\u307f\u30e6\u30fc\u30b6\u30fc\",\n    })\n}\n\n// getOrders \u306f\u8a8d\u8a3c\u6e08\u307f\u30e6\u30fc\u30b6\u30fc\u306e\u6ce8\u6587\u5c65\u6b74\u3092\u8fd4\u3059\nfunc getOrders(c echo.Context) error {\n    // JWT\u30c8\u30fc\u30af\u30f3\u304b\u3089\u30e6\u30fc\u30b6\u30fcID\u3092\u53d6\u5f97\n    user := c.Get(\"user\").(*jwt.Token)\n    claims := user.Claims.(jwt.MapClaims)\n    userID := claims[\"id\"].(string)\n\n    // \u30e6\u30fc\u30b6\u30fc\u306e\u6ce8\u6587\u5c65\u6b74\u3092\u53d6\u5f97\uff08\u5b9f\u969b\u306e\u5b9f\u88c5\u3067\u306f\u30b5\u30fc\u30d3\u30b9\u3092\u547c\u3073\u51fa\u3059\uff09\n    orders := []map[string]interface{}{\n        {\"id\": \"order1\", \"amount\": 1000, \"date\": \"2023-01-01\"},\n        {\"id\": \"order2\", \"amount\": 2000, \"date\": \"2023-01-15\"},\n    }\n\n    return c.JSON(http.StatusOK, map[string]interface{}{\n        \"user_id\": userID,\n        \"orders\":  orders,\n    })\n}\n</code></pre>"},{"location":"echo_jwt_authentication/#3","title":"3. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u8003\u616e\u4e8b\u9805","text":""},{"location":"echo_jwt_authentication/#31","title":"3.1 \u30c8\u30fc\u30af\u30f3\u306e\u5b89\u5168\u6027","text":"<p>JWT\u8a8d\u8a3c\u3092\u5b89\u5168\u306b\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306e\u8003\u616e\u4e8b\u9805\uff1a</p> <ol> <li>\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\u306e\u4fdd\u8b77: \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\u306f\u74b0\u5883\u5909\u6570\u3084\u5b89\u5168\u306a\u8a2d\u5b9a\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3067\u7ba1\u7406\u3057\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u76f4\u63a5\u8a18\u8ff0\u3057\u306a\u3044\u3002</li> <li>\u30c8\u30fc\u30af\u30f3\u306e\u6709\u52b9\u671f\u9650: \u77ed\u3044\u6709\u52b9\u671f\u9650\u3092\u8a2d\u5b9a\u3057\u3001\u9577\u671f\u9593\u306e\u30a2\u30af\u30bb\u30b9\u306b\u306f\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3002</li> <li>\u9069\u5207\u306a\u7f72\u540d\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0: HS256\u3084RS256\u306a\u3069\u306e\u5b89\u5168\u306a\u7f72\u540d\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u7528\u3059\u308b\u3002</li> <li>\u30bb\u30f3\u30b7\u30c6\u30a3\u30d6\u60c5\u5831\u306e\u4fdd\u8b77: \u30d1\u30b9\u30ef\u30fc\u30c9\u306a\u3069\u306e\u30bb\u30f3\u30b7\u30c6\u30a3\u30d6\u306a\u60c5\u5831\u306fJWT\u306b\u542b\u3081\u306a\u3044\u3002</li> </ol>"},{"location":"echo_jwt_authentication/#32-csrf","title":"3.2 CSRF\u5bfe\u7b56","text":"<p>\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u30ea\u30af\u30a8\u30b9\u30c8\u30d5\u30a9\u30fc\u30b8\u30a7\u30ea\uff08CSRF\uff09\u653b\u6483\u304b\u3089\u306e\u4fdd\u8b77\uff1a</p> <pre><code>// CSRF\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u8a2d\u5b9a\ne.Use(middleware.CSRFWithConfig(middleware.CSRFConfig{\n    TokenLookup: \"header:X-CSRF-Token\",\n    CookieName:  \"csrf\",\n    CookiePath:  \"/\",\n    Skipper: func(c echo.Context) bool {\n        // API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306fCSRF\u4fdd\u8b77\u3092\u30b9\u30ad\u30c3\u30d7\n        return strings.HasPrefix(c.Path(), \"/api/\")\n    },\n}))\n</code></pre>"},{"location":"echo_jwt_authentication/#33","title":"3.3 \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u306e\u5b9f\u88c5","text":"<p>\u9577\u671f\u9593\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u7dad\u6301\u306e\u305f\u3081\u306e\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u5b9f\u88c5\uff1a</p> <p>```go // \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u306e\u751f\u6210 func (c *AuthController) generateRefreshToken(userID string) (string, error) {     // \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u306e\u6709\u52b9\u671f\u9650\uff0830\u65e5\uff09     expiry := time.Now().Add(30 * 24 * time.Hour)</p> <pre><code>claims := jwt.MapClaims{\n    \"id\":  userID,\n    \"exp\": expiry.Unix(),\n    \"type\": \"refresh\",\n}\n</code></pre>"},{"location":"environment_variable_management/","title":"Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u74b0\u5883\u5909\u6570\u7ba1\u7406","text":""},{"location":"environment_variable_management/#1","title":"1. \u6982\u8981","text":"<p>\u3053\u306e\u6587\u66f8\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308b\u74b0\u5883\u5909\u6570\u7ba1\u7406\u306e\u5b9f\u88c5\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\u74b0\u5883\u5909\u6570\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\u3092\u5916\u90e8\u5316\u3057\u3001\u7570\u306a\u308b\u74b0\u5883\uff08\u958b\u767a\u3001\u30c6\u30b9\u30c8\u3001\u672c\u756a\u306a\u3069\uff09\u3067\u7570\u306a\u308b\u8a2d\u5b9a\u3092\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u91cd\u8981\u3067\u3059\u3002</p> <p>\u672c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001godotenv\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u3066\u3001<code>.env</code>\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u74b0\u5883\u5909\u6570\u3092\u8aad\u307f\u8fbc\u3080\u65b9\u6cd5\u3092\u63a1\u7528\u3057\u3066\u3044\u307e\u3059\u3002</p> <p></p>"},{"location":"environment_variable_management/#2-godotenv","title":"2. godotenv\u3068\u306f","text":"<p>godotenv\u306f\u3001Go\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067<code>.env</code>\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u74b0\u5883\u5909\u6570\u3092\u8aad\u307f\u8fbc\u3080\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u4ee5\u4e0b\u306e\u30e1\u30ea\u30c3\u30c8\u304c\u5f97\u3089\u308c\u307e\u3059\uff1a</p> <ol> <li>\u8a2d\u5b9a\u306e\u5916\u90e8\u5316: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\u304b\u3089\u8a2d\u5b9a\u3092\u5206\u96e2</li> <li>\u74b0\u5883\u3054\u3068\u306e\u8a2d\u5b9a: \u958b\u767a\u3001\u30c6\u30b9\u30c8\u3001\u672c\u756a\u306a\u3069\u7570\u306a\u308b\u74b0\u5883\u3067\u7570\u306a\u308b\u8a2d\u5b9a\u3092\u4f7f\u7528\u53ef\u80fd</li> <li>\u6a5f\u5bc6\u60c5\u5831\u306e\u4fdd\u8b77: API\u30ad\u30fc\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d1\u30b9\u30ef\u30fc\u30c9\u306a\u3069\u306e\u6a5f\u5bc6\u60c5\u5831\u3092\u30b3\u30fc\u30c9\u304b\u3089\u5206\u96e2</li> <li>\u30c7\u30d7\u30ed\u30a4\u306e\u7c21\u7d20\u5316: \u74b0\u5883\u5909\u6570\u3092\u5909\u66f4\u3059\u308b\u3060\u3051\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u518d\u30d3\u30eb\u30c9\u306a\u3057\u306b\u8a2d\u5b9a\u3092\u5909\u66f4\u53ef\u80fd</li> </ol>"},{"location":"environment_variable_management/#3","title":"3. \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5","text":"<p>godotenv\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\uff1a</p> <pre><code>go get github.com/joho/godotenv\n</code></pre>"},{"location":"environment_variable_management/#4","title":"4. \u57fa\u672c\u7684\u306a\u4f7f\u7528\u65b9\u6cd5","text":""},{"location":"environment_variable_management/#41-env","title":"4.1 <code>.env</code>\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b<code>.env</code>\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\uff1a</p> <pre><code># \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u8a2d\u5b9a\nDB_HOST=localhost\nDB_PORT=9920\nDB_USER=root\nDB_PASSWORD=password\nDB_NAME=mydb\nDB_SSL_MODE=disable\n\n# API\u30b5\u30fc\u30d0\u30fc\u8a2d\u5b9a\nAPI_PORT=9090\nAPI_SECRET=your_secret_key\n\n# JWT\u8a2d\u5b9a\nJWT_SECRET=your_jwt_secret\nJWT_EXPIRATION=24h\n</code></pre> <p>\u6ce8\u610f: <code>.env</code>\u30d5\u30a1\u30a4\u30eb\u306fGit\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30b3\u30df\u30c3\u30c8\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002<code>.gitignore</code>\u30d5\u30a1\u30a4\u30eb\u306b<code>.env</code>\u3092\u8ffd\u52a0\u3057\u3066\u3001\u6a5f\u5bc6\u60c5\u5831\u304c\u516c\u958b\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"environment_variable_management/#42","title":"4.2 \u74b0\u5883\u5909\u6570\u306e\u8aad\u307f\u8fbc\u307f","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8d77\u52d5\u6642\u306b<code>.env</code>\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u74b0\u5883\u5909\u6570\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\uff1a</p> <pre><code>package main\n\nimport (\n    \"log\"\n    \"os\"\n\n    \"github.com/joho/godotenv\"\n)\n\nfunc main() {\n    // .env\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\n    err := godotenv.Load()\n    if err != nil {\n        log.Println(\"Warning: .env file not found, using OS environment variables\")\n    }\n\n    // \u74b0\u5883\u5909\u6570\u3092\u53d6\u5f97\n    dbHost := os.Getenv(\"DB_HOST\")\n    dbPort := os.Getenv(\"DB_PORT\")\n    apiPort := os.Getenv(\"API_PORT\")\n\n    // \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306e\u8a2d\u5b9a\n    if apiPort == \"\" {\n        apiPort = \"9090\" // \u30c7\u30d5\u30a9\u30eb\u30c8\u30dd\u30fc\u30c8\n    }\n\n    // \u4ee5\u964d\u306e\u51e6\u7406...\n}\n</code></pre>"},{"location":"environment_variable_management/#43","title":"4.3 \u8907\u6570\u306e\u74b0\u5883\u306b\u5bfe\u5fdc","text":"<p>\u7570\u306a\u308b\u74b0\u5883\uff08\u958b\u767a\u3001\u30c6\u30b9\u30c8\u3001\u672c\u756a\uff09\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306b\u3001\u8907\u6570\u306e<code>.env</code>\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\uff1a</p> <pre><code>func loadEnv() {\n    env := os.Getenv(\"GO_ENV\")\n    if env == \"\" {\n        env = \"development\" // \u30c7\u30d5\u30a9\u30eb\u30c8\u74b0\u5883\n    }\n\n    // \u74b0\u5883\u306b\u5fdc\u3058\u305f.env\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\n    envFile := \".env.\" + env\n    err := godotenv.Load(envFile)\n    if err != nil {\n        // \u7279\u5b9a\u306e\u74b0\u5883\u306e.env\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e.env\u3092\u8a66\u3059\n        err = godotenv.Load()\n        if err != nil {\n            log.Println(\"Warning: No .env file found, using OS environment variables\")\n        }\n    }\n}\n</code></pre> <p>\u3053\u306e\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\uff1a - <code>.env.development</code> - \u958b\u767a\u74b0\u5883\u7528 - <code>.env.test</code> - \u30c6\u30b9\u30c8\u74b0\u5883\u7528 - <code>.env.production</code> - \u672c\u756a\u74b0\u5883\u7528</p>"},{"location":"environment_variable_management/#5-go-ddd","title":"5. Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u3067\u306e\u5b9f\u88c5","text":""},{"location":"environment_variable_management/#51","title":"5.1 \u8a2d\u5b9a\u7ba1\u7406\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4f5c\u6210","text":"<p>\u74b0\u5883\u5909\u6570\u3092\u4e00\u5143\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u7ba1\u7406\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u307e\u3059\uff1a</p> <pre><code>// internal/infrastructure/config/config.go\npackage config\n\nimport (\n    \"log\"\n    \"os\"\n    \"strconv\"\n    \"time\"\n\n    \"github.com/joho/godotenv\"\n)\n\n// Config \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8a2d\u5b9a\u3092\u4fdd\u6301\u3059\u308b\u69cb\u9020\u4f53\ntype Config struct {\n    // \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u8a2d\u5b9a\n    DBHost     string\n    DBPort     string\n    DBUser     string\n    DBPassword string\n    DBName     string\n    DBSSLMode  string\n\n    // API\u30b5\u30fc\u30d0\u30fc\u8a2d\u5b9a\n    APIPort string\n\n    // JWT\u8a2d\u5b9a\n    JWTSecret     string\n    JWTExpiration time.Duration\n}\n\n// LoadConfig \u306f\u74b0\u5883\u5909\u6570\u304b\u3089\u8a2d\u5b9a\u3092\u8aad\u307f\u8fbc\u3080\nfunc LoadConfig() *Config {\n    // .env\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\n    err := godotenv.Load()\n    if err != nil {\n        log.Println(\"Warning: .env file not found, using OS environment variables\")\n    }\n\n    // JWT\u306e\u6709\u52b9\u671f\u9650\u3092\u89e3\u6790\n    jwtExp := os.Getenv(\"JWT_EXPIRATION\")\n    var jwtExpDuration time.Duration\n    if jwtExp != \"\" {\n        jwtExpDuration, err = time.ParseDuration(jwtExp)\n        if err != nil {\n            log.Printf(\"Warning: Invalid JWT_EXPIRATION format: %v, using default 24h\", err)\n            jwtExpDuration = 24 * time.Hour\n        }\n    } else {\n        jwtExpDuration = 24 * time.Hour // \u30c7\u30d5\u30a9\u30eb\u30c824\u6642\u9593\n    }\n\n    return &amp;Config{\n        // \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u8a2d\u5b9a\n        DBHost:     getEnv(\"DB_HOST\", \"localhost\"),\n        DBPort:     getEnv(\"DB_PORT\", \"9920\"),\n        DBUser:     getEnv(\"DB_USER\", \"root\"),\n        DBPassword: getEnv(\"DB_PASSWORD\", \"password\"),\n        DBName:     getEnv(\"DB_NAME\", \"mydb\"),\n        DBSSLMode:  getEnv(\"DB_SSL_MODE\", \"disable\"),\n\n        // API\u30b5\u30fc\u30d0\u30fc\u8a2d\u5b9a\n        APIPort: getEnv(\"API_PORT\", \"9090\"),\n\n        // JWT\u8a2d\u5b9a\n        JWTSecret:     getEnv(\"JWT_SECRET\", \"default_jwt_secret\"),\n        JWTExpiration: jwtExpDuration,\n    }\n}\n\n// getEnv \u306f\u74b0\u5883\u5909\u6570\u3092\u53d6\u5f97\u3057\u3001\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u8fd4\u3059\nfunc getEnv(key, defaultValue string) string {\n    value := os.Getenv(key)\n    if value == \"\" {\n        return defaultValue\n    }\n    return value\n}\n\n// GetDSN \u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u6587\u5b57\u5217\u3092\u751f\u6210\u3059\u308b\nfunc (c *Config) GetDSN() string {\n    return \"host=\" + c.DBHost + \n           \" user=\" + c.DBUser + \n           \" password=\" + c.DBPassword + \n           \" dbname=\" + c.DBName + \n           \" port=\" + c.DBPort + \n           \" sslmode=\" + c.DBSSLMode + \n           \" TimeZone=Asia/Shanghai\"\n}\n\n// GetAPIPort \u306fAPI\u30dd\u30fc\u30c8\u3092\u53d6\u5f97\u3059\u308b\uff08\":\"\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u4ed8\u304d\uff09\nfunc (c *Config) GetAPIPort() string {\n    return \":\" + c.APIPort\n}\n</code></pre>"},{"location":"environment_variable_management/#52","title":"5.2 \u30e1\u30a4\u30f3\u95a2\u6570\u3067\u306e\u4f7f\u7528","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e1\u30a4\u30f3\u95a2\u6570\u3067\u8a2d\u5b9a\u3092\u8aad\u307f\u8fbc\u307f\u3001\u4f7f\u7528\u3057\u307e\u3059\uff1a</p> <pre><code>// cmd/marketplace/main.go\npackage main\n\nimport (\n    \"log\"\n\n    \"github.com/labstack/echo/v4\"\n    \"gorm.io/driver/postgres\"\n    \"gorm.io/gorm\"\n\n    \"github.com/yourusername/go-ddd/internal/application/services\"\n    \"github.com/yourusername/go-ddd/internal/infrastructure/config\"\n    postgres2 \"github.com/yourusername/go-ddd/internal/infrastructure/db/postgres\"\n    \"github.com/yourusername/go-ddd/internal/interface/api/rest\"\n)\n\nfunc main() {\n    // \u8a2d\u5b9a\u3092\u8aad\u307f\u8fbc\u3080\n    cfg := config.LoadConfig()\n\n    // \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\n    gormDB, err := gorm.Open(postgres.Open(cfg.GetDSN()), &amp;gorm.Config{})\n    if err != nil {\n        log.Fatalf(\"Failed to connect to database: %v\", err)\n    }\n\n    // \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\n    if err := postgres2.RunMigrations(gormDB); err != nil {\n        log.Fatalf(\"Failed to run migrations: %v\", err)\n    }\n\n    // \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u521d\u671f\u5316\n    productRepo := postgres2.NewGormProductRepository(gormDB)\n    sellerRepo := postgres2.NewGormSellerRepository(gormDB)\n\n    // \u30b5\u30fc\u30d3\u30b9\u306e\u521d\u671f\u5316\n    productService := services.NewProductService(productRepo, sellerRepo)\n    sellerService := services.NewSellerService(sellerRepo)\n\n    // Echo\u30b5\u30fc\u30d0\u30fc\u306e\u521d\u671f\u5316\n    e := echo.New()\n\n    // \u30eb\u30fc\u30bf\u30fc\u306e\u8a2d\u5b9a\n    rest.SetupRouter(e, productService, sellerService)\n\n    // \u30b5\u30fc\u30d0\u30fc\u306e\u8d77\u52d5\n    if err := e.Start(cfg.GetAPIPort()); err != nil {\n        log.Fatalf(\"Failed to start server: %v\", err)\n    }\n}\n</code></pre>"},{"location":"environment_variable_management/#6","title":"6. \u30c6\u30b9\u30c8\u74b0\u5883\u3067\u306e\u4f7f\u7528","text":"<p>\u30c6\u30b9\u30c8\u6642\u306b\u306f\u3001\u30c6\u30b9\u30c8\u7528\u306e\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306b<code>.env.test</code>\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\uff1a</p> <pre><code>// internal/infrastructure/config/config_test.go\npackage config\n\nimport (\n    \"os\"\n    \"testing\"\n    \"time\"\n\n    \"github.com/joho/godotenv\"\n)\n\nfunc TestLoadConfig(t *testing.T) {\n    // \u30c6\u30b9\u30c8\u7528\u306e\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\n    os.Setenv(\"DB_HOST\", \"test-host\")\n    os.Setenv(\"API_PORT\", \"8080\")\n    os.Setenv(\"JWT_EXPIRATION\", \"1h\")\n\n    // \u8a2d\u5b9a\u3092\u8aad\u307f\u8fbc\u3080\n    cfg := LoadConfig()\n\n    // \u8a2d\u5b9a\u5024\u3092\u691c\u8a3c\n    if cfg.DBHost != \"test-host\" {\n        t.Errorf(\"Expected DBHost to be 'test-host', got '%s'\", cfg.DBHost)\n    }\n\n    if cfg.APIPort != \"8080\" {\n        t.Errorf(\"Expected APIPort to be '8080', got '%s'\", cfg.APIPort)\n    }\n\n    if cfg.JWTExpiration != time.Hour {\n        t.Errorf(\"Expected JWTExpiration to be 1h, got '%v'\", cfg.JWTExpiration)\n    }\n\n    // \u74b0\u5883\u5909\u6570\u3092\u30af\u30ea\u30a2\n    os.Unsetenv(\"DB_HOST\")\n    os.Unsetenv(\"API_PORT\")\n    os.Unsetenv(\"JWT_EXPIRATION\")\n}\n\nfunc TestGetDSN(t *testing.T) {\n    cfg := &amp;Config{\n        DBHost:     \"localhost\",\n        DBPort:     \"5432\",\n        DBUser:     \"testuser\",\n        DBPassword: \"testpass\",\n        DBName:     \"testdb\",\n        DBSSLMode:  \"disable\",\n    }\n\n    expected := \"host=localhost user=testuser password=testpass dbname=testdb port=5432 sslmode=disable TimeZone=Asia/Shanghai\"\n    if dsn := cfg.GetDSN(); dsn != expected {\n        t.Errorf(\"Expected DSN to be '%s', got '%s'\", expected, dsn)\n    }\n}\n</code></pre>"},{"location":"environment_variable_management/#7","title":"7. \u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":""},{"location":"environment_variable_management/#71-env","title":"7.1 <code>.env</code>\u30d5\u30a1\u30a4\u30eb\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8","text":"<p><code>.env</code>\u30d5\u30a1\u30a4\u30eb\u3092Git\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30b3\u30df\u30c3\u30c8\u3057\u306a\u3044\u305f\u3081\u3001<code>.env.example</code>\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u3001\u5fc5\u8981\u306a\u74b0\u5883\u5909\u6570\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\uff1a</p> <pre><code># .env.example\n# \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30d4\u30fc\u3057\u3066.env\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3001\u9069\u5207\u306a\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\n\n# \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u8a2d\u5b9a\nDB_HOST=localhost\nDB_PORT=9920\nDB_USER=root\nDB_PASSWORD=your_password\nDB_NAME=mydb\nDB_SSL_MODE=disable\n\n# API\u30b5\u30fc\u30d0\u30fc\u8a2d\u5b9a\nAPI_PORT=9090\nAPI_SECRET=your_secret_key\n\n# JWT\u8a2d\u5b9a\nJWT_SECRET=your_jwt_secret\nJWT_EXPIRATION=24h\n</code></pre>"},{"location":"environment_variable_management/#72","title":"7.2 \u74b0\u5883\u5909\u6570\u306e\u691c\u8a3c","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u6642\u306b\u5fc5\u9808\u306e\u74b0\u5883\u5909\u6570\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\u691c\u8a3c\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\uff1a</p> <pre><code>// \u5fc5\u9808\u74b0\u5883\u5909\u6570\u306e\u691c\u8a3c\nfunc validateRequiredEnv() error {\n    required := []string{\"DB_HOST\", \"DB_USER\", \"DB_PASSWORD\", \"JWT_SECRET\"}\n    missing := []string{}\n\n    for _, r := range required {\n        if os.Getenv(r) == \"\" {\n            missing = append(missing, r)\n        }\n    }\n\n    if len(missing) &gt; 0 {\n        return fmt.Errorf(\"Missing required environment variables: %v\", missing)\n    }\n\n    return nil\n}\n</code></pre>"},{"location":"environment_variable_management/#73","title":"7.3 \u6a5f\u5bc6\u60c5\u5831\u306e\u7ba1\u7406","text":"<p>\u6a5f\u5bc6\u60c5\u5831\uff08\u30d1\u30b9\u30ef\u30fc\u30c9\u3001API\u30ad\u30fc\u306a\u3069\uff09\u306e\u7ba1\u7406\u306b\u306f\u4ee5\u4e0b\u306e\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3092\u63a8\u5968\u3057\u307e\u3059\uff1a</p> <ol> <li>\u958b\u767a\u74b0\u5883\u3067\u306f<code>.env</code>\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528</li> <li>\u30c6\u30b9\u30c8\u74b0\u5883\u3067\u306fCI/CD\u30b7\u30b9\u30c6\u30e0\u306e\u74b0\u5883\u5909\u6570\u6a5f\u80fd\u3092\u4f7f\u7528</li> <li>\u672c\u756a\u74b0\u5883\u3067\u306fKubernetes\u306eSecrets\u3084AWS Parameter Store\u306a\u3069\u306e\u5c02\u7528\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u7528</li> </ol>"},{"location":"environment_variable_management/#74-gitignore","title":"7.4 <code>.gitignore</code>\u306e\u8a2d\u5b9a","text":"<p><code>.gitignore</code>\u30d5\u30a1\u30a4\u30eb\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u3066\u3001\u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\u304c\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30b3\u30df\u30c3\u30c8\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\uff1a</p> <pre><code># \u74b0\u5883\u5909\u6570\u30d5\u30a1\u30a4\u30eb\n.env\n.env.*\n!.env.example\n</code></pre>"},{"location":"environment_variable_management/#8","title":"8. \u307e\u3068\u3081","text":"<p>godotenv\u3092\u4f7f\u7528\u3057\u305f\u74b0\u5883\u5909\u6570\u7ba1\u7406\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\u3092\u5916\u90e8\u5316\u3057\u3001\u7570\u306a\u308b\u74b0\u5883\u3067\u306e\u5b9f\u884c\u3092\u5bb9\u6613\u306b\u3057\u307e\u3059\u3002\u3053\u306e\u5b9f\u88c5\u306b\u3088\u308a\u3001\u4ee5\u4e0b\u306e\u30e1\u30ea\u30c3\u30c8\u304c\u5f97\u3089\u308c\u307e\u3059\uff1a</p> <ol> <li>\u8a2d\u5b9a\u306e\u4e00\u5143\u7ba1\u7406: \u3059\u3079\u3066\u306e\u8a2d\u5b9a\u304c\u4e00\u7b87\u6240\u3067\u7ba1\u7406\u3055\u308c\u3001\u5909\u66f4\u304c\u5bb9\u6613</li> <li>\u74b0\u5883\u3054\u3068\u306e\u8a2d\u5b9a: \u958b\u767a\u3001\u30c6\u30b9\u30c8\u3001\u672c\u756a\u74b0\u5883\u3067\u7570\u306a\u308b\u8a2d\u5b9a\u3092\u4f7f\u7528\u53ef\u80fd</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u5411\u4e0a: \u6a5f\u5bc6\u60c5\u5831\u3092\u30b3\u30fc\u30c9\u304b\u3089\u5206\u96e2</li> <li>\u30c7\u30d7\u30ed\u30a4\u306e\u7c21\u7d20\u5316: \u74b0\u5883\u5909\u6570\u3092\u5909\u66f4\u3059\u308b\u3060\u3051\u3067\u8a2d\u5b9a\u3092\u5909\u66f4\u53ef\u80fd</li> </ol> <p>godotenv\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u300112-Factor\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u300c\u8a2d\u5b9a\u300d\u306e\u539f\u5247\u306b\u5f93\u3044\u3001\u3088\u308a\u5805\u7262\u3067\u4fdd\u5b88\u6027\u306e\u9ad8\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"feature_list/","title":"Go-DDD \u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u6a5f\u80fd\u4e00\u89a7","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6a5f\u80fd\u4e00\u89a7\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002</p> <p></p>"},{"location":"feature_list/#1-product","title":"1. \u5546\u54c1\uff08Product\uff09\u7ba1\u7406\u6a5f\u80fd","text":""},{"location":"feature_list/#11","title":"1.1 \u5546\u54c1\u306e\u57fa\u672c\u64cd\u4f5c","text":"<ul> <li>\u5546\u54c1\u306e\u4f5c\u6210: \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u65b0\u3057\u3044\u5546\u54c1\u3092\u4f5c\u6210\u3059\u308b\u6a5f\u80fd</li> <li>\u5546\u54c1\u306e\u691c\u7d22: \u5168\u3066\u306e\u5546\u54c1\u3092\u53d6\u5f97\u3059\u308b\u6a5f\u80fd\uff08FindAll\uff09</li> <li>\u5546\u54c1\u306e\u8a73\u7d30\u53d6\u5f97: ID\u306b\u3088\u308b\u5546\u54c1\u306e\u8a73\u7d30\u60c5\u5831\u53d6\u5f97\u6a5f\u80fd\uff08ById\uff09</li> <li>\u5546\u54c1\u306e\u66f4\u65b0: \u5546\u54c1\u60c5\u5831\u3092\u66f4\u65b0\u3059\u308b\u6a5f\u80fd</li> <li>\u5546\u54c1\u306e\u691c\u8a3c: \u5546\u54c1\u30c7\u30fc\u30bf\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u6a5f\u80fd</li> </ul>"},{"location":"feature_list/#12","title":"1.2 \u5546\u54c1\u306e\u9ad8\u5ea6\u306a\u6a5f\u80fd","text":"<ul> <li>\u5546\u54c1-\u51fa\u54c1\u8005\u306e\u95a2\u9023\u4ed8\u3051: \u5546\u54c1\u3068\u51fa\u54c1\u8005\u3092\u95a2\u9023\u4ed8\u3051\u308b\u6a5f\u80fd</li> <li>\u5b58\u5728\u3057\u306a\u3044\u51fa\u54c1\u8005\u306e\u30a8\u30e9\u30fc\u51e6\u7406: \u51fa\u54c1\u8005\u304cDB\u306b\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306e\u30a8\u30e9\u30fc\u51e6\u7406\u6a5f\u80fd</li> <li>\u5546\u54c1\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306e404\u30ec\u30b9\u30dd\u30f3\u30b9: \u5546\u54c1\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306b\u9069\u5207\u306aHTTP\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u8fd4\u3059\u6a5f\u80fd</li> </ul>"},{"location":"feature_list/#2-seller","title":"2. \u51fa\u54c1\u8005\uff08Seller\uff09\u7ba1\u7406\u6a5f\u80fd","text":""},{"location":"feature_list/#21","title":"2.1 \u51fa\u54c1\u8005\u306e\u57fa\u672c\u64cd\u4f5c","text":"<ul> <li>\u51fa\u54c1\u8005\u306e\u4f5c\u6210: \u65b0\u3057\u3044\u51fa\u54c1\u8005\u3092\u4f5c\u6210\u3059\u308b\u6a5f\u80fd</li> <li>\u51fa\u54c1\u8005\u306e\u691c\u7d22: \u5168\u3066\u306e\u51fa\u54c1\u8005\u3092\u53d6\u5f97\u3059\u308b\u6a5f\u80fd</li> <li>\u51fa\u54c1\u8005\u306e\u8a73\u7d30\u53d6\u5f97: ID\u306b\u3088\u308b\u51fa\u54c1\u8005\u306e\u8a73\u7d30\u60c5\u5831\u53d6\u5f97\u6a5f\u80fd</li> <li>\u51fa\u54c1\u8005\u306e\u66f4\u65b0: \u51fa\u54c1\u8005\u60c5\u5831\u3092\u66f4\u65b0\u3059\u308b\u6a5f\u80fd\uff08UpdateName\u7b49\uff09</li> <li>\u51fa\u54c1\u8005\u306e\u524a\u9664: \u51fa\u54c1\u8005\u3092\u524a\u9664\u3059\u308b\u6a5f\u80fd</li> </ul>"},{"location":"feature_list/#22","title":"2.2 \u51fa\u54c1\u8005\u306e\u9ad8\u5ea6\u306a\u6a5f\u80fd","text":"<ul> <li>\u51fa\u54c1\u8005\u306e\u691c\u8a3c: \u51fa\u54c1\u8005\u30c7\u30fc\u30bf\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u6a5f\u80fd</li> <li>\u51fa\u54c1\u8005\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306e404\u30ec\u30b9\u30dd\u30f3\u30b9: \u51fa\u54c1\u8005\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306b\u9069\u5207\u306aHTTP\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u8fd4\u3059\u6a5f\u80fd</li> </ul>"},{"location":"feature_list/#3","title":"3. \u30b7\u30b9\u30c6\u30e0\u6a5f\u80fd","text":""},{"location":"feature_list/#31-api","title":"3.1 API\u6a5f\u80fd","text":"<ul> <li>RESTful API: /api/v1 \u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u6301\u3064RESTful API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8</li> <li>DTO\u3068\u30de\u30c3\u30d1\u30fc: \u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u5916\u90e8\u306b\u516c\u958b\u3057\u306a\u3044\u305f\u3081\u306eDTO\u3068\u30de\u30c3\u30d1\u30fc\u6a5f\u80fd</li> <li>\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0: \u30ea\u30ab\u30d0\u30ea\u30fc\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f7f\u7528\u3057\u305f\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u6a5f\u80fd</li> </ul>"},{"location":"feature_list/#32","title":"3.2 \u30c7\u30fc\u30bf\u7ba1\u7406\u6a5f\u80fd","text":"<ul> <li>\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u7ba1\u7406: \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306eCreatedAt\u3068UpdatedAt\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3088\u308b\u4f5c\u6210\u30fb\u66f4\u65b0\u65e5\u6642\u306e\u7ba1\u7406</li> <li>\u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8: \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u8ad6\u7406\u524a\u9664\u6a5f\u80fd</li> </ul>"},{"location":"feature_list/#33","title":"3.3 \u958b\u767a\u652f\u63f4\u6a5f\u80fd","text":"<ul> <li>\u30c6\u30b9\u30c8: \u5404\u6a5f\u80fd\u306b\u5bfe\u3059\u308b\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8</li> <li>\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u4f8b: \u3055\u307e\u3056\u307e\u306a\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u4f8b\u306e\u63d0\u4f9b</li> </ul>"},{"location":"gen_implementation/","title":"ORM\u304b\u3089Gen\u3078\u306e\u79fb\u884c\u3068\u4f7f\u3044\u65b9","text":""},{"location":"gen_implementation/#1","title":"1. \u6982\u8981","text":"<p>\u3053\u306e\u6587\u66f8\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308b\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u5c64\u306e\u5b9f\u88c5\u3092\u3001\u5f93\u6765\u306eORM\u30de\u30c3\u30d1\u30fc\u304b\u3089GORM\u306eGen\u306b\u79fb\u884c\u3057\u305f\u8a73\u7d30\u306b\u3064\u3044\u3066\u89e3\u8aac\u3057\u307e\u3059\u3002Gen\u306f\u3001GORM\u306e\u4e0a\u306b\u69cb\u7bc9\u3055\u308c\u305f\u5f37\u529b\u306a\u30b3\u30fc\u30c9\u751f\u6210\u30c4\u30fc\u30eb\u3067\u3001\u578b\u5b89\u5168\u306a\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9API\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p>"},{"location":"gen_implementation/#11-gen","title":"1.1 Gen\u306e\u7279\u5fb4","text":"<p>Gen\u306f\u4ee5\u4e0b\u306e\u7279\u5fb4\u3092\u6301\u3063\u3066\u3044\u307e\u3059\uff1a</p> <ol> <li>\u578b\u5b89\u5168\u306aAPI: <code>interface{}</code>\u3092\u4f7f\u308f\u306a\u3044100%\u578b\u5b89\u5168\u306a\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9API\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</li> <li>\u52d5\u7684\u306aSQL\u304b\u3089\u306e\u4f7f\u3044\u3084\u3059\u304f\u518d\u5229\u7528\u53ef\u80fd\u306aAPI: SQL\u3092Go\u306e\u6587\u6cd5\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</li> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u306e\u81ea\u52d5\u751f\u6210: \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b9\u30ad\u30fc\u30de\u304b\u3089GORM\u306e\u898f\u7d04\u306b\u5f93\u3063\u305f\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u751f\u6210\u3057\u307e\u3059\u3002</li> <li>GORM\u306e\u6a5f\u80fd\u3092\u3059\u3079\u3066\u30b5\u30dd\u30fc\u30c8: GORM\u306e\u4e0b\u3067\u52d5\u4f5c\u3059\u308b\u305f\u3081\u3001GORM\u306e\u3059\u3079\u3066\u306e\u6a5f\u80fd\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u3001\u30b5\u30dd\u30fc\u30c8\u3059\u308bDBMS\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002</li> </ol>"},{"location":"gen_implementation/#12-ormgen","title":"1.2 ORM\u304b\u3089Gen\u3078\u306e\u79fb\u884c\u7406\u7531","text":"<p>\u5f93\u6765\u306eORM\u30de\u30c3\u30d1\u30fc\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8ab2\u984c\u304c\u3042\u308a\u307e\u3057\u305f\uff1a</p> <ol> <li>SQL\u3068Go\u306e\u6df7\u5728: \u8907\u96d1\u306a\u30af\u30a8\u30ea\u3092\u66f8\u304f\u969b\u306b\u3001Go\u306e\u30b3\u30fc\u30c9\u3068SQL\u6587\u5b57\u5217\u304c\u6df7\u5728\u3057\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30b9\u30a4\u30c3\u30c1\u306e\u30b3\u30b9\u30c8\u304c\u767a\u751f\u3057\u3066\u3044\u307e\u3057\u305f\u3002</li> <li>\u578b\u5b89\u5168\u6027\u306e\u6b20\u5982: SQL\u6587\u5b57\u5217\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3001\u578b\u5b89\u5168\u6027\u304c\u5931\u308f\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3057\u305f\u3002</li> <li>\u30ab\u30e9\u30e0\u540d\u306e\u624b\u52d5\u5165\u529b: \u30c6\u30fc\u30d6\u30eb\u306e\u30ab\u30e9\u30e0\u540d\u3092\u624b\u52d5\u3067\u5165\u529b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u30df\u30b9\u306e\u539f\u56e0\u3068\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002</li> </ol> <p>Gen\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u3053\u308c\u3089\u306e\u8ab2\u984c\u3092\u89e3\u6c7a\u3057\u3001\u3088\u308a\u4fdd\u5b88\u6027\u306e\u9ad8\u3044\u30b3\u30fc\u30c9\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"gen_implementation/#2-gen","title":"2. Gen\u306e\u5b9f\u88c5","text":""},{"location":"gen_implementation/#21","title":"2.1 \u30e2\u30c7\u30eb\u751f\u6210\u306e\u8a2d\u5b9a","text":"<p>Gen\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u307e\u305a\u30e2\u30c7\u30eb\u751f\u6210\u306e\u305f\u3081\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3001<code>generate_models.go</code>\u30d5\u30a1\u30a4\u30eb\u306e\u4f8b\u3067\u3059\uff1a</p> <pre><code>package main\n\nimport (\n    \"github.com/sklinkert/go-ddd/internal/infrastructure/db/postgres\"\n    \"gorm.io/gen\"\n)\n\nfunc main() {\n    g := gen.NewGenerator(gen.Config{\n        OutPath:           \"./internal/infrastructure/db/postgres/gen/query\", // \u51fa\u529b\u30d1\u30b9\n        Mode:              gen.WithoutContext | gen.WithDefaultQuery | gen.WithQueryInterface,\n        FieldWithIndexTag: true,\n        FieldWithTypeTag:  true,\n        FieldNullable:     true,\n    })\n\n    // \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u306e\u53d6\u5f97\n    db, err := postgres.NewConnection()\n    if err != nil {\n        panic(err)\n    }\n\n    g.UseDB(db)\n\n    // \u3059\u3079\u3066\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u751f\u6210\n    all := g.GenerateAllTable()\n\n    g.ApplyBasic(all...)\n\n    // \u30b3\u30fc\u30c9\u306e\u751f\u6210\n    g.Execute()\n}\n</code></pre> <p>\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b9\u30ad\u30fc\u30de\u304b\u3089\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\uff1a</p> <ol> <li>\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb: <code>gen/model/</code>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3001\u5404\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u5fdc\u3059\u308bGo\u306e\u69cb\u9020\u4f53\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002</li> <li>\u30af\u30a8\u30ea\u30d5\u30a1\u30a4\u30eb: <code>gen/query/</code>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3001\u5404\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u3059\u308b\u578b\u5b89\u5168\u306a\u30af\u30a8\u30eaAPI\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002</li> </ol>"},{"location":"gen_implementation/#22","title":"2.2 \u751f\u6210\u3055\u308c\u308b\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb","text":"<p>\u751f\u6210\u3055\u308c\u308b\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30c6\u30fc\u30d6\u30eb\u306e\u69cb\u9020\u3092\u53cd\u6620\u3057\u305fGo\u306e\u69cb\u9020\u4f53\u3067\u3059\u3002\u4ee5\u4e0b\u306f\u3001<code>Product</code>\u30e2\u30c7\u30eb\u306e\u4f8b\u3067\u3059\uff1a</p> <pre><code>// Code generated by gorm.io/gen. DO NOT EDIT.\n\npackage model\n\nimport (\n    \"time\"\n\n    \"github.com/google/uuid\"\n    \"gorm.io/gorm\"\n)\n\nconst TableNameProduct = \"products\"\n\n// Product mapped from table &lt;products&gt;\ntype Product struct {\n    Id        uuid.UUID      `gorm:\"column:id;type:uuid;primaryKey\" json:\"id\"`\n    Name      string         `gorm:\"column:name;type:varchar(255);not null\" json:\"name\"`\n    Price     float64        `gorm:\"column:price;type:float;not null\" json:\"price\"`\n    SellerId  uuid.UUID      `gorm:\"column:seller_id;type:uuid;index\" json:\"seller_id\"`\n    Seller    Seller         `gorm:\"foreignKey:SellerId\" json:\"seller\"`\n    CreatedAt time.Time      `gorm:\"column:created_at;type:timestamp;not null\" json:\"created_at\"`\n    UpdatedAt time.Time      `gorm:\"column:updated_at;type:timestamp;not null\" json:\"updated_at\"`\n    DeletedAt gorm.DeletedAt `gorm:\"column:deleted_at;type:timestamp\" json:\"deleted_at\"`\n}\n\n// TableName Product's table name\nfunc (*Product) TableName() string {\n    return TableNameProduct\n}\n</code></pre>"},{"location":"gen_implementation/#23","title":"2.3 \u751f\u6210\u3055\u308c\u308b\u30af\u30a8\u30ea\u30d5\u30a1\u30a4\u30eb","text":"<p>\u751f\u6210\u3055\u308c\u308b\u30af\u30a8\u30ea\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u578b\u5b89\u5168\u306a\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9API\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3001<code>Product</code>\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u3059\u308b\u30af\u30a8\u30eaAPI\u306e\u4e00\u90e8\u3067\u3059\uff1a</p> <pre><code>// Code generated by gorm.io/gen. DO NOT EDIT.\n\npackage query\n\n// ...\n\ntype productDo struct{ gen.DO }\n\n// Create creates new product records\nfunc (p productDo) Create(values ...*model.Product) error {\n    if len(values) == 0 {\n        return nil\n    }\n    return p.DO.Create(values)\n}\n\n// First finds the first product record\nfunc (p productDo) First() (*model.Product, error) {\n    if result, err := p.DO.First(); err != nil {\n        return nil, err\n    } else {\n        return result.(*model.Product), nil\n    }\n}\n\n// Find finds product records\nfunc (p productDo) Find() ([]*model.Product, error) {\n    result, err := p.DO.Find()\n    return result.([]*model.Product), err\n}\n\n// Where adds conditions to query\nfunc (p productDo) Where(conds ...gen.Condition) *productDo {\n    return p.withDO(p.DO.Where(conds...))\n}\n\n// ...\n</code></pre>"},{"location":"gen_implementation/#3-gen","title":"3. Gen\u306e\u4f7f\u3044\u65b9","text":""},{"location":"gen_implementation/#31","title":"3.1 \u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9","text":"<p>Gen\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u307e\u305a\u751f\u6210\u3055\u308c\u305f\u30af\u30a8\u30eaAPI\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3092\u6e21\u3057\u3066\u30af\u30a8\u30ea\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u521d\u671f\u5316\u3057\u307e\u3059\uff1a</p> <pre><code>import (\n    \"context\"\n    \"github.com/sklinkert/go-ddd/internal/infrastructure/db/postgres\"\n    \"github.com/sklinkert/go-ddd/internal/infrastructure/db/postgres/gen/model\"\n    \"github.com/sklinkert/go-ddd/internal/infrastructure/db/postgres/gen/query\"\n)\n\nfunc main() {\n    // \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u306e\u53d6\u5f97\n    db, err := postgres.NewConnection()\n    if err != nil {\n        panic(err)\n    }\n\n    // \u30af\u30a8\u30ea\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u521d\u671f\u5316\n    q := query.Use(db)\n    productQuery := q.Product\n    sellerQuery := q.Seller\n\n    ctx := context.Background()\n\n    // \u4ee5\u4e0b\u3001\u30af\u30a8\u30ea\u306e\u5b9f\u884c\n    // ...\n}\n</code></pre>"},{"location":"gen_implementation/#32","title":"3.2 \u30c7\u30fc\u30bf\u306e\u4f5c\u6210","text":"<pre><code>// \u65b0\u3057\u3044\u5546\u54c1\u306e\u4f5c\u6210\nproduct := &amp;model.Product{\n    Name:     \"\u30c6\u30b9\u30c8\u5546\u54c1\",\n    Price:    9.99,\n    SellerId: sellerId,\n}\n\nerr = q.Transaction(func(tx *query.Query) error {\n    return tx.Product.WithContext(ctx).Create(product)\n})\n</code></pre>"},{"location":"gen_implementation/#33","title":"3.3 \u30c7\u30fc\u30bf\u306e\u53d6\u5f97","text":"<pre><code>// ID\u306b\u3088\u308b\u5546\u54c1\u306e\u53d6\u5f97\nproduct, err := productQuery.WithContext(ctx).Where(productQuery.Id.Eq(productId)).First()\n\n// \u5168\u5546\u54c1\u306e\u53d6\u5f97\nproducts, err := productQuery.WithContext(ctx).Find()\n\n// \u6761\u4ef6\u4ed8\u304d\u691c\u7d22\nproducts, err := productQuery.WithContext(ctx).\n    Where(productQuery.Price.Gt(10.0)).\n    Order(productQuery.CreatedAt.Desc()).\n    Find()\n</code></pre>"},{"location":"gen_implementation/#34","title":"3.4 \u30c7\u30fc\u30bf\u306e\u66f4\u65b0","text":"<pre><code>// \u5546\u54c1\u306e\u66f4\u65b0\nproduct.Price = 19.99\nerr = productQuery.WithContext(ctx).Save(product)\n\n// \u307e\u305f\u306f\u7279\u5b9a\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u307f\u66f4\u65b0\nerr = productQuery.WithContext(ctx).\n    Where(productQuery.Id.Eq(productId)).\n    UpdateSimple(productQuery.Price.Value(19.99))\n</code></pre>"},{"location":"gen_implementation/#35","title":"3.5 \u30c7\u30fc\u30bf\u306e\u524a\u9664","text":"<pre><code>// \u5546\u54c1\u306e\u524a\u9664\n_, err = productQuery.WithContext(ctx).Where(productQuery.Id.Eq(productId)).Delete()\n</code></pre>"},{"location":"gen_implementation/#36","title":"3.6 \u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u305f\u30af\u30a8\u30ea","text":"<pre><code>// \u51fa\u54c1\u8005\u3068\u305d\u306e\u5546\u54c1\u3092\u53d6\u5f97\nseller, err := sellerQuery.WithContext(ctx).\n    Where(sellerQuery.Id.Eq(sellerId)).\n    Preload(sellerQuery.Products).\n    First()\n\n// \u5546\u54c1\u3068\u51fa\u54c1\u8005\u3092\u7d50\u5408\u3057\u3066\u53d6\u5f97\nproducts, err := productQuery.WithContext(ctx).\n    Join(sellerQuery, productQuery.SellerId.EqCol(sellerQuery.Id)).\n    Where(sellerQuery.Name.Eq(\"\u30c6\u30b9\u30c8\u51fa\u54c1\u8005\")).\n    Find()\n</code></pre>"},{"location":"gen_implementation/#37","title":"3.7 \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3","text":"<pre><code>err = q.Transaction(func(tx *query.Query) error {\n    // \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5185\u306e\u51e6\u7406\n    product := &amp;model.Product{\n        Name:     \"\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30c6\u30b9\u30c8\",\n        Price:    9.99,\n        SellerId: sellerId,\n    }\n\n    if err := tx.Product.WithContext(ctx).Create(product); err != nil {\n        return err\n    }\n\n    // \u4ed6\u306e\u51e6\u7406...\n\n    return nil\n})\n</code></pre>"},{"location":"gen_implementation/#4-ormgen","title":"4. ORM\u3068Gen\u306e\u6bd4\u8f03","text":""},{"location":"gen_implementation/#41","title":"4.1 \u57fa\u672c\u7684\u306a\u30af\u30a8\u30ea\u306e\u6bd4\u8f03","text":""},{"location":"gen_implementation/#411","title":"4.1.1 \u30c7\u30fc\u30bf\u306e\u53d6\u5f97","text":"<p>ORM\uff08GORM\uff09: <pre><code>var product Product\ndb.Where(\"id = ?\", productId).First(&amp;product)\n</code></pre></p> <p>Gen: <pre><code>product, err := productQuery.WithContext(ctx).Where(productQuery.Id.Eq(productId)).First()\n</code></pre></p>"},{"location":"gen_implementation/#412","title":"4.1.2 \u6761\u4ef6\u4ed8\u304d\u691c\u7d22","text":"<p>ORM\uff08GORM\uff09: <pre><code>var products []Product\ndb.Where(\"price &gt; ?\", 10.0).Order(\"created_at DESC\").Find(&amp;products)\n</code></pre></p> <p>Gen: <pre><code>products, err := productQuery.WithContext(ctx).\n    Where(productQuery.Price.Gt(10.0)).\n    Order(productQuery.CreatedAt.Desc()).\n    Find()\n</code></pre></p>"},{"location":"gen_implementation/#413","title":"4.1.3 \u7d50\u5408\u30af\u30a8\u30ea","text":"<p>ORM\uff08GORM\uff09: <pre><code>var products []Product\ndb.Joins(\"JOIN sellers ON sellers.id = products.seller_id\").\n    Where(\"sellers.name = ?\", \"\u30c6\u30b9\u30c8\u51fa\u54c1\u8005\").\n    Find(&amp;products)\n</code></pre></p> <p>Gen: <pre><code>products, err := productQuery.WithContext(ctx).\n    Join(sellerQuery, productQuery.SellerId.EqCol(sellerQuery.Id)).\n    Where(sellerQuery.Name.Eq(\"\u30c6\u30b9\u30c8\u51fa\u54c1\u8005\")).\n    Find()\n</code></pre></p>"},{"location":"gen_implementation/#42-gen","title":"4.2 Gen\u306e\u5229\u70b9","text":"<ol> <li>\u578b\u5b89\u5168\u6027: \u30ab\u30e9\u30e0\u540d\u3084\u30c6\u30fc\u30d6\u30eb\u540d\u304c\u578b\u3068\u3057\u3066\u8868\u73fe\u3055\u308c\u308b\u305f\u3081\u3001\u30bf\u30a4\u30d7\u30df\u30b9\u306b\u3088\u308b\u30a8\u30e9\u30fc\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</li> <li>\u30b3\u30fc\u30c9\u88dc\u5b8c: IDE\u306e\u30b3\u30fc\u30c9\u88dc\u5b8c\u6a5f\u80fd\u3092\u6d3b\u7528\u3067\u304d\u308b\u305f\u3081\u3001\u958b\u767a\u52b9\u7387\u304c\u5411\u4e0a\u3057\u307e\u3059\u3002</li> <li>\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u306e\u3057\u3084\u3059\u3055: \u30ab\u30e9\u30e0\u540d\u304c\u5909\u66f4\u3055\u308c\u305f\u5834\u5408\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a8\u30e9\u30fc\u304c\u691c\u51fa\u3055\u308c\u308b\u305f\u3081\u3001\u5b89\u5168\u306b\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002</li> <li>SQL\u306e\u77e5\u8b58\u304c\u5c11\u306a\u304f\u3066\u3082\u4f7f\u3048\u308b: SQL\u306e\u6587\u6cd5\u3092\u899a\u3048\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001Go\u306e\u6587\u6cd5\u3060\u3051\u3067\u8907\u96d1\u306a\u30af\u30a8\u30ea\u3092\u69cb\u7bc9\u3067\u304d\u307e\u3059\u3002</li> <li>\u81ea\u52d5\u751f\u6210: \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b9\u30ad\u30fc\u30de\u304b\u3089\u30b3\u30fc\u30c9\u304c\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\u305f\u3081\u3001\u30e2\u30c7\u30eb\u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u540c\u671f\u304c\u5bb9\u6613\u3067\u3059\u3002</li> </ol>"},{"location":"gen_implementation/#5","title":"5. \u307e\u3068\u3081","text":"<p>GORM\u306eGen\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u578b\u5b89\u5168\u3067\u4fdd\u5b88\u6027\u306e\u9ad8\u3044\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u30b3\u30fc\u30c9\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\u5f93\u6765\u306eORM\u30de\u30c3\u30d1\u30fc\u3068\u6bd4\u8f03\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5229\u70b9\u304c\u3042\u308a\u307e\u3059\uff1a</p> <ol> <li>\u578b\u5b89\u5168\u6027\u306e\u5411\u4e0a: \u30ab\u30e9\u30e0\u540d\u3084\u30c6\u30fc\u30d6\u30eb\u540d\u304c\u578b\u3068\u3057\u3066\u8868\u73fe\u3055\u308c\u308b\u305f\u3081\u3001\u30bf\u30a4\u30d7\u30df\u30b9\u306b\u3088\u308b\u30a8\u30e9\u30fc\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</li> <li>\u958b\u767a\u52b9\u7387\u306e\u5411\u4e0a: IDE\u306e\u30b3\u30fc\u30c9\u88dc\u5b8c\u6a5f\u80fd\u3092\u6d3b\u7528\u3067\u304d\u308b\u305f\u3081\u3001\u958b\u767a\u52b9\u7387\u304c\u5411\u4e0a\u3057\u307e\u3059\u3002</li> <li>\u30b3\u30fc\u30c9\u306e\u53ef\u8aad\u6027\u5411\u4e0a: SQL\u306e\u6587\u5b57\u5217\u3068Go\u306e\u30b3\u30fc\u30c9\u304c\u6df7\u5728\u305b\u305a\u3001\u4e00\u8cab\u3057\u305fGo\u306e\u6587\u6cd5\u3067\u30af\u30a8\u30ea\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002</li> <li>\u4fdd\u5b88\u6027\u306e\u5411\u4e0a: \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b9\u30ad\u30fc\u30de\u306e\u5909\u66f4\u304c\u3042\u3063\u305f\u5834\u5408\u3001\u30b3\u30fc\u30c9\u3092\u518d\u751f\u6210\u3059\u308b\u3060\u3051\u3067\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002</li> </ol> <p>Gen\u306f\u3001GORM\u306e\u4e0a\u306b\u69cb\u7bc9\u3055\u308c\u305f\u5f37\u529b\u306a\u30c4\u30fc\u30eb\u3067\u3042\u308a\u3001GORM\u306e\u3059\u3079\u3066\u306e\u6a5f\u80fd\u3092\u5229\u7528\u3057\u306a\u304c\u3089\u3001\u3088\u308a\u578b\u5b89\u5168\u3067\u4f7f\u3044\u3084\u3059\u3044API\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u7279\u306b\u5927\u898f\u6a21\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3084\u3001\u8907\u96d1\u306a\u30af\u30a8\u30ea\u3092\u591a\u7528\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001Gen\u306e\u5c0e\u5165\u3092\u691c\u8a0e\u3059\u308b\u4fa1\u5024\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"gen_implementation/#6","title":"6. \u53c2\u8003\u30ea\u30f3\u30af","text":"<ul> <li>GORM Gen \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>GORM \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>Go-DDD \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eGen\u5b9f\u88c5\u4f8b</li> </ul>"},{"location":"go_application_setup/","title":"Go\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806","text":""},{"location":"go_application_setup/#1","title":"1. \u6982\u8981","text":"<p>\u3053\u306e\u6587\u66f8\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u90e8\u5206\uff08app/backend\uff09\u306b\u304a\u3051\u308bGo\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\u3068\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u8a2d\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\u3053\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\u306b\u5f93\u3046\u3053\u3068\u3067\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\uff08DDD\uff09\u306e\u539f\u5247\u306b\u57fa\u3065\u3044\u305fGo\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"go_application_setup/#11","title":"1.1 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u9020","text":"<p>\u4ee5\u4e0b\u306fGo\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u57fa\u672c\u69cb\u9020\u3092\u8868\u3059\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u56f3\u3067\u3059\uff1a</p> <p></p>"},{"location":"go_application_setup/#12","title":"1.2 \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30d7\u30ed\u30bb\u30b9","text":"<p>\u4ee5\u4e0b\u306fGo\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30d7\u30ed\u30bb\u30b9\u3092\u8868\u3059\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u56f3\u3067\u3059\uff1a</p> <p></p>"},{"location":"go_application_setup/#2","title":"2. \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806","text":""},{"location":"go_application_setup/#21","title":"2.1 \u524d\u63d0\u6761\u4ef6","text":"<p>Go\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u524d\u306b\u3001\u4ee5\u4e0b\u306e\u30c4\u30fc\u30eb\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\uff1a</p> <ol> <li>Go 1.23.0\u4ee5\u4e0a: \u6700\u65b0\u306eGo\u8a00\u8a9e\u74b0\u5883</li> <li>Docker: \u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u4f9d\u5b58\u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081</li> <li>Git: \u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u306e\u305f\u3081</li> </ol>"},{"location":"go_application_setup/#22","title":"2.2 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020\u306e\u4f5c\u6210","text":"<p>\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020\u3092\u4f5c\u6210\u3057\u307e\u3059\uff1a</p> <pre><code>mkdir -p app/backend/{cmd/{marketplace,gen},internal/{domain,application,infrastructure,interface},docs,features}\n</code></pre> <p>\u3053\u306e\u69cb\u9020\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\uff08DDD\uff09\u306e\u539f\u5247\u306b\u57fa\u3065\u3044\u3066\u304a\u308a\u3001\u4ee5\u4e0b\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff1a</p> <ul> <li>cmd: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8</li> <li>marketplace: \u30e1\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3</li> <li>gen: \u30b3\u30fc\u30c9\u751f\u6210\u30c4\u30fc\u30eb</li> <li>internal: \u5185\u90e8\u30d1\u30c3\u30b1\u30fc\u30b8</li> <li>domain: \u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\uff08\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3001\u5024\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u30c9\u30e1\u30a4\u30f3\u30b5\u30fc\u30d3\u30b9\uff09</li> <li>application: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d3\u30b9\uff08\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\uff09</li> <li>infrastructure: \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\uff08\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5b9f\u88c5\u3001\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u3068\u306e\u9023\u643a\uff09</li> <li>interface: \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\uff08\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3001\u30d7\u30ec\u30bc\u30f3\u30bf\u30fc\uff09</li> <li>docs: Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>features: Cucumber\u30c6\u30b9\u30c8\u6a5f\u80fd</li> </ul>"},{"location":"go_application_setup/#23-go-modules","title":"2.3 Go Modules\u306e\u521d\u671f\u5316","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u3001Go Modules\u3092\u521d\u671f\u5316\u3057\u307e\u3059\uff1a</p> <pre><code>cd app/backend\ngo mod init github.com/sklinkert/go-ddd\n</code></pre>"},{"location":"go_application_setup/#24","title":"2.4 \u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff1a</p> <pre><code># Web\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\ngo get github.com/labstack/echo/v4\n\n# ORM\ngo get github.com/jinzhu/gorm\ngo get gorm.io/gorm\ngo get gorm.io/driver/postgres\ngo get gorm.io/driver/sqlite\n\n# \u30b3\u30fc\u30c9\u751f\u6210\ngo get gorm.io/gen\ngo get gorm.io/plugin/dbresolver\n\n# UUID\u751f\u6210\ngo get github.com/google/uuid\n\n# Swagger\ngo get github.com/swaggo/swag/cmd/swag\ngo get github.com/swaggo/echo-swagger\n\n# \u30c6\u30b9\u30c8\ngo get github.com/stretchr/testify\ngo get github.com/cucumber/godog\ngo get github.com/testcontainers/testcontainers-go\n</code></pre>"},{"location":"go_application_setup/#25","title":"2.5 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u8a2d\u5b9a","text":"<p>PostgreSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002docker-compose.yml\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u307e\u305f\u306f\u7de8\u96c6\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff1a</p> <pre><code>version: '3'\nservices:\n  postgres:\n    image: postgres:13\n    environment:\n      POSTGRES_USER: root\n      POSTGRES_PASSWORD: password\n      POSTGRES_DB: mydb\n    ports:\n      - \"5432:5432\"\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n\nvolumes:\n  postgres_data:\n</code></pre>"},{"location":"go_application_setup/#26","title":"2.6 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u9020\u306e\u5b9f\u88c5","text":""},{"location":"go_application_setup/#261","title":"2.6.1 \u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u306e\u5b9f\u88c5","text":"<p>\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\uff08\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3001\u5024\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001Product\uff08\u5546\u54c1\uff09\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f5c\u6210\u3057\u307e\u3059\uff1a</p> <pre><code>// internal/domain/entities/product.go\npackage entities\n\nimport (\n    \"time\"\n)\n\ntype Product struct {\n    Id          string\n    Name        string\n    Description string\n    Price       float64\n    SellerId    string\n    CreatedAt   time.Time\n    UpdatedAt   time.Time\n}\n</code></pre>"},{"location":"go_application_setup/#262","title":"2.6.2 \u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5b9a\u7fa9","text":"<p>\u30c9\u30e1\u30a4\u30f3\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\uff1a</p> <pre><code>// internal/domain/repositories/product_repository.go\npackage repositories\n\nimport (\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n)\n\ntype ProductRepository interface {\n    FindAll() ([]entities.Product, error)\n    FindById(id string) (*entities.Product, error)\n    Create(product *entities.Product) error\n    Update(product *entities.Product) error\n    Delete(id string) error\n}\n</code></pre>"},{"location":"go_application_setup/#263","title":"2.6.3 \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5b9f\u88c5","text":"<p>\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5b9f\u88c5\u3092\u4f5c\u6210\u3057\u307e\u3059\uff1a</p> <pre><code>// internal/infrastructure/db/postgres/product_repository.go\npackage postgres\n\nimport (\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n    \"gorm.io/gorm\"\n    \"time\"\n)\n\ntype DBProduct struct {\n    Id          string `gorm:\"primaryKey\"`\n    Name        string\n    Description string\n    Price       float64\n    SellerId    string\n    CreatedAt   time.Time\n    UpdatedAt   time.Time\n}\n\ntype GormProductRepository struct {\n    db *gorm.DB\n}\n\nfunc NewGormProductRepository(db *gorm.DB) *GormProductRepository {\n    return &amp;GormProductRepository{db: db}\n}\n\nfunc (r *GormProductRepository) FindAll() ([]entities.Product, error) {\n    var dbProducts []DBProduct\n    result := r.db.Find(&amp;dbProducts)\n    if result.Error != nil {\n        return nil, result.Error\n    }\n\n    products := make([]entities.Product, len(dbProducts))\n    for i, dbProduct := range dbProducts {\n        products[i] = toDomainProduct(dbProduct)\n    }\n    return products, nil\n}\n\n// \u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3082\u540c\u69d8\u306b\u5b9f\u88c5\n</code></pre>"},{"location":"go_application_setup/#264","title":"2.6.4 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d3\u30b9\u306e\u5b9f\u88c5","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d3\u30b9\uff08\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\uff09\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff1a</p> <pre><code>// internal/application/services/product_service.go\npackage services\n\nimport (\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n    \"github.com/sklinkert/go-ddd/internal/domain/repositories\"\n    \"github.com/google/uuid\"\n    \"time\"\n)\n\ntype ProductService struct {\n    productRepo repositories.ProductRepository\n    sellerRepo  repositories.SellerRepository\n}\n\nfunc NewProductService(productRepo repositories.ProductRepository, sellerRepo repositories.SellerRepository) *ProductService {\n    return &amp;ProductService{\n        productRepo: productRepo,\n        sellerRepo:  sellerRepo,\n    }\n}\n\nfunc (s *ProductService) GetAllProducts() ([]entities.Product, error) {\n    return s.productRepo.FindAll()\n}\n\nfunc (s *ProductService) CreateProduct(product *entities.Product) error {\n    product.Id = uuid.New().String()\n    product.CreatedAt = time.Now()\n    product.UpdatedAt = time.Now()\n    return s.productRepo.Create(product)\n}\n\n// \u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3082\u540c\u69d8\u306b\u5b9f\u88c5\n</code></pre>"},{"location":"go_application_setup/#265","title":"2.6.5 \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5b9f\u88c5","text":"<p>RESTful API\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff1a</p> <pre><code>// internal/interface/api/rest/product_controller.go\npackage rest\n\nimport (\n    \"github.com/labstack/echo/v4\"\n    \"github.com/sklinkert/go-ddd/internal/application/services\"\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n    \"net/http\"\n)\n\ntype ProductController struct {\n    productService *services.ProductService\n}\n\nfunc NewProductController(e *echo.Echo, productService *services.ProductService) {\n    controller := &amp;ProductController{\n        productService: productService,\n    }\n\n    e.GET(\"/api/v1/products\", controller.GetAllProducts)\n    e.POST(\"/api/v1/products\", controller.CreateProduct)\n    // \u4ed6\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3082\u540c\u69d8\u306b\u8a2d\u5b9a\n}\n\n// @Summary \u5168\u3066\u306e\u5546\u54c1\u3092\u53d6\u5f97\n// @Description \u5168\u3066\u306e\u5546\u54c1\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3057\u307e\u3059\n// @Tags products\n// @Accept json\n// @Produce json\n// @Success 200 {array} entities.Product\n// @Router /api/v1/products [get]\nfunc (c *ProductController) GetAllProducts(ctx echo.Context) error {\n    products, err := c.productService.GetAllProducts()\n    if err != nil {\n        return ctx.JSON(http.StatusInternalServerError, map[string]string{\"error\": err.Error()})\n    }\n    return ctx.JSON(http.StatusOK, products)\n}\n\n// \u4ed6\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3082\u540c\u69d8\u306b\u5b9f\u88c5\n</code></pre>"},{"location":"go_application_setup/#266","title":"2.6.6 \u30e1\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u88c5","text":"<p>\u30e1\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff1a</p> <pre><code>// cmd/marketplace/main.go\n// @title Marketplace API\n// @version 1.0\n// @description This is a marketplace API server.\n// @host localhost:9090\n// @BasePath /api/v1\npackage main\n\nimport (\n    _ \"github.com/jinzhu/gorm/dialects/postgres\"\n    \"github.com/labstack/echo/v4\"\n    _ \"github.com/sklinkert/go-ddd/docs\" // Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n    \"github.com/sklinkert/go-ddd/internal/application/services\"\n    postgres2 \"github.com/sklinkert/go-ddd/internal/infrastructure/db/postgres\"\n    \"github.com/sklinkert/go-ddd/internal/interface/api/rest\"\n    echoSwagger \"github.com/swaggo/echo-swagger\"\n    \"gorm.io/driver/postgres\"\n    \"gorm.io/gorm\"\n    \"log\"\n)\n\nfunc main() {\n    dsn := \"host=localhost user=root password=password dbname=mydb port=5432 sslmode=disable TimeZone=Asia/Shanghai\"\n    port := \":9090\"\n\n    gormDB, err := gorm.Open(postgres.Open(dsn), &amp;gorm.Config{})\n    if err != nil {\n        log.Fatalf(\"Failed to connect to database: %v\", err)\n    }\n\n    // \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\n    err = gormDB.AutoMigrate()\n    if err != nil {\n        log.Fatalf(\"Failed to migrate database: %v\", err)\n    }\n\n    // \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u521d\u671f\u5316\n    productRepo := postgres2.NewGormProductRepository(gormDB)\n    sellerRepo := postgres2.NewGormSellerRepository(gormDB)\n\n    // \u30b5\u30fc\u30d3\u30b9\u306e\u521d\u671f\u5316\n    productService := services.NewProductService(productRepo, sellerRepo)\n    sellerService := services.NewSellerService(sellerRepo)\n\n    // Echo\u30b5\u30fc\u30d0\u30fc\u306e\u521d\u671f\u5316\n    e := echo.New()\n\n    // Swagger UI\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u8a2d\u5b9a\n    e.GET(\"/swagger/*\", echoSwagger.WrapHandler)\n\n    // \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u521d\u671f\u5316\n    rest.NewProductController(e, productService)\n    rest.NewSellerController(e, sellerService)\n\n    // \u30b5\u30fc\u30d0\u30fc\u306e\u8d77\u52d5\n    if err := e.Start(port); err != nil {\n        log.Fatalf(\"Failed to start server: %v\", err)\n    }\n}\n</code></pre>"},{"location":"go_application_setup/#27-swagger","title":"2.7 Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8a2d\u5b9a","text":"<p>Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\uff1a</p> <pre><code>// cmd/gen/generate_swagger.go\npackage main\n\nimport (\n    \"fmt\"\n    \"log\"\n    \"os\"\n    \"os/exec\"\n    \"path/filepath\"\n    \"runtime\"\n)\n\nfunc main() {\n    // \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078\u306e\u30d1\u30b9\u3092\u53d6\u5f97\n    currentDir, err := os.Getwd()\n    if err != nil {\n        log.Fatalf(\"Failed to get current directory: %v\", err)\n    }\n\n    // \u30b9\u30af\u30ea\u30d7\u30c8\u304capp/backend/cmd/gen\u306b\u3042\u308b\u3068\u4eee\u5b9a\n    backendDir := filepath.Join(currentDir, \"app\", \"backend\")\n\n    // \u3059\u3067\u306b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\n    if _, err := os.Stat(filepath.Join(currentDir, \"cmd\", \"marketplace\", \"main.go\")); err == nil {\n        // \u3059\u3067\u306b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3044\u308b\n        backendDir = currentDir\n    } else if _, err := os.Stat(filepath.Join(currentDir, \"app\", \"backend\", \"cmd\", \"marketplace\", \"main.go\")); err == nil {\n        // \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u306b\u3044\u308b\n        backendDir = filepath.Join(currentDir, \"app\", \"backend\")\n    } else if _, err := os.Stat(filepath.Join(currentDir, \"..\", \"..\", \"cmd\", \"marketplace\", \"main.go\")); err == nil {\n        // app/backend/cmd/gen\u306b\u3044\u308b\n        backendDir = filepath.Join(currentDir, \"..\", \"..\")\n    }\n\n    // \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\n    err = os.Chdir(backendDir)\n    if err != nil {\n        log.Fatalf(\"Failed to change directory to %s: %v\", backendDir, err)\n    }\n\n    log.Printf(\"Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u4e2d...\")\n    log.Printf(\"API\u60c5\u5831\u3092\u751f\u6210\u4e2d\u3001\u691c\u7d22\u30c7\u30a3\u30ec\u30af\u30c8\u30ea:%s\", backendDir)\n\n    // OS\u306b\u5fdc\u3058\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u3066\u5b9f\u884c\n    isWindows := runtime.GOOS == \"windows\"\n    var cmd *exec.Cmd\n    var scriptPath string\n\n    if isWindows {\n        // Windows\u7528\u306ePowerShell\u30b9\u30af\u30ea\u30d7\u30c8\n        scriptPath = filepath.Join(os.TempDir(), \"run_swag.ps1\")\n        scriptContent := `\n$env:PATH = \"$env:PATH;$(go env GOPATH)\\bin\"\ngo install github.com/swaggo/swag/cmd/swag@latest\nswag init -g cmd/marketplace/main.go -o docs\n`\n        err = os.WriteFile(scriptPath, []byte(scriptContent), 0755)\n        if err != nil {\n            log.Fatalf(\"Failed to create temporary script: %v\", err)\n        }\n        defer os.Remove(scriptPath)\n\n        // PowerShell\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\n        cmd = exec.Command(\"powershell\", \"-ExecutionPolicy\", \"Bypass\", \"-File\", scriptPath)\n    } else {\n        // Unix\u7528\u306e\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\n        scriptPath = filepath.Join(os.TempDir(), \"run_swag.sh\")\n        scriptContent := `#!/bin/bash\nexport PATH=$PATH:$(go env GOPATH)/bin\ngo install github.com/swaggo/swag/cmd/swag@latest\nswag init -g cmd/marketplace/main.go -o docs\n`\n        err = os.WriteFile(scriptPath, []byte(scriptContent), 0755)\n        if err != nil {\n            log.Fatalf(\"Failed to create temporary script: %v\", err)\n        }\n        defer os.Remove(scriptPath)\n\n        // \u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\n        cmd = exec.Command(\"/bin/bash\", scriptPath)\n    }\n\n    cmd.Stdout = os.Stdout\n    cmd.Stderr = os.Stderr\n\n    // PATH\u74b0\u5883\u5909\u6570\u3092\u9069\u5207\u306b\u8a2d\u5b9a\n    goPath := filepath.Join(os.Getenv(\"HOME\"), \"go\", \"bin\")\n    if isWindows {\n        cmd.Env = append(os.Environ(), fmt.Sprintf(\"PATH=%s;%s\", os.Getenv(\"PATH\"), goPath))\n    } else {\n        cmd.Env = append(os.Environ(), fmt.Sprintf(\"PATH=%s:%s\", os.Getenv(\"PATH\"), goPath))\n    }\n\n    log.Println(\"Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u4e2d...\")\n    err = cmd.Run()\n    if err != nil {\n        log.Fatalf(\"Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u751f\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f: %v\", err)\n    }\n\n    log.Println(\"Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u6b63\u5e38\u306b\u751f\u6210\u3055\u308c\u307e\u3057\u305f\uff01\")\n}\n</code></pre> <p>Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\uff1a</p> <pre><code>cd app/backend\ngo run cmd/gen/generate_swagger.go\n</code></pre>"},{"location":"go_application_setup/#28","title":"2.8 \u30c6\u30b9\u30c8\u74b0\u5883\u306e\u69cb\u7bc9","text":""},{"location":"go_application_setup/#281","title":"2.8.1 \u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u5b9f\u88c5","text":"<p>\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff1a</p> <pre><code>// internal/domain/entities/product_test.go\npackage entities\n\nimport (\n    \"testing\"\n    \"time\"\n)\n\nfunc TestProduct(t *testing.T) {\n    product := Product{\n        Id:          \"test-id\",\n        Name:        \"Test Product\",\n        Description: \"This is a test product\",\n        Price:       100.0,\n        SellerId:    \"seller-id\",\n        CreatedAt:   time.Now(),\n        UpdatedAt:   time.Now(),\n    }\n\n    if product.Id != \"test-id\" {\n        t.Errorf(\"Expected Id to be 'test-id', got '%s'\", product.Id)\n    }\n\n    if product.Name != \"Test Product\" {\n        t.Errorf(\"Expected Name to be 'Test Product', got '%s'\", product.Name)\n    }\n\n    if product.Price != 100.0 {\n        t.Errorf(\"Expected Price to be 100.0, got '%f'\", product.Price)\n    }\n}\n</code></pre>"},{"location":"go_application_setup/#282","title":"2.8.2 \u7d71\u5408\u30c6\u30b9\u30c8\u306e\u5b9f\u88c5","text":"<p>Testcontainers\u3092\u4f7f\u7528\u3057\u3066\u30b5\u30fc\u30d3\u30b9\u306e\u7d71\u5408\u30c6\u30b9\u30c8\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff1a</p> <pre><code>// internal/application/services/product_service_integration_test.go\npackage services\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"testing\"\n\n    \"github.com/google/uuid\"\n    \"github.com/sklinkert/go-ddd/internal/application/command\"\n    \"github.com/sklinkert/go-ddd/internal/application/common\"\n    \"github.com/sklinkert/go-ddd/internal/application/interfaces\"\n    \"github.com/sklinkert/go-ddd/internal/infrastructure/db/postgres\"\n    \"github.com/stretchr/testify/assert\"\n    \"github.com/testcontainers/testcontainers-go\"\n    \"github.com/testcontainers/testcontainers-go/wait\"\n    pgdriver \"gorm.io/driver/postgres\"\n    \"gorm.io/gorm\"\n    \"time\"\n)\n\nfunc setupTestDatabase(t *testing.T) (*gorm.DB, func()) {\n    ctx := context.Background()\n\n    // Define PostgreSQL container\n    pgReq := testcontainers.ContainerRequest{\n        Image:        \"postgres:15-alpine\",\n        ExposedPorts: []string{\"5432/tcp\"},\n        Env: map[string]string{\n            \"POSTGRES_USER\":     \"postgres\",\n            \"POSTGRES_PASSWORD\": \"postgres\",\n            \"POSTGRES_DB\":       \"testdb\",\n        },\n        WaitingFor: wait.ForLog(\"database system is ready to accept connections\").\n            WithOccurrence(2).WithStartupTimeout(5 * time.Second),\n    }\n\n    // Start PostgreSQL container\n    pgContainer, err := testcontainers.GenericContainer(ctx, testcontainers.GenericContainerRequest{\n        ContainerRequest: pgReq,\n        Started:          true,\n    })\n    if err != nil {\n        t.Fatalf(\"Failed to start PostgreSQL container: %s\", err)\n    }\n\n    // Get container host and port\n    host, err := pgContainer.Host(ctx)\n    if err != nil {\n        t.Fatalf(\"Failed to get PostgreSQL container host: %s\", err)\n    }\n\n    port, err := pgContainer.MappedPort(ctx, \"5432\")\n    if err != nil {\n        t.Fatalf(\"Failed to get PostgreSQL container port: %s\", err)\n    }\n\n    // Create connection string\n    dsn := fmt.Sprintf(\"host=%s port=%s user=postgres password=postgres dbname=testdb sslmode=disable\", host, port.Port())\n\n    // Connect to the PostgreSQL database\n    database, err := gorm.Open(pgdriver.Open(dsn), &amp;gorm.Config{})\n    if err != nil {\n        t.Fatalf(\"Failed to connect to database: %s\", err)\n    }\n\n    // AutoMigrate our models\n    err = database.AutoMigrate(&amp;postgres.Product{}, &amp;postgres.Seller{})\n    if err != nil {\n        t.Fatalf(\"Failed to migrate database: %s\", err)\n    }\n\n    // Cleanup function\n    cleanup := func() {\n        // Clean up database\n        database.Exec(\"DELETE FROM products\")\n        database.Exec(\"DELETE FROM sellers\")\n\n        // Stop and remove PostgreSQL container\n        if err := pgContainer.Terminate(ctx); err != nil {\n            t.Fatalf(\"Failed to terminate container: %s\", err)\n        }\n    }\n\n    return database, cleanup\n}\n\nfunc createTestSeller(t *testing.T, sellerService interfaces.SellerService) *common.SellerResult {\n    sellerName := \"Test Seller \" + uuid.New().String()\n    result, err := sellerService.CreateSeller(&amp;command.CreateSellerCommand{\n        Name: sellerName,\n    })\n    assert.NoError(t, err)\n    assert.NotNil(t, result)\n    assert.NotNil(t, result.Result)\n    assert.Equal(t, sellerName, result.Result.Name)\n    return result.Result\n}\n\nfunc TestProductService_Integration_CreateProduct(t *testing.T) {\n    // Setup test database with Testcontainers\n    db, cleanup := setupTestDatabase(t)\n    defer cleanup()\n\n    // Create repositories\n    productRepo := postgres.NewGormProductRepository(db)\n    sellerRepo := postgres.NewGormSellerRepository(db)\n\n    // Create services\n    productService := NewProductService(productRepo, sellerRepo)\n    sellerService := NewSellerService(sellerRepo)\n\n    // Create a seller first\n    seller := createTestSeller(t, sellerService)\n\n    // Test creating a product\n    productName := \"Test Product\"\n    productPrice := 99.99\n    createProductCmd := &amp;command.CreateProductCommand{\n        Name:     productName,\n        Price:    productPrice,\n        SellerId: seller.Id,\n    }\n\n    result, err := productService.CreateProduct(createProductCmd)\n    assert.NoError(t, err)\n    assert.NotNil(t, result)\n    assert.NotNil(t, result.Result)\n    assert.Equal(t, productName, result.Result.Name)\n    assert.Equal(t, productPrice, result.Result.Price)\n    assert.Equal(t, seller.Id, result.Result.Seller.Id)\n}\n</code></pre>"},{"location":"go_application_setup/#283","title":"2.8.3 \u53d7\u3051\u5165\u308c\u30c6\u30b9\u30c8\u306e\u5b9f\u88c5","text":"<p>Cucumber\u3092\u4f7f\u7528\u3057\u305f\u53d7\u3051\u5165\u308c\u30c6\u30b9\u30c8\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u65e5\u672c\u8a9e\u3067\u30d5\u30a3\u30fc\u30c1\u30e3\u3092\u8a18\u8ff0\u3059\u308b\u306b\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u5148\u982d\u306b <code># language: ja</code> \u3092\u8ffd\u52a0\u3057\u307e\u3059\uff1a</p> <pre><code># features/product/product_controller.feature\n# language: ja\n\u30d5\u30a3\u30fc\u30c1\u30e3: \u5546\u54c1\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fcAPI\n  API\u3092\u901a\u3058\u3066\u5546\u54c1\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\n  \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u3057\u3066\n  HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4ecb\u3057\u3066\u5546\u54c1\u306e\u4f5c\u6210\u3001\u8aad\u307f\u53d6\u308a\u3001\u66f4\u65b0\u3001\u524a\u9664\u304c\u3067\u304d\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\n  \u30b7\u30ca\u30ea\u30aa: API\u3092\u4ecb\u3057\u3066\u65b0\u3057\u3044\u5546\u54c1\u3092\u4f5c\u6210\u3059\u308b\n    \u524d\u63d0 API\u306e\u305f\u3081\u306e\u5546\u54c1\u8a73\u7d30\u3092\u6301\u3063\u3066\u3044\u307e\u3059\n      | \u540d\u524d        | \u4fa1\u683c  | \u51fa\u54c1\u8005ID                             |\n      | \u30c6\u30b9\u30c8\u5546\u54c1  | 10.99 | 00000000-0000-0000-0000-000000000001 |\n    \u3082\u3057 \u5546\u54c1\u8a73\u7d30\u3092\u542b\u3081\u3066\"/api/v1/products\"\u306bPOST\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u307e\u3059\n    \u306a\u3089\u3070 \u30ec\u30b9\u30dd\u30f3\u30b9\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306f201\u3067\u3042\u308b\u3079\u304d\u3067\u3059\n    \u304b\u3064 \u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u4f5c\u6210\u3055\u308c\u305f\u5546\u54c1\u8a73\u7d30\u3092\u542b\u3080\u3079\u304d\u3067\u3059\n\n  \u30b7\u30ca\u30ea\u30aa: API\u3092\u4ecb\u3057\u3066\u3059\u3079\u3066\u306e\u5546\u54c1\u3092\u53d6\u5f97\u3059\u308b\n    \u524d\u63d0 \u30b7\u30b9\u30c6\u30e0\u306b\u5546\u54c1\u304c\u3042\u308a\u307e\u3059\n    \u3082\u3057 \"/api/v1/products\"\u306bGET\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u307e\u3059\n    \u306a\u3089\u3070 \u30ec\u30b9\u30dd\u30f3\u30b9\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306f200\u3067\u3042\u308b\u3079\u304d\u3067\u3059\n    \u304b\u3064 \u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u5546\u54c1\u306e\u30ea\u30b9\u30c8\u3092\u542b\u3080\u3079\u304d\u3067\u3059\n\n  \u30b7\u30ca\u30ea\u30aa: API\u3092\u4ecb\u3057\u3066ID\u3067\u5546\u54c1\u3092\u53d6\u5f97\u3059\u308b\n    \u524d\u63d0 \u30b7\u30b9\u30c6\u30e0\u306bID \"00000000-0000-0000-0000-000000000001\"\u306e\u5546\u54c1\u304c\u3042\u308a\u307e\u3059\n    \u3082\u3057 \"/api/v1/products/00000000-0000-0000-0000-000000000001\"\u306bGET\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u307e\u3059\n    \u306a\u3089\u3070 \u30ec\u30b9\u30dd\u30f3\u30b9\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306f200\u3067\u3042\u308b\u3079\u304d\u3067\u3059\n    \u304b\u3064 \u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u5546\u54c1\u8a73\u7d30\u3092\u542b\u3080\u3079\u304d\u3067\u3059\n</code></pre> <p>\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u4f7f\u7528\u3057\u305f\u30b9\u30c6\u30c3\u30d7\u5b9f\u88c5\u306e\u4f8b\uff1a</p> <pre><code>// features/steps/controller_steps.go\npackage steps\n\nimport (\n    \"bytes\"\n    \"encoding/json\"\n    \"fmt\"\n    \"github.com/cucumber/godog\"\n    \"github.com/labstack/echo/v4\"\n    \"net/http\"\n    \"net/http/httptest\"\n    \"strconv\"\n)\n\n// ControllerContext \u306f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u95a2\u9023\u306e\u30b9\u30c6\u30c3\u30d7\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3057\u307e\u3059\ntype ControllerContext struct {\n    echoInstance *echo.Echo\n    requestBody  map[string]interface{}\n    response     *httptest.ResponseRecorder\n}\n\n// RegisterSteps \u306fgodog\u30b9\u30a4\u30fc\u30c8\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u30b9\u30c6\u30c3\u30d7\u3092\u767b\u9332\u3057\u307e\u3059\nfunc (c *ControllerContext) RegisterSteps(ctx *godog.ScenarioContext) {\n    // \u65e5\u672c\u8a9e\u30b9\u30c6\u30c3\u30d7\u5b9a\u7fa9\n    ctx.Step(`^API\u306e\u305f\u3081\u306e\u5546\u54c1\u8a73\u7d30\u3092\u6301\u3063\u3066\u3044\u307e\u3059$`, c.iHaveProductDetailsForAPI)\n    ctx.Step(`^\u5546\u54c1\u8a73\u7d30\u3092\u542b\u3081\u3066\"([^\"]*)\"\u306bPOST\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u307e\u3059$`, c.iSendAPOSTRequestToWithTheProductDetails)\n    ctx.Step(`^\u30ec\u30b9\u30dd\u30f3\u30b9\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306f(\\d+)\u3067\u3042\u308b\u3079\u304d\u3067\u3059$`, c.theResponseStatusCodeShouldBe)\n    ctx.Step(`^\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u4f5c\u6210\u3055\u308c\u305f\u5546\u54c1\u8a73\u7d30\u3092\u542b\u3080\u3079\u304d\u3067\u3059$`, c.theResponseShouldContainTheCreatedProductDetails)\n    ctx.Step(`^\u30b7\u30b9\u30c6\u30e0\u306b\u5546\u54c1\u304c\u3042\u308a\u307e\u3059$`, c.thereAreProductsInTheSystem)\n    ctx.Step(`^\"([^\"]*)\"\u306bGET\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u307e\u3059$`, c.iSendAGETRequestTo)\n    ctx.Step(`^\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u5546\u54c1\u306e\u30ea\u30b9\u30c8\u3092\u542b\u3080\u3079\u304d\u3067\u3059$`, c.theResponseShouldContainAListOfProducts)\n    ctx.Step(`^\u30b7\u30b9\u30c6\u30e0\u306bID \"([^\"]*)\"\u306e\u5546\u54c1\u304c\u3042\u308a\u307e\u3059$`, c.thereIsAProductWithIDInTheSystem)\n    ctx.Step(`^\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u5546\u54c1\u8a73\u7d30\u3092\u542b\u3080\u3079\u304d\u3067\u3059$`, c.theResponseShouldContainTheProductDetails)\n}\n\nfunc (c *ControllerContext) iHaveProductDetailsForAPI(table *godog.Table) error {\n    c.requestBody = make(map[string]interface{})\n\n    // \u30c6\u30fc\u30d6\u30eb\u304b\u3089\u5546\u54c1\u8a73\u7d30\u3092\u53d6\u5f97\n    for i := 1; i &lt; len(table.Rows); i++ {\n        row := table.Rows[i]\n        for j, cell := range row.Cells {\n            header := table.Rows[0].Cells[j].Value\n            // \u65e5\u672c\u8a9e\u306e\u30d8\u30c3\u30c0\u30fc\u3092\u82f1\u8a9e\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u306b\u30de\u30c3\u30d4\u30f3\u30b0\n            switch header {\n            case \"\u540d\u524d\":\n                c.requestBody[\"Name\"] = cell.Value\n            case \"\u4fa1\u683c\":\n                price, _ := strconv.ParseFloat(cell.Value, 64)\n                c.requestBody[\"Price\"] = price\n            case \"\u51fa\u54c1\u8005ID\":\n                c.requestBody[\"SellerId\"] = cell.Value\n            }\n        }\n    }\n    return nil\n}\n\nfunc (c *ControllerContext) iSendAPOSTRequestToWithTheProductDetails(path string) error {\n    // \u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u3092JSON\u306b\u5909\u63db\n    jsonBody, _ := json.Marshal(c.requestBody)\n\n    // HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3066\u9001\u4fe1\n    req := httptest.NewRequest(http.MethodPost, path, bytes.NewReader(jsonBody))\n    req.Header.Set(echo.HeaderContentType, echo.MIMEApplicationJSON)\n    c.response = httptest.NewRecorder()\n    c.echoInstance.ServeHTTP(c.response, req)\n\n    return nil\n}\n\n// \u305d\u306e\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3082\u540c\u69d8\u306b\u5b9f\u88c5\n</code></pre> <p>\u3053\u306e\u3088\u3046\u306b\u3001\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u4f7f\u7528\u3057\u305f\u53d7\u3051\u5165\u308c\u30c6\u30b9\u30c8\u3067\u306f\u3001\u5b9f\u969b\u306eHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u3001API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u52d5\u4f5c\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\u3002\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u76f4\u63a5\u30c6\u30b9\u30c8\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u901a\u3058\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u306e\u52d5\u4f5c\u3092\u691c\u8a3c\u3057\u307e\u3059\u3002</p> <p>\u53d7\u3051\u5165\u308c\u30c6\u30b9\u30c8\u3067\u306f\u3001\u30e2\u30c3\u30af\u306e\u4ee3\u308f\u308a\u306bTestContainers\u3092\u4f7f\u7528\u3057\u3066\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u7528\u3057\u305f\u30c6\u30b9\u30c8\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u3088\u308a\u5b9f\u969b\u306e\u74b0\u5883\u306b\u8fd1\u3044\u30c6\u30b9\u30c8\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>// features/steps/controller_steps.go\nfunc (c *ControllerContext) setupTestDatabase() error {\n    // PostgreSQL\u30b3\u30f3\u30c6\u30ca\u3092\u5b9a\u7fa9\n    pgReq := testcontainers.ContainerRequest{\n        Image:        \"postgres:13\",\n        ExposedPorts: []string{\"5432/tcp\"},\n        Env: map[string]string{\n            \"POSTGRES_USER\":     \"testuser\",\n            \"POSTGRES_PASSWORD\": \"testpass\",\n            \"POSTGRES_DB\":       \"testdb\",\n        },\n        WaitingFor: wait.ForLog(\"database system is ready to accept connections\").\n            WithOccurrence(2).WithStartupTimeout(5 * time.Second),\n    }\n\n    // PostgreSQL\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\n    container, err := testcontainers.GenericContainer(c.ctx, testcontainers.GenericContainerRequest{\n        ContainerRequest: pgReq,\n        Started:          true,\n    })\n    if err != nil {\n        return fmt.Errorf(\"failed to start PostgreSQL container: %w\", err)\n    }\n    c.container = container\n\n    // \u30b3\u30f3\u30c6\u30ca\u306e\u30db\u30b9\u30c8\u3068\u30dd\u30fc\u30c8\u3092\u53d6\u5f97\n    host, err := container.Host(c.ctx)\n    if err != nil {\n        return fmt.Errorf(\"failed to get PostgreSQL container host: %w\", err)\n    }\n\n    port, err := container.MappedPort(c.ctx, \"5432\")\n    if err != nil {\n        return fmt.Errorf(\"failed to get PostgreSQL container port: %w\", err)\n    }\n\n    // \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u6587\u5b57\u5217\u3092\u4f5c\u6210\n    dsn := fmt.Sprintf(\"host=%s port=%s user=testuser password=testpass dbname=testdb sslmode=disable\", host, port.Port())\n\n    // PostgreSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\n    db, err := gorm.Open(pgdriver.Open(dsn), &amp;gorm.Config{})\n    if err != nil {\n        return fmt.Errorf(\"failed to connect to database: %w\", err)\n    }\n    c.db = db\n\n    // \u30e2\u30c7\u30eb\u3092\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\n    err = db.AutoMigrate(&amp;postgres.Product{}, &amp;postgres.Seller{})\n    if err != nil {\n        return fmt.Errorf(\"failed to migrate database: %w\", err)\n    }\n\n    return nil\n}\n\nfunc (c *ControllerContext) setupController() error {\n    // TestContainers\u3092\u4f7f\u7528\u3057\u3066\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n    if err := c.setupTestDatabase(); err != nil {\n        return err\n    }\n\n    // \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210\n    productRepo := postgres.NewGormProductRepository(c.db)\n    sellerRepo := postgres.NewGormSellerRepository(c.db)\n\n    // \u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\n    c.productService = services.NewProductService(productRepo, sellerRepo)\n    c.sellerService = services.NewSellerService(sellerRepo)\n\n    // Echo\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n    c.echoInstance = echo.New()\n\n    // \u5546\u54c1\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u4f5c\u6210\n    c.productController = rest.NewProductController(c.echoInstance, c.productService)\n\n    // \u30ec\u30b9\u30dd\u30f3\u30b9\u30ec\u30b3\u30fc\u30c0\u30fc\u3092\u521d\u671f\u5316\n    c.response = httptest.NewRecorder()\n\n    return nil\n}\n\n// \u30c6\u30b9\u30c8\u5f8c\u306e\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\nfunc (c *ControllerContext) RegisterSteps(ctx *godog.ScenarioContext) {\n    // ... \u4ed6\u306e\u30b9\u30c6\u30c3\u30d7\u5b9a\u7fa9 ...\n\n    ctx.BeforeScenario(func(*godog.Scenario) {\n        if err := c.setupController(); err != nil {\n            panic(fmt.Sprintf(\"Failed to setup controller: %v\", err))\n        }\n    })\n\n    ctx.AfterScenario(func(*godog.Scenario, error) {\n        // \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\n        if c.db != nil {\n            c.db.Exec(\"DELETE FROM products\")\n            c.db.Exec(\"DELETE FROM sellers\")\n        }\n\n        // PostgreSQL\u30b3\u30f3\u30c6\u30ca\u3092\u505c\u6b62\u3057\u3066\u524a\u9664\n        if c.container != nil {\n            if err := c.container.Terminate(c.ctx); err != nil {\n                fmt.Printf(\"Failed to terminate container: %v\\n\", err)\n            }\n        }\n    })\n}\n</code></pre> <p>\u3053\u306e\u3088\u3046\u306b\u3001TestContainers\u3092\u4f7f\u7528\u3057\u305fBDD\u30c6\u30b9\u30c8\u3067\u306f\u3001\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u7528\u3057\u3066\u30c6\u30b9\u30c8\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30e2\u30c3\u30af\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3088\u308a\u3082\u5b9f\u969b\u306e\u74b0\u5883\u306b\u8fd1\u3044\u30c6\u30b9\u30c8\u304c\u53ef\u80fd\u306b\u306a\u308a\u3001\u3088\u308a\u4fe1\u983c\u6027\u306e\u9ad8\u3044\u30c6\u30b9\u30c8\u7d50\u679c\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"go_application_setup/#29","title":"2.9 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c","text":"<p>\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u307e\u3059\uff1a</p> <pre><code># \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u8d77\u52d5\ndocker-compose up -d postgres\n\n# Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\ncd app/backend\ngo run cmd/gen/generate_swagger.go\n\n# \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\ngo run cmd/marketplace/main.go\n</code></pre> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u8d77\u52d5\u3057\u305f\u3089\u3001\u4ee5\u4e0b\u306eURL\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066Swagger UI\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff1a</p> <pre><code>http://localhost:9090/swagger/index.html\n</code></pre>"},{"location":"go_application_setup/#3","title":"3. \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u306e\u8a73\u7d30","text":"<p>\u5b8c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff1a</p> <pre><code>app/backend/\n\u251c\u2500\u2500 cmd/\n\u2502   \u251c\u2500\u2500 marketplace/\n\u2502   \u2502   \u2514\u2500\u2500 main.go\n\u2502   \u2514\u2500\u2500 gen/\n\u2502       \u2514\u2500\u2500 generate_swagger.go\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 swagger.json\n\u2502   \u251c\u2500\u2500 swagger.yaml\n\u2502   \u2514\u2500\u2500 docs.go\n\u251c\u2500\u2500 features/\n\u2502   \u251c\u2500\u2500 product.feature\n\u2502   \u2514\u2500\u2500 steps/\n\u2502       \u2514\u2500\u2500 product_steps.go\n\u251c\u2500\u2500 internal/\n\u2502   \u251c\u2500\u2500 domain/\n\u2502   \u2502   \u251c\u2500\u2500 entities/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 product.go\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 seller.go\n\u2502   \u2502   \u2514\u2500\u2500 repositories/\n\u2502   \u2502       \u251c\u2500\u2500 product_repository.go\n\u2502   \u2502       \u2514\u2500\u2500 seller_repository.go\n\u2502   \u251c\u2500\u2500 application/\n\u2502   \u2502   \u2514\u2500\u2500 services/\n\u2502   \u2502       \u251c\u2500\u2500 product_service.go\n\u2502   \u2502       \u2514\u2500\u2500 seller_service.go\n\u2502   \u251c\u2500\u2500 infrastructure/\n\u2502   \u2502   \u2514\u2500\u2500 db/\n\u2502   \u2502       \u2514\u2500\u2500 postgres/\n\u2502   \u2502           \u251c\u2500\u2500 product_repository.go\n\u2502   \u2502           \u2514\u2500\u2500 seller_repository.go\n\u2502   \u2514\u2500\u2500 interface/\n\u2502       \u2514\u2500\u2500 api/\n\u2502           \u2514\u2500\u2500 rest/\n\u2502               \u251c\u2500\u2500 product_controller.go\n\u2502               \u2514\u2500\u2500 seller_controller.go\n\u251c\u2500\u2500 go.mod\n\u2514\u2500\u2500 go.sum\n</code></pre>"},{"location":"go_application_setup/#4","title":"4. \u307e\u3068\u3081","text":"<p>\u3053\u306e\u6587\u66f8\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u90e8\u5206\uff08app/backend\uff09\u306b\u304a\u3051\u308bGo\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\u3068\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u8a2d\u5b9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3057\u305f\u3002</p> <p>\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff1a</p> <ol> <li>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020\u306e\u4f5c\u6210</li> <li>Go Modules\u306e\u521d\u671f\u5316</li> <li>\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb</li> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u8a2d\u5b9a</li> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u9020\u306e\u5b9f\u88c5</li> <li>\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb</li> <li>\u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9</li> <li>\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5b9f\u88c5</li> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d3\u30b9</li> <li>\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc</li> <li>\u30e1\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3</li> <li>Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8a2d\u5b9a</li> <li>\u30c6\u30b9\u30c8\u74b0\u5883\u306e\u69cb\u7bc9</li> <li>\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8</li> <li>\u7d71\u5408\u30c6\u30b9\u30c8</li> <li>\u53d7\u3051\u5165\u308c\u30c6\u30b9\u30c8</li> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c</li> </ol> <p>\u3053\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\u306b\u5f93\u3046\u3053\u3068\u3067\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\uff08DDD\uff09\u306e\u539f\u5247\u306b\u57fa\u3065\u3044\u305fGo\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"go_cucumber_setup/","title":"Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 Go Cucumber (Godog) \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30ac\u30a4\u30c9","text":"<p>\u3053\u306e\u30ac\u30a4\u30c9\u3067\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306e\u632f\u308b\u821e\u3044\u99c6\u52d5\u958b\u767a\uff08BDD\uff09\u30c6\u30b9\u30c8\u7528\u306eGo Cucumber\uff08Godog\uff09\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u4f7f\u7528\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002</p>"},{"location":"go_cucumber_setup/#bdd","title":"\u632f\u308b\u821e\u3044\u99c6\u52d5\u958b\u767a\uff08BDD\uff09\u3068\u306f\uff1f","text":"<p>\u632f\u308b\u821e\u3044\u99c6\u52d5\u958b\u767a\u306f\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u304a\u3044\u3066\u958b\u767a\u8005\u3001QA\u3001\u304a\u3088\u3073\u975e\u6280\u8853\u7684\u307e\u305f\u306f\u30d3\u30b8\u30cd\u30b9\u53c2\u52a0\u8005\u9593\u306e\u30b3\u30e9\u30dc\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u4fc3\u9032\u3059\u308b\u30a2\u30b8\u30e3\u30a4\u30eb\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u30d7\u30ed\u30bb\u30b9\u3067\u3059\u3002\u30b9\u30c6\u30fc\u30af\u30db\u30eb\u30c0\u30fc\u3068\u306e\u8b70\u8ad6\u3092\u901a\u3058\u3066\u3001\u671b\u307e\u3057\u3044\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u632f\u308b\u821e\u3044\u306b\u3064\u3044\u3066\u660e\u78ba\u306a\u7406\u89e3\u3092\u5f97\u308b\u3053\u3068\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002</p> <p>BDD\u306f\u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\uff08TDD\uff09\u306e\u62e1\u5f35\u3067\u3042\u308a\u3001\u5b9f\u88c5\u306e\u8a73\u7d30\u3088\u308a\u3082\u30b7\u30b9\u30c6\u30e0\u306e\u632f\u308b\u821e\u3044\u306e\u5074\u9762\u3092\u5f37\u8abf\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"go_cucumber_setup/#cucumbergodog","title":"Cucumber/Godog\u3068\u306f\uff1f","text":"<p>Cucumber\u306f\u3001Gherkin\u3068\u547c\u3070\u308c\u308b\u81ea\u7136\u8a00\u8a9e\u5f62\u5f0f\u3067\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067BDD\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30c4\u30fc\u30eb\u3067\u3059\u3002Godog\u306fCucumber\u306eGo\u8a00\u8a9e\u5b9f\u88c5\u3067\u3059\u3002</p> <p>Gherkin\u306f\u3001\u4eba\u9593\u304c\u8aad\u307f\u3084\u3059\u3044\u5f62\u5f0f\u3067\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u30ad\u30fc\u30ef\u30fc\u30c9\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3059\uff1a - Feature\uff1a\u9ad8\u30ec\u30d9\u30eb\u306e\u30d3\u30b8\u30cd\u30b9\u8981\u4ef6\u3092\u8aac\u660e\u3057\u307e\u3059 - Scenario\uff1a\u7279\u5b9a\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u8aac\u660e\u3057\u307e\u3059 - Given\uff1a\u521d\u671f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u8a2d\u5b9a\u3057\u307e\u3059 - When\uff1a\u30a4\u30d9\u30f3\u30c8\u307e\u305f\u306f\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8aac\u660e\u3057\u307e\u3059 - Then\uff1a\u671f\u5f85\u3055\u308c\u308b\u7d50\u679c\u3092\u8aac\u660e\u3057\u307e\u3059 - And\uff1a\u8ffd\u52a0\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3001\u30a4\u30d9\u30f3\u30c8\u3001\u307e\u305f\u306f\u671f\u5f85\u3092\u8ffd\u52a0\u3057\u307e\u3059</p>"},{"location":"go_cucumber_setup/#godog","title":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306eGodog\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7","text":""},{"location":"go_cucumber_setup/#1-godog","title":"1. Godog\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>Godog\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u3042\u306a\u305f\u306ego\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u8ffd\u52a0\u3057\u307e\u3059\uff1a</p> <pre><code>cd app/backend\ngo get github.com/cucumber/godog\n</code></pre>"},{"location":"go_cucumber_setup/#2-features","title":"2. Features\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210","text":"<p>\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u30d5\u30a1\u30a4\u30eb\u3068\u30b9\u30c6\u30c3\u30d7\u5b9a\u7fa9\u306e\u305f\u3081\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u3092\u4f5c\u6210\u3057\u307e\u3059\uff1a</p> <pre><code>mkdir -p features/steps\n</code></pre>"},{"location":"go_cucumber_setup/#3","title":"3. \u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210","text":"<p>\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u30d5\u30a1\u30a4\u30eb\u306fGherkin\u69cb\u6587\u3067\u66f8\u304b\u308c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u632f\u308b\u821e\u3044\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002<code>features</code>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001<code>features/product/product_management.feature</code>\uff1a</p> <p>\u6ce8\u610f: \u65e5\u672c\u8a9e\u3067\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304f\u5834\u5408\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u5148\u982d\u306b <code># language: ja</code> \u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306b\u3088\u308a\u3001Gherkin\u30ad\u30fc\u30ef\u30fc\u30c9\uff08\u300c\u30d5\u30a3\u30fc\u30c1\u30e3\u300d\u3001\u300c\u30b7\u30ca\u30ea\u30aa\u300d\u3001\u300c\u524d\u63d0\u300d\u3001\u300c\u3082\u3057\u300d\u3001\u300c\u306a\u3089\u3070\u300d\u3001\u300c\u304b\u3064\u300d\uff09\u3092\u65e5\u672c\u8a9e\u3067\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001Japanese Cucumber Support \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code># language: ja\n\u30d5\u30a3\u30fc\u30c1\u30e3: \u5546\u54c1\u7ba1\u7406\n  \u30b7\u30b9\u30c6\u30e0\u5185\u306e\u5546\u54c1\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\n  \u30e6\u30fc\u30b6\u30fc\u3068\u3057\u3066\n  \u5546\u54c1\u306e\u4f5c\u6210\u3001\u8aad\u307f\u53d6\u308a\u3001\u66f4\u65b0\u3001\u524a\u9664\u304c\u3067\u304d\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\n  \u30b7\u30ca\u30ea\u30aa: \u65b0\u3057\u3044\u5546\u54c1\u3092\u4f5c\u6210\u3059\u308b\n    \u524d\u63d0 \u5546\u54c1\u306e\u8a73\u7d30\u3092\u6301\u3063\u3066\u3044\u307e\u3059\n      | name        | price |\n      | \u30c6\u30b9\u30c8\u5546\u54c1  | 10.99 |\n    \u304b\u3064 \u51fa\u54c1\u8005\u3092\u6301\u3063\u3066\u3044\u307e\u3059\n    \u3082\u3057 \u65b0\u3057\u3044\u5546\u54c1\u3092\u4f5c\u6210\u3057\u307e\u3059\n    \u306a\u3089\u3070 \u5546\u54c1\u304c\u30b7\u30b9\u30c6\u30e0\u306b\u4fdd\u5b58\u3055\u308c\u308b\u3079\u304d\u3067\u3059\n    \u304b\u3064 ID\u3067\u5546\u54c1\u3092\u53d6\u5f97\u3067\u304d\u308b\u3079\u304d\u3067\u3059\n\n  \u30b7\u30ca\u30ea\u30aa: \u65e2\u5b58\u306e\u5546\u54c1\u3092\u66f4\u65b0\u3059\u308b\n    \u524d\u63d0 \u65e2\u5b58\u306e\u5546\u54c1\u3092\u6301\u3063\u3066\u3044\u307e\u3059\n    \u3082\u3057 \u5546\u54c1\u306e\u8a73\u7d30\u3092\u66f4\u65b0\u3057\u307e\u3059\n      | name           | price |\n      | \u66f4\u65b0\u3055\u308c\u305f\u5546\u54c1 | 15.99 |\n    \u306a\u3089\u3070 \u5546\u54c1\u306e\u8a73\u7d30\u304c\u30b7\u30b9\u30c6\u30e0\u3067\u66f4\u65b0\u3055\u308c\u308b\u3079\u304d\u3067\u3059\n\n  \u30b7\u30ca\u30ea\u30aa: \u5546\u54c1\u3092\u524a\u9664\u3059\u308b\n    \u524d\u63d0 \u65e2\u5b58\u306e\u5546\u54c1\u3092\u6301\u3063\u3066\u3044\u307e\u3059\n    \u3082\u3057 \u5546\u54c1\u3092\u524a\u9664\u3057\u307e\u3059\n    \u306a\u3089\u3070 \u5546\u54c1\u304c\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u524a\u9664\u3055\u308c\u308b\u3079\u304d\u3067\u3059\n</code></pre>"},{"location":"go_cucumber_setup/#4","title":"4. \u30b9\u30c6\u30c3\u30d7\u5b9a\u7fa9\u306e\u5b9f\u88c5","text":"<p>\u30b9\u30c6\u30c3\u30d7\u5b9a\u7fa9\u306f\u3001\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u30d5\u30a1\u30a4\u30eb\u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u30b9\u30c6\u30c3\u30d7\u3092\u5b9f\u88c5\u3059\u308bGo\u95a2\u6570\u3067\u3059\u3002<code>features/steps</code>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001<code>features/steps/product_steps.go</code>\uff1a</p> <pre><code>package steps\n\nimport (\n    \"fmt\"\n    \"github.com/cucumber/godog\"\n    \"github.com/google/uuid\"\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n    \"strconv\"\n)\n\n// ProductContext \u306f\u5546\u54c1\u95a2\u9023\u306e\u30b9\u30c6\u30c3\u30d7\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3057\u307e\u3059\ntype ProductContext struct {\n    productDetails map[string]string\n    product        *entities.Product\n    seller         *entities.Seller\n    validatedSeller *entities.ValidatedSeller\n    err            error\n}\n\n// NewProductContext \u306f\u65b0\u3057\u3044ProductContext\u3092\u4f5c\u6210\u3057\u307e\u3059\nfunc NewProductContext() *ProductContext {\n    return &amp;ProductContext{}\n}\n\n// RegisterSteps \u306f\u5546\u54c1\u30b9\u30c6\u30c3\u30d7\u3092godog\u30b9\u30a4\u30fc\u30c8\u306b\u767b\u9332\u3057\u307e\u3059\nfunc (p *ProductContext) RegisterSteps(ctx *godog.ScenarioContext) {\n    ctx.Step(`^\u5546\u54c1\u306e\u8a73\u7d30\u3092\u6301\u3063\u3066\u3044\u307e\u3059$`, p.iHaveProductDetails)\n    ctx.Step(`^\u51fa\u54c1\u8005\u3092\u6301\u3063\u3066\u3044\u307e\u3059$`, p.iHaveASeller)\n    ctx.Step(`^\u65b0\u3057\u3044\u5546\u54c1\u3092\u4f5c\u6210\u3057\u307e\u3059$`, p.iCreateANewProduct)\n    ctx.Step(`^\u5546\u54c1\u304c\u30b7\u30b9\u30c6\u30e0\u306b\u4fdd\u5b58\u3055\u308c\u308b\u3079\u304d\u3067\u3059$`, p.theProductShouldBeSavedInTheSystem)\n    ctx.Step(`^ID\u3067\u5546\u54c1\u3092\u53d6\u5f97\u3067\u304d\u308b\u3079\u304d\u3067\u3059$`, p.iShouldBeAbleToRetrieveTheProductByID)\n    ctx.Step(`^\u65e2\u5b58\u306e\u5546\u54c1\u3092\u6301\u3063\u3066\u3044\u307e\u3059$`, p.iHaveAnExistingProduct)\n    ctx.Step(`^\u5546\u54c1\u306e\u8a73\u7d30\u3092\u66f4\u65b0\u3057\u307e\u3059$`, p.iUpdateTheProductDetails)\n    ctx.Step(`^\u5546\u54c1\u306e\u8a73\u7d30\u304c\u30b7\u30b9\u30c6\u30e0\u3067\u66f4\u65b0\u3055\u308c\u308b\u3079\u304d\u3067\u3059$`, p.theProductDetailsShouldBeUpdatedInTheSystem)\n    ctx.Step(`^\u5546\u54c1\u3092\u524a\u9664\u3057\u307e\u3059$`, p.iDeleteTheProduct)\n    ctx.Step(`^\u5546\u54c1\u304c\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u524a\u9664\u3055\u308c\u308b\u3079\u304d\u3067\u3059$`, p.theProductShouldBeRemovedFromTheSystem)\n}\n\n// \u30b9\u30c6\u30c3\u30d7\u5b9a\u7fa9\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u307e\u3059...\n// \uff08\u5b8c\u5168\u306a\u5b9f\u88c5\u306ffeatures/steps/product_steps.go\u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff09\n</code></pre>"},{"location":"go_cucumber_setup/#5","title":"5. \u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u306e\u4f5c\u6210","text":"<p>Godog\u30c6\u30b9\u30c8\u30b9\u30a4\u30fc\u30c8\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u5b9f\u884c\u3059\u308b\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002<code>features</code>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001<code>features/godogs_test.go</code>\uff1a</p> <pre><code>package features\n\nimport (\n    \"github.com/cucumber/godog\"\n    \"github.com/cucumber/godog/colors\"\n    \"github.com/sklinkert/go-ddd/features/steps\"\n    \"os\"\n    \"testing\"\n)\n\nfunc TestFeatures(t *testing.T) {\n    opts := godog.Options{\n        Output:      colors.Colored(os.Stdout),\n        Format:      \"pretty\",\n        Paths:       []string{\"features\"},\n        Randomize:   0,\n        StopOnFailure: false,\n    }\n\n    suite := godog.TestSuite{\n        Name:                 \"godogs\",\n        TestSuiteInitializer: InitializeTestSuite,\n        ScenarioInitializer:  InitializeScenario,\n        Options:              &amp;opts,\n    }\n\n    if suite.Run() != 0 {\n        t.Fatal(\"non-zero status returned, failed to run feature tests\")\n    }\n}\n\nfunc InitializeTestSuite(ctx *godog.TestSuiteContext) {\n    // \u30c6\u30b9\u30c8\u30b9\u30a4\u30fc\u30c8\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u3053\u3053\u3067\u521d\u671f\u5316\u3057\u307e\u3059\n}\n\nfunc InitializeScenario(ctx *godog.ScenarioContext) {\n    // \u5546\u54c1\u30b9\u30c6\u30c3\u30d7\u3092\u521d\u671f\u5316\u3057\u307e\u3059\n    productContext := steps.NewProductContext()\n    productContext.RegisterSteps(ctx)\n}\n</code></pre>"},{"location":"go_cucumber_setup/#_1","title":"\u30c6\u30b9\u30c8\u306e\u5b9f\u884c","text":"<p>Godog\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001\u6a19\u6e96\u306eGo\u30c6\u30b9\u30c8\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\uff1a</p> <pre><code>cd app/backend\ngo test ./features -v\n</code></pre>"},{"location":"go_cucumber_setup/#godogbdd","title":"Godog\u3067\u306eBDD\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":"<ol> <li> <p>\u632f\u308b\u821e\u3044\u306b\u7126\u70b9\u3092\u5f53\u3066\u308b\uff1a\u5b9f\u88c5\u306e\u8a73\u7d30\u3067\u306f\u306a\u304f\u3001\u30b7\u30b9\u30c6\u30e0\u306e\u632f\u308b\u821e\u3044\u3092\u8a18\u8ff0\u3059\u308b\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u307e\u3059\u3002</p> </li> <li> <p>\u30c9\u30e1\u30a4\u30f3\u8a00\u8a9e\u3092\u4f7f\u7528\u3059\u308b\uff1a\u975e\u6280\u8853\u7684\u306a\u30b9\u30c6\u30fc\u30af\u30db\u30eb\u30c0\u30fc\u306b\u3082\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u30c9\u30e1\u30a4\u30f3\u306e\u8a00\u8a9e\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u30b7\u30ca\u30ea\u30aa\u3092\u72ec\u7acb\u3055\u305b\u308b\uff1a\u5404\u30b7\u30ca\u30ea\u30aa\u306f\u72ec\u7acb\u3057\u3066\u304a\u308a\u3001\u524d\u306e\u30b7\u30ca\u30ea\u30aa\u306e\u72b6\u614b\u306b\u4f9d\u5b58\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u8907\u6570\u306e\u4f8b\u306b\u30c6\u30fc\u30d6\u30eb\u3092\u4f7f\u7528\u3059\u308b\uff1a\u540c\u3058\u30b7\u30ca\u30ea\u30aa\u306e\u8907\u6570\u306e\u4f8b\u3092\u30c6\u30b9\u30c8\u3059\u308b\u305f\u3081\u306bGherkin\u30c6\u30fc\u30d6\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u30c9\u30e1\u30a4\u30f3\u3054\u3068\u306b\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u3092\u6574\u7406\u3059\u308b\uff1a\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u30d5\u30a1\u30a4\u30eb\u3092\u30c9\u30e1\u30a4\u30f3\u307e\u305f\u306f\u6a5f\u80fd\u9818\u57df\u3054\u3068\u306b\u6574\u7406\u3057\u3066\u3001\u898b\u3064\u3051\u3084\u3059\u304f\u4fdd\u5b88\u3057\u3084\u3059\u304f\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u30b9\u30c6\u30c3\u30d7\u5b9a\u7fa9\u3092\u518d\u5229\u7528\u3059\u308b\uff1a\u91cd\u8907\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u3001\u8907\u6570\u306e\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u30d5\u30a1\u30a4\u30eb\u9593\u3067\u30b9\u30c6\u30c3\u30d7\u5b9a\u7fa9\u3092\u518d\u5229\u7528\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u72b6\u614b\u3092\u5171\u6709\u3059\u308b\u305f\u3081\u306b\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u4f7f\u7528\u3059\u308b\uff1a\u540c\u3058\u30b7\u30ca\u30ea\u30aa\u5185\u306e\u30b9\u30c6\u30c3\u30d7\u9593\u3067\u72b6\u614b\u3092\u5171\u6709\u3059\u308b\u305f\u3081\u306b\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> </li> </ol>"},{"location":"go_cucumber_setup/#_2","title":"\u7d50\u8ad6","text":"<p>Godog\u306fGo\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067BDD\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306e\u5f37\u529b\u306a\u65b9\u6cd5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3053\u306e\u30ac\u30a4\u30c9\u306b\u5f93\u3046\u3053\u3068\u3067\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067Godog\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3001\u3059\u3079\u3066\u306e\u30b9\u30c6\u30fc\u30af\u30db\u30eb\u30c0\u30fc\u304c\u7406\u89e3\u3067\u304d\u308b\u65b9\u6cd5\u3067\u30b7\u30b9\u30c6\u30e0\u306e\u632f\u308b\u821e\u3044\u3092\u6587\u66f8\u5316\u3059\u308bBDD\u30c6\u30b9\u30c8\u306e\u4f5c\u6210\u3092\u958b\u59cb\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"home/","title":"Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3","text":""},{"location":"home/#_1","title":"\u6a5f\u80fd\u4e00\u89a7","text":"<ul> <li>\u6a5f\u80fd\u4e00\u89a7</li> </ul>"},{"location":"home/#_2","title":"\u8a08\u753b","text":"<ul> <li> <p>\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc</p> </li> <li> <p>\u30ea\u30ea\u30fc\u30b9\u30d7\u30e9\u30f3</p> </li> <li> <p>\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3</p> </li> </ul>"},{"location":"home/#_3","title":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3","text":"<ul> <li>\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3</li> </ul>"},{"location":"home/#_4","title":"\u5b9f\u88c5\u8a73\u7d30","text":"<ul> <li> <p>\u5546\u54c1\u7ba1\u7406</p> </li> <li> <p>\u51fa\u54c1\u8005\u7ba1\u7406</p> </li> <li> <p>\u30b7\u30b9\u30c6\u30e0\u6a5f\u80fd</p> </li> <li> <p>\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9</p> </li> <li> <p>\u74b0\u5883\u5909\u6570\u7ba1\u7406\uff08godotenv\uff09</p> </li> <li> <p>Go Cucumber\uff08BDD\u30c6\u30b9\u30c8\uff09</p> </li> </ul>"},{"location":"home/#_5","title":"\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30ac\u30a4\u30c9","text":"<ul> <li>\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30ac\u30a4\u30c9</li> </ul>"},{"location":"home/#_6","title":"\u53c2\u7167","text":"<ul> <li>\u5c65\u6b74</li> </ul>"},{"location":"iteration_plan/","title":"Go-DDD \u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002</p>"},{"location":"iteration_plan/#1","title":"1. \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3\u6982\u8981","text":"<p>\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3\u306f\u3001\u30ea\u30ea\u30fc\u30b9\u30d7\u30e9\u30f3\u3092\u3055\u3089\u306b\u7d30\u304b\u3044\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u5206\u5272\u3057\u3001\u5404\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u5b9f\u88c5\u3059\u308b\u6a5f\u80fd\u3092\u5b9a\u7fa9\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u5404\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306f2\u9031\u9593\u3092\u57fa\u672c\u5358\u4f4d\u3068\u3057\u307e\u3059\u3002</p> <pre><code>gantt\n    title \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3\u6982\u8981\u56f3\n    dateFormat  YYYY-MM-DD\n    section \u30ea\u30ea\u30fc\u30b91\n    \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f31.1  :i1, 2025-04-01, 2025-04-14\n    \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f31.2  :i2, 2025-04-15, 2025-04-28\n    \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f31.3  :i3, 2025-04-29, 2025-05-12\n\n    section \u30ea\u30ea\u30fc\u30b92\n    \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f32.1  :i4, 2025-05-13, 2025-05-26\n    \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f32.2  :i5, 2025-05-27, 2025-06-09\n    \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f32.3  :i6, 2025-06-10, 2025-06-23\n\n    section \u30ea\u30ea\u30fc\u30b93\n    \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f33.1  :i7, 2025-06-24, 2025-07-07\n    \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f33.2  :i8, 2025-07-08, 2025-07-21</code></pre>"},{"location":"iteration_plan/#2","title":"2. \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u8a73\u7d30","text":""},{"location":"iteration_plan/#21-1-mvp","title":"2.1 \u30ea\u30ea\u30fc\u30b91: \u57fa\u672c\u6a5f\u80fd\uff08MVP\uff09","text":""},{"location":"iteration_plan/#11","title":"\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f31.1: \u57fa\u672c\u7684\u306a\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5b9f\u88c5","text":"<p>\u671f\u9593: 2025-04-01 \u301c 2025-04-14\uff082\u9031\u9593\uff09</p> <p>\u76ee\u6a19: \u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u57fa\u672c\u5b9f\u88c5\u3092\u5b8c\u6210\u3055\u305b\u308b</p> <p>\u30bf\u30b9\u30af: - \u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\uff08Product, Seller\uff09\u306e\u5b9f\u88c5 - \u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5b9a\u7fa9 - \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u306e\u8a2d\u5b9a - \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5b9f\u88c5\uff08PostgreSQL\uff09 - \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u7ba1\u7406\u306e\u5b9f\u88c5</p> <p>\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc: 19, 21\uff08\u4e00\u90e8\uff09</p> <p>\u6210\u679c\u7269: - \u5b9f\u88c5\u6e08\u307f\u306e\u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3 - \u5b9f\u88c5\u6e08\u307f\u306e\u30ea\u30dd\u30b8\u30c8\u30ea - \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u8a2d\u5b9a - \u57fa\u672c\u7684\u306a\u30c6\u30b9\u30c8</p>"},{"location":"iteration_plan/#12-api","title":"\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f31.2: \u57fa\u672c\u7684\u306aAPI\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u5b9f\u88c5","text":"<p>\u671f\u9593: 2025-04-15 \u301c 2025-04-28\uff082\u9031\u9593\uff09</p> <p>\u76ee\u6a19: \u5546\u54c1\u7ba1\u7406\u306e\u57fa\u672c\u7684\u306aAPI\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b</p> <p>\u30bf\u30b9\u30af: - RESTful API\u306e\u57fa\u672c\u69cb\u9020\u306e\u5b9f\u88c5 - \u5546\u54c1\u4f5c\u6210API\u306e\u5b9f\u88c5 - \u5546\u54c1\u691c\u7d22API\u306e\u5b9f\u88c5 - \u5546\u54c1\u8a73\u7d30\u53d6\u5f97API\u306e\u5b9f\u88c5 - \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u57fa\u672c\u5b9f\u88c5</p> <p>\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc: 1, 2, 3, 16, 18, 21\uff08\u4e00\u90e8\uff09</p> <p>\u6210\u679c\u7269: - \u5b9f\u88c5\u6e08\u307f\u306e\u5546\u54c1\u7ba1\u7406API - \u57fa\u672c\u7684\u306a\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0 - API\u306e\u30c6\u30b9\u30c8</p>"},{"location":"iteration_plan/#13-api","title":"\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f31.3: \u51fa\u54c1\u8005\u7ba1\u7406API\u306e\u5b9f\u88c5","text":"<p>\u671f\u9593: 2025-04-29 \u301c 2025-05-12\uff082\u9031\u9593\uff09</p> <p>\u76ee\u6a19: \u51fa\u54c1\u8005\u7ba1\u7406\u306e\u57fa\u672c\u7684\u306aAPI\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b</p> <p>\u30bf\u30b9\u30af: - \u51fa\u54c1\u8005\u4f5c\u6210API\u306e\u5b9f\u88c5 - \u51fa\u54c1\u8005\u691c\u7d22API\u306e\u5b9f\u88c5 - \u51fa\u54c1\u8005\u8a73\u7d30\u53d6\u5f97API\u306e\u5b9f\u88c5 - \u30c6\u30b9\u30c8\u306e\u62e1\u5145</p> <p>\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc: 9, 10, 11, 21\uff08\u4e00\u90e8\uff09</p> <p>\u6210\u679c\u7269: - \u5b9f\u88c5\u6e08\u307f\u306e\u51fa\u54c1\u8005\u7ba1\u7406API - \u62e1\u5145\u3055\u308c\u305f\u30c6\u30b9\u30c8 - \u30ea\u30ea\u30fc\u30b91\u306e\u7d71\u5408\u30c6\u30b9\u30c8</p>"},{"location":"iteration_plan/#22-2","title":"2.2 \u30ea\u30ea\u30fc\u30b92: \u62e1\u5f35\u6a5f\u80fd","text":""},{"location":"iteration_plan/#21","title":"\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f32.1: \u5546\u54c1\u7ba1\u7406\u6a5f\u80fd\u306e\u62e1\u5f35","text":"<p>\u671f\u9593: 2025-05-13 \u301c 2025-05-26\uff082\u9031\u9593\uff09</p> <p>\u76ee\u6a19: \u5546\u54c1\u7ba1\u7406\u6a5f\u80fd\u3092\u62e1\u5f35\u3057\u3001\u66f4\u65b0\u3068\u691c\u8a3c\u6a5f\u80fd\u3092\u5f37\u5316\u3059\u308b</p> <p>\u30bf\u30b9\u30af: - \u5546\u54c1\u66f4\u65b0API\u306e\u5b9f\u88c5 - \u5546\u54c1\u691c\u8a3c\u6a5f\u80fd\u306e\u5f37\u5316 - \u5546\u54c1\u3068\u51fa\u54c1\u8005\u306e\u95a2\u9023\u4ed8\u3051\u6a5f\u80fd\u306e\u5f37\u5316 - \u30c6\u30b9\u30c8\u306e\u62e1\u5145</p> <p>\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc: 4, 5, 6, 21\uff08\u4e00\u90e8\uff09</p> <p>\u6210\u679c\u7269: - \u5b9f\u88c5\u6e08\u307f\u306e\u5546\u54c1\u66f4\u65b0API - \u5f37\u5316\u3055\u308c\u305f\u5546\u54c1\u691c\u8a3c\u6a5f\u80fd - \u5f37\u5316\u3055\u308c\u305f\u5546\u54c1\u3068\u51fa\u54c1\u8005\u306e\u95a2\u9023\u4ed8\u3051 - \u62e1\u5145\u3055\u308c\u305f\u30c6\u30b9\u30c8</p>"},{"location":"iteration_plan/#22","title":"\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f32.2: \u51fa\u54c1\u8005\u7ba1\u7406\u6a5f\u80fd\u306e\u62e1\u5f35","text":"<p>\u671f\u9593: 2025-05-27 \u301c 2025-06-09\uff082\u9031\u9593\uff09</p> <p>\u76ee\u6a19: \u51fa\u54c1\u8005\u7ba1\u7406\u6a5f\u80fd\u3092\u62e1\u5f35\u3057\u3001\u66f4\u65b0\u3068\u691c\u8a3c\u6a5f\u80fd\u3092\u5f37\u5316\u3059\u308b</p> <p>\u30bf\u30b9\u30af: - \u51fa\u54c1\u8005\u66f4\u65b0API\u306e\u5b9f\u88c5 - \u51fa\u54c1\u8005\u691c\u8a3c\u6a5f\u80fd\u306e\u5f37\u5316 - \u30c6\u30b9\u30c8\u306e\u62e1\u5145</p> <p>\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc: 12, 14, 21\uff08\u4e00\u90e8\uff09</p> <p>\u6210\u679c\u7269: - \u5b9f\u88c5\u6e08\u307f\u306e\u51fa\u54c1\u8005\u66f4\u65b0API - \u5f37\u5316\u3055\u308c\u305f\u51fa\u54c1\u8005\u691c\u8a3c\u6a5f\u80fd - \u62e1\u5145\u3055\u308c\u305f\u30c6\u30b9\u30c8</p>"},{"location":"iteration_plan/#23-dto","title":"\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f32.3: DTO\u3068\u30de\u30c3\u30d1\u30fc\u306e\u5b9f\u88c5","text":"<p>\u671f\u9593: 2025-06-10 \u301c 2025-06-23\uff082\u9031\u9593\uff09</p> <p>\u76ee\u6a19: DTO\u3068\u30de\u30c3\u30d1\u30fc\u3092\u5b9f\u88c5\u3057\u3001API\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u6539\u5584\u3059\u308b</p> <p>\u30bf\u30b9\u30af: - DTO\u306e\u8a2d\u8a08\u3068\u5b9f\u88c5 - \u30de\u30c3\u30d1\u30fc\u6a5f\u80fd\u306e\u5b9f\u88c5 - API\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u6539\u5584 - \u30c6\u30b9\u30c8\u306e\u62e1\u5145</p> <p>\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc: 17, 21\uff08\u4e00\u90e8\uff09</p> <p>\u6210\u679c\u7269: - \u5b9f\u88c5\u6e08\u307f\u306eDTO - \u5b9f\u88c5\u6e08\u307f\u306e\u30de\u30c3\u30d1\u30fc - \u6539\u5584\u3055\u308c\u305fAPI\u30ec\u30b9\u30dd\u30f3\u30b9 - \u30ea\u30ea\u30fc\u30b92\u306e\u7d71\u5408\u30c6\u30b9\u30c8</p>"},{"location":"iteration_plan/#23-3","title":"2.3 \u30ea\u30ea\u30fc\u30b93: \u9ad8\u5ea6\u306a\u6a5f\u80fd","text":""},{"location":"iteration_plan/#31","title":"\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f33.1: \u30a8\u30e9\u30fc\u51e6\u7406\u306e\u5f37\u5316","text":"<p>\u671f\u9593: 2025-06-24 \u301c 2025-07-07\uff082\u9031\u9593\uff09</p> <p>\u76ee\u6a19: \u30a8\u30e9\u30fc\u51e6\u7406\u3092\u5f37\u5316\u3057\u3001\u3088\u308a\u9069\u5207\u306a\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u63d0\u4f9b\u3059\u308b</p> <p>\u30bf\u30b9\u30af: - \u5b58\u5728\u3057\u306a\u3044\u51fa\u54c1\u8005\u306e\u30a8\u30e9\u30fc\u51e6\u7406\u306e\u5b9f\u88c5 - \u5546\u54c1\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306e404\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5b9f\u88c5 - \u51fa\u54c1\u8005\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306e404\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5b9f\u88c5 - \u30c6\u30b9\u30c8\u306e\u62e1\u5145</p> <p>\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc: 7, 8, 15, 21\uff08\u4e00\u90e8\uff09</p> <p>\u6210\u679c\u7269: - \u5f37\u5316\u3055\u308c\u305f\u30a8\u30e9\u30fc\u51e6\u7406 - \u9069\u5207\u306aHTTP\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306e\u5b9f\u88c5 - \u62e1\u5145\u3055\u308c\u305f\u30c6\u30b9\u30c8</p>"},{"location":"iteration_plan/#32","title":"\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f33.2: \u524a\u9664\u6a5f\u80fd\u3068\u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8\u306e\u5b9f\u88c5","text":"<p>\u671f\u9593: 2025-07-08 \u301c 2025-07-21\uff082\u9031\u9593\uff09</p> <p>\u76ee\u6a19: \u524a\u9664\u6a5f\u80fd\u3068\u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8\u3092\u5b9f\u88c5\u3059\u308b</p> <p>\u30bf\u30b9\u30af: - \u51fa\u54c1\u8005\u524a\u9664API\u306e\u5b9f\u88c5 - \u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8\u6a5f\u80fd\u306e\u5b9f\u88c5 - \u524a\u9664\u6e08\u307f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u53d6\u308a\u6271\u3044\u306e\u5b9f\u88c5 - \u30c6\u30b9\u30c8\u306e\u62e1\u5145</p> <p>\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc: 13, 20, 21\uff08\u4e00\u90e8\uff09</p> <p>\u6210\u679c\u7269: - \u5b9f\u88c5\u6e08\u307f\u306e\u51fa\u54c1\u8005\u524a\u9664API - \u5b9f\u88c5\u6e08\u307f\u306e\u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8\u6a5f\u80fd - \u62e1\u5145\u3055\u308c\u305f\u30c6\u30b9\u30c8 - \u30ea\u30ea\u30fc\u30b93\u306e\u7d71\u5408\u30c6\u30b9\u30c8</p>"},{"location":"iteration_plan/#3","title":"3. \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u7ba1\u7406","text":""},{"location":"iteration_plan/#31_1","title":"3.1 \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u8a08\u753b\u4f1a\u8b70","text":"<p>\u5404\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u59cb\u6642\u306b\u8a08\u753b\u4f1a\u8b70\u3092\u884c\u3044\u3001\u4ee5\u4e0b\u3092\u6c7a\u5b9a\u3057\u307e\u3059\uff1a</p> <ol> <li>\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u76ee\u6a19</li> <li>\u5b9f\u88c5\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc</li> <li>\u5404\u30bf\u30b9\u30af\u306e\u62c5\u5f53\u8005</li> <li>\u30bf\u30b9\u30af\u306e\u898b\u7a4d\u3082\u308a</li> </ol>"},{"location":"iteration_plan/#32_1","title":"3.2 \u30c7\u30a4\u30ea\u30fc\u30b9\u30bf\u30f3\u30c9\u30a2\u30c3\u30d7","text":"<p>\u6bce\u65e515\u5206\u7a0b\u5ea6\u306e\u30b9\u30bf\u30f3\u30c9\u30a2\u30c3\u30d7\u30df\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u884c\u3044\u3001\u4ee5\u4e0b\u3092\u5171\u6709\u3057\u307e\u3059\uff1a</p> <ol> <li>\u6628\u65e5\u3084\u3063\u305f\u3053\u3068</li> <li>\u4eca\u65e5\u3084\u308b\u3053\u3068</li> <li>\u969c\u5bb3\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068</li> </ol>"},{"location":"iteration_plan/#33","title":"3.3 \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u30ec\u30d3\u30e5\u30fc","text":"<p>\u5404\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u7d42\u4e86\u6642\u306b\u30ec\u30d3\u30e5\u30fc\u4f1a\u8b70\u3092\u884c\u3044\u3001\u4ee5\u4e0b\u3092\u78ba\u8a8d\u3057\u307e\u3059\uff1a</p> <ol> <li>\u5b8c\u4e86\u3057\u305f\u30bf\u30b9\u30af</li> <li>\u672a\u5b8c\u4e86\u306e\u30bf\u30b9\u30af</li> <li>\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3</li> <li>\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af</li> </ol>"},{"location":"iteration_plan/#34","title":"3.4 \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u632f\u308a\u8fd4\u308a","text":"<p>\u5404\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u7d42\u4e86\u6642\u306b\u632f\u308a\u8fd4\u308a\u4f1a\u8b70\u3092\u884c\u3044\u3001\u4ee5\u4e0b\u3092\u8b70\u8ad6\u3057\u307e\u3059\uff1a</p> <ol> <li>\u3046\u307e\u304f\u3044\u3063\u305f\u3053\u3068</li> <li>\u6539\u5584\u3059\u3079\u304d\u3053\u3068</li> <li>\u6b21\u306e\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u306e\u5bfe\u7b56</li> </ol>"},{"location":"iteration_plan/#4","title":"4. \u307e\u3068\u3081","text":"<p>\u3053\u306e\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6bb5\u968e\u7684\u306b\u958b\u767a\u3059\u308b\u305f\u3081\u306e\u8a73\u7d30\u306a\u8a08\u753b\u3067\u3059\u3002\u5404\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306f2\u9031\u9593\u3092\u57fa\u672c\u3068\u3057\u3001\u660e\u78ba\u306a\u76ee\u6a19\u3068\u30bf\u30b9\u30af\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002</p> <p>\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u7ba1\u7406\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u9069\u5207\u306b\u5b9f\u65bd\u3059\u308b\u3053\u3068\u3067\u3001\u958b\u767a\u30c1\u30fc\u30e0\u306f\u77ed\u671f\u7684\u306a\u76ee\u6a19\u306b\u96c6\u4e2d\u3057\u306a\u304c\u3089\u3001\u9577\u671f\u7684\u306a\u30d3\u30b8\u30e7\u30f3\u306b\u5411\u304b\u3063\u3066\u9032\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u5b9a\u671f\u7684\u306a\u30ec\u30d3\u30e5\u30fc\u3068\u632f\u308a\u8fd4\u308a\u306b\u3088\u308a\u3001\u7d99\u7d9a\u7684\u306b\u6539\u5584\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u3053\u306e\u30d7\u30e9\u30f3\u306b\u5f93\u3063\u3066\u958b\u767a\u3092\u9032\u3081\u308b\u3053\u3068\u3067\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u52b9\u7387\u7684\u304b\u3064\u52b9\u679c\u7684\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002</p>"},{"location":"modules_explanation/","title":"\u4f7f\u7528\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u89e3\u8aac","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001Go-DDD\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308bGo\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3064\u3044\u3066\u89e3\u8aac\u3057\u307e\u3059\u3002\u5404\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5f79\u5272\u3068\u4f7f\u7528\u76ee\u7684\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u3067\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u69cb\u9020\u3068\u4f9d\u5b58\u95a2\u4fc2\u3092\u3088\u308a\u6df1\u304f\u7406\u89e3\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"modules_explanation/#1","title":"1. \u4e3b\u8981\u30e2\u30b8\u30e5\u30fc\u30eb","text":""},{"location":"modules_explanation/#11-githubcomgoogleuuid-v160","title":"1.1 github.com/google/uuid (v1.6.0)","text":"<p>\u6982\u8981: UUID\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002</p> <p>\u4f7f\u7528\u76ee\u7684: - \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u4e00\u610f\u8b58\u5225\u5b50\uff08ID\uff09\u306e\u751f\u6210 - \u5206\u6563\u30b7\u30b9\u30c6\u30e0\u3067\u306e\u4e00\u610f\u6027\u306e\u4fdd\u8a3c - \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ec\u30b3\u30fc\u30c9\u306e\u4e3b\u30ad\u30fc\u3068\u3057\u3066\u4f7f\u7528</p> <p>\u4f7f\u7528\u4f8b: <pre><code>import \"github.com/google/uuid\"\n\n// \u65b0\u3057\u3044UUID\u306e\u751f\u6210\nid := uuid.New()\n</code></pre></p>"},{"location":"modules_explanation/#12-githubcomjinzhugorm-v1916","title":"1.2 github.com/jinzhu/gorm (v1.9.16)","text":"<p>\u6982\u8981: Go\u306eORM\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002</p> <p>\u4f7f\u7528\u76ee\u7684: - \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u306e\u3084\u308a\u53d6\u308a\u3092\u7c21\u7d20\u5316 - SQL\u30af\u30a8\u30ea\u306e\u62bd\u8c61\u5316 - \u30e2\u30c7\u30eb\u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30c6\u30fc\u30d6\u30eb\u306e\u30de\u30c3\u30d4\u30f3\u30b0</p> <p>\u4f7f\u7528\u4f8b: <pre><code>import \"github.com/jinzhu/gorm\"\n\n// \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\ndb, err := gorm.Open(\"postgres\", \"host=localhost user=gorm dbname=gorm sslmode=disable password=mypassword\")\n</code></pre></p>"},{"location":"modules_explanation/#13-githubcomlabstackechov4-v4133","title":"1.3 github.com/labstack/echo/v4 (v4.13.3)","text":"<p>\u6982\u8981: \u9ad8\u6027\u80fd\u3067\u62e1\u5f35\u53ef\u80fd\u306aWeb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002</p> <p>\u4f7f\u7528\u76ee\u7684: - RESTful API\u306e\u5b9f\u88c5 - HTTP\u30ea\u30af\u30a8\u30b9\u30c8/\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u51e6\u7406 - \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3068\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u63d0\u4f9b</p> <p>\u4f7f\u7528\u4f8b: <pre><code>import \"github.com/labstack/echo/v4\"\n\n// Echo\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210\ne := echo.New()\n\n// \u30eb\u30fc\u30c8\u306e\u5b9a\u7fa9\ne.GET(\"/\", func(c echo.Context) error {\n    return c.String(http.StatusOK, \"Hello, World!\")\n})\n</code></pre></p>"},{"location":"modules_explanation/#14-githubcomstretchrtestify-v1100","title":"1.4 github.com/stretchr/testify (v1.10.0)","text":"<p>\u6982\u8981: Go\u306e\u30c6\u30b9\u30c8\u3092\u652f\u63f4\u3059\u308b\u30c4\u30fc\u30eb\u30ad\u30c3\u30c8\u3067\u3059\u3002</p> <p>\u4f7f\u7528\u76ee\u7684: - \u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u8a18\u8ff0 - \u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306e\u7c21\u7d20\u5316 - \u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210</p> <p>\u4f7f\u7528\u4f8b: <pre><code>import (\n    \"testing\"\n    \"github.com/stretchr/testify/assert\"\n)\n\nfunc TestSomething(t *testing.T) {\n    assert.Equal(t, 123, 123, \"they should be equal\")\n}\n</code></pre></p>"},{"location":"modules_explanation/#15-githubcomswaggoecho-swagger-v141","title":"1.5 github.com/swaggo/echo-swagger (v1.4.1)","text":"<p>\u6982\u8981: Echo \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u7528\u306e Swagger UI \u30cf\u30f3\u30c9\u30e9\u3067\u3059\u3002</p> <p>\u4f7f\u7528\u76ee\u7684: - API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u81ea\u52d5\u751f\u6210 - Swagger UI \u306e\u63d0\u4f9b - API \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u30c6\u30b9\u30c8</p> <p>\u4f7f\u7528\u4f8b: <pre><code>import (\n    \"github.com/labstack/echo/v4\"\n    echoSwagger \"github.com/swaggo/echo-swagger\"\n)\n\ne := echo.New()\ne.GET(\"/swagger/*\", echoSwagger.WrapHandler)\n</code></pre></p>"},{"location":"modules_explanation/#16-githubcomswaggoswag-v1164","title":"1.6 github.com/swaggo/swag (v1.16.4)","text":"<p>\u6982\u8981: Go \u30b3\u30fc\u30c9\u304b\u3089 Swagger \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002</p> <p>\u4f7f\u7528\u76ee\u7684: - API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u81ea\u52d5\u751f\u6210 - OpenAPI \u4ed5\u69d8\u306e\u4f5c\u6210</p> <p>\u4f7f\u7528\u4f8b: <pre><code>// @title Marketplace API\n// @version 1.0\n// @description This is a sample server for a marketplace.\n// @host localhost:8080\n// @BasePath /api/v1\nfunc main() {\n    // ...\n}\n</code></pre></p>"},{"location":"modules_explanation/#17-githubcomcucumbergodog-v0150","title":"1.7 github.com/cucumber/godog (v0.15.0)","text":"<p>\u6982\u8981: Go \u8a00\u8a9e\u7528\u306e BDD (Behavior-Driven Development) \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002</p> <p>\u4f7f\u7528\u76ee\u7684: - \u632f\u308b\u821e\u3044\u99c6\u52d5\u958b\u767a\u306e\u30b5\u30dd\u30fc\u30c8 - Gherkin \u69cb\u6587\u306b\u3088\u308b\u30c6\u30b9\u30c8\u8a18\u8ff0 - \u53d7\u3051\u5165\u308c\u30c6\u30b9\u30c8\u306e\u81ea\u52d5\u5316</p> <p>\u4f7f\u7528\u4f8b: <pre><code>import \"github.com/cucumber/godog\"\n\nfunc InitializeScenario(ctx *godog.ScenarioContext) {\n    ctx.Step(`^I have (\\d+) items$`, iHaveItems)\n    ctx.Step(`^I add (\\d+) items$`, iAddItems)\n    ctx.Step(`^I should have (\\d+) items$`, iShouldHaveItems)\n}\n</code></pre></p>"},{"location":"modules_explanation/#18-githubcomtestcontainerstestcontainers-go-v0350","title":"1.8 github.com/testcontainers/testcontainers-go (v0.35.0)","text":"<p>\u6982\u8981: \u30c6\u30b9\u30c8\u7528\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u63d0\u4f9b\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002</p> <p>\u4f7f\u7528\u76ee\u7684: - \u7d71\u5408\u30c6\u30b9\u30c8\u74b0\u5883\u306e\u69cb\u7bc9 - \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u4f9d\u5b58\u30b5\u30fc\u30d3\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u5316 - \u30c6\u30b9\u30c8\u74b0\u5883\u306e\u4e00\u8cab\u6027\u78ba\u4fdd</p> <p>\u4f7f\u7528\u4f8b: <pre><code>import (\n    \"github.com/testcontainers/testcontainers-go\"\n    \"github.com/testcontainers/testcontainers-go/wait\"\n)\n\npgContainer, err := testcontainers.GenericContainer(ctx, testcontainers.GenericContainerRequest{\n    ContainerRequest: testcontainers.ContainerRequest{\n        Image:        \"postgres:13\",\n        ExposedPorts: []string{\"5432/tcp\"},\n        Env: map[string]string{\n            \"POSTGRES_PASSWORD\": \"password\",\n            \"POSTGRES_USER\":     \"user\",\n            \"POSTGRES_DB\":       \"testdb\",\n        },\n        WaitingFor: wait.ForLog(\"database system is ready to accept connections\"),\n    },\n})\n</code></pre></p>"},{"location":"modules_explanation/#19-gormiodriverpostgres-v1511","title":"1.9 gorm.io/driver/postgres (v1.5.11)","text":"<p>\u6982\u8981: GORM\u306ePostgreSQL\u30c9\u30e9\u30a4\u30d0\u30fc\u3067\u3059\u3002</p> <p>\u4f7f\u7528\u76ee\u7684: - PostgreSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u306e\u63a5\u7d9a - PostgreSQL\u56fa\u6709\u306e\u6a5f\u80fd\u306e\u30b5\u30dd\u30fc\u30c8</p> <p>\u4f7f\u7528\u4f8b: <pre><code>import (\n    \"gorm.io/driver/postgres\"\n    \"gorm.io/gorm\"\n)\n\ndsn := \"host=localhost user=gorm password=gorm dbname=gorm port=9920 sslmode=disable\"\ndb, err := gorm.Open(postgres.Open(dsn), &amp;gorm.Config{})\n</code></pre></p>"},{"location":"modules_explanation/#110-gormiodriversqlite-v157","title":"1.10 gorm.io/driver/sqlite (v1.5.7)","text":"<p>\u6982\u8981: GORM\u306eSQLite\u30c9\u30e9\u30a4\u30d0\u30fc\u3067\u3059\u3002</p> <p>\u4f7f\u7528\u76ee\u7684: - SQLite\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u306e\u63a5\u7d9a - \u30c6\u30b9\u30c8\u74b0\u5883\u3067\u306e\u30a4\u30f3\u30e1\u30e2\u30ea\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u4f7f\u7528</p> <p>\u4f7f\u7528\u4f8b: <pre><code>import (\n    \"gorm.io/driver/sqlite\"\n    \"gorm.io/gorm\"\n)\n\ndb, err := gorm.Open(sqlite.Open(\"test.db\"), &amp;gorm.Config{})\n</code></pre></p>"},{"location":"modules_explanation/#111-gormiogen-v0326","title":"1.11 gorm.io/gen (v0.3.26)","text":"<p>\u6982\u8981: GORM \u306e\u30b3\u30fc\u30c9\u751f\u6210\u30c4\u30fc\u30eb\u3067\u3059\u3002</p> <p>\u4f7f\u7528\u76ee\u7684: - \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b9\u30ad\u30fc\u30de\u304b\u3089\u306e\u578b\u5b89\u5168\u306a\u30af\u30a8\u30ea\u751f\u6210 - \u30e2\u30c7\u30eb\u5b9a\u7fa9\u306e\u81ea\u52d5\u751f\u6210 - \u30ea\u30dd\u30b8\u30c8\u30ea\u30d1\u30bf\u30fc\u30f3\u306e\u5b9f\u88c5\u652f\u63f4</p> <p>\u4f7f\u7528\u4f8b: <pre><code>import (\n    \"gorm.io/gen\"\n)\n\ng := gen.NewGenerator(gen.Config{\n    OutPath: \"../query\",\n    Mode:    gen.WithoutContext | gen.WithDefaultQuery | gen.WithQueryInterface,\n})\n\ng.ApplyBasic(model.User{}, model.Product{})\ng.Execute()\n</code></pre></p>"},{"location":"modules_explanation/#112-gormioplugindbresolver-v153","title":"1.12 gorm.io/plugin/dbresolver (v1.5.3)","text":"<p>\u6982\u8981: GORM \u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ea\u30be\u30eb\u30d0\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u3059\u3002</p> <p>\u4f7f\u7528\u76ee\u7684: - \u8aad\u307f\u53d6\u308a/\u66f8\u304d\u8fbc\u307f\u5206\u96e2 - \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0 - \u8907\u6570\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u306e\u7ba1\u7406</p> <p>\u4f7f\u7528\u4f8b: <pre><code>import (\n    \"gorm.io/gorm\"\n    \"gorm.io/plugin/dbresolver\"\n    \"gorm.io/driver/postgres\"\n)\n\ndb, err := gorm.Open(postgres.Open(\"primary_dsn\"), &amp;gorm.Config{})\n\ndb.Use(dbresolver.Register(dbresolver.Config{\n    Replicas: []gorm.Dialector{\n        postgres.Open(\"replica_dsn1\"),\n        postgres.Open(\"replica_dsn2\"),\n    },\n}).Register(dbresolver.Config{\n    Sources:  []gorm.Dialector{postgres.Open(\"users_dsn\")},\n    Replicas: []gorm.Dialector{postgres.Open(\"users_replica_dsn\")},\n    Policy:   dbresolver.RandomPolicy{},\n}, \"users\"))\n</code></pre></p>"},{"location":"modules_explanation/#113-gormiogorm-v12512","title":"1.13 gorm.io/gorm (v1.25.12)","text":"<p>\u6982\u8981: \u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306eGORM\uff08Object Relational Mapping\uff09\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002</p> <p>\u4f7f\u7528\u76ee\u7684: - \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u64cd\u4f5c\u306e\u62bd\u8c61\u5316 - \u30e2\u30c7\u30eb\u5b9a\u7fa9\u3068\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3 - \u30af\u30a8\u30ea\u30d3\u30eb\u30c0\u30fc\u306e\u63d0\u4f9b</p> <p>\u4f7f\u7528\u4f8b: <pre><code>import (\n    \"gorm.io/gorm\"\n    \"gorm.io/driver/postgres\"\n)\n\ndb, err := gorm.Open(postgres.Open(\"dsn\"), &amp;gorm.Config{})\n\n// \u30e2\u30c7\u30eb\u306e\u4f5c\u6210\ntype Product struct {\n    gorm.Model\n    Code  string\n    Price uint\n}\n\n// \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\ndb.AutoMigrate(&amp;Product{})\n</code></pre></p>"},{"location":"modules_explanation/#2","title":"2. \u9593\u63a5\u7684\u306a\u4f9d\u5b58\u30e2\u30b8\u30e5\u30fc\u30eb","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u3001\u4e3b\u8981\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u4f9d\u5b58\u3059\u308b\u591a\u304f\u306e\u9593\u63a5\u7684\u306a\u4f9d\u5b58\u30e2\u30b8\u30e5\u30fc\u30eb\u3082\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u306b\u4e3b\u8981\u306a\u3082\u306e\u3092\u793a\u3057\u307e\u3059\uff1a</p>"},{"location":"modules_explanation/#21","title":"2.1 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u95a2\u9023","text":"<ul> <li>github.com/jackc/pgx/v5 (v5.5.5): PostgreSQL\u30c9\u30e9\u30a4\u30d0\u30fc</li> <li>github.com/mattn/go-sqlite3 (v1.14.22): SQLite\u30c9\u30e9\u30a4\u30d0\u30fc</li> <li>github.com/jinzhu/inflection (v1.0.0): \u5358\u6570\u5f62/\u8907\u6570\u5f62\u306e\u5909\u63db\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3</li> <li>github.com/jinzhu/now (v1.1.5): \u65e5\u6642\u64cd\u4f5c\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3</li> <li>gorm.io/driver/mysql (v1.5.7): GORM\u306eMySQL\u30c9\u30e9\u30a4\u30d0\u30fc</li> <li>gorm.io/datatypes (v1.1.1-0.20230130040222-c43177d3cf8c): GORM\u306e\u62e1\u5f35\u30c7\u30fc\u30bf\u578b</li> <li>gorm.io/hints (v1.1.0): GORM\u306eSQL\u30d2\u30f3\u30c8\u6a5f\u80fd</li> </ul>"},{"location":"modules_explanation/#22-httpweb","title":"2.2 HTTP/Web\u95a2\u9023","text":"<ul> <li>github.com/labstack/gommon (v0.4.2): Echo\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3</li> <li>github.com/valyala/fasttemplate (v1.2.2): \u9ad8\u901f\u306a\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3</li> <li>golang.org/x/net (v0.37.0): \u62e1\u5f35\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u6a5f\u80fd</li> <li>golang.org/x/crypto (v0.36.0): \u6697\u53f7\u5316\u6a5f\u80fd</li> <li>github.com/KyleBanks/depth (v1.2.1): Go\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4f9d\u5b58\u95a2\u4fc2\u89e3\u6790</li> <li>github.com/swaggo/files/v2 (v2.0.0): Swagger\u30d5\u30a1\u30a4\u30eb\u30cf\u30f3\u30c9\u30e9</li> </ul>"},{"location":"modules_explanation/#23","title":"2.3 \u30c6\u30b9\u30c8\u95a2\u9023","text":"<ul> <li>github.com/davecgh/go-spew (v1.1.1): \u30c7\u30fc\u30bf\u69cb\u9020\u306e\u8a73\u7d30\u8868\u793a</li> <li>github.com/pmezard/go-difflib (v1.0.0): \u5dee\u5206\u6bd4\u8f03\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3</li> <li>github.com/stretchr/objx (v0.5.2): \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u64cd\u4f5c\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3</li> <li>github.com/cucumber/gherkin/go/v26 (v26.2.0): Gherkin\u69cb\u6587\u30d1\u30fc\u30b5\u30fc</li> <li>github.com/cucumber/messages/go/v21 (v21.0.1): Cucumber\u30e1\u30c3\u30bb\u30fc\u30b8</li> <li>github.com/gofrs/uuid (v4.3.1+incompatible): UUID\u751f\u6210\u30e9\u30a4\u30d6\u30e9\u30ea</li> </ul>"},{"location":"modules_explanation/#24","title":"2.4 \u30b3\u30f3\u30c6\u30ca\u95a2\u9023","text":"<ul> <li>github.com/testcontainers/testcontainers-go (v0.35.0): \u30c6\u30b9\u30c8\u7528\u30b3\u30f3\u30c6\u30ca</li> <li>github.com/docker/docker (v27.1.1+incompatible): Docker\u30a8\u30f3\u30b8\u30f3 API</li> <li>github.com/docker/go-connections (v0.5.0): Docker\u63a5\u7d9a\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3</li> <li>github.com/containerd/containerd (v1.7.18): \u30b3\u30f3\u30c6\u30ca\u30e9\u30f3\u30bf\u30a4\u30e0</li> <li>github.com/opencontainers/image-spec (v1.1.0): OCI \u30a4\u30e1\u30fc\u30b8\u4ed5\u69d8</li> </ul>"},{"location":"modules_explanation/#25","title":"2.5 \u305d\u306e\u4ed6\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3","text":"<ul> <li>golang.org/x/sync (v0.12.0): \u540c\u671f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6</li> <li>golang.org/x/sys (v0.31.0): \u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb</li> <li>golang.org/x/text (v0.23.0): \u30c6\u30ad\u30b9\u30c8\u51e6\u7406</li> <li>golang.org/x/tools (v0.31.0): Go\u958b\u767a\u30c4\u30fc\u30eb</li> <li>golang.org/x/mod (v0.24.0): Go\u30e2\u30b8\u30e5\u30fc\u30eb\u64cd\u4f5c</li> <li>gopkg.in/yaml.v2 (v2.4.0): YAML\u51e6\u7406</li> <li>gopkg.in/yaml.v3 (v3.0.1): YAML\u51e6\u7406\uff08v3\uff09</li> </ul>"},{"location":"modules_explanation/#3-go","title":"3. Go\u8a00\u8a9e\u30d0\u30fc\u30b8\u30e7\u30f3","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u4ee5\u4e0b\u306eGo\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\uff1a</p> <ul> <li>Go\u8a00\u8a9e\u30d0\u30fc\u30b8\u30e7\u30f3: 1.23.0</li> <li>\u30c4\u30fc\u30eb\u30c1\u30a7\u30fc\u30f3: 1.24.1</li> </ul> <p>\u3053\u308c\u3089\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3001<code>go.mod</code>\u30d5\u30a1\u30a4\u30eb\u306e\u4ee5\u4e0b\u306e\u884c\u3067\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\uff1a</p> <pre><code>go 1.23.0\n\ntoolchain go1.24.1\n</code></pre>"},{"location":"modules_explanation/#4","title":"4. \u30e2\u30b8\u30e5\u30fc\u30eb\u9078\u5b9a\u306e\u7406\u7531","text":"<p>Go-DDD\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u7406\u7531\u304b\u3089\u3053\u308c\u3089\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u9078\u5b9a\u3057\u3066\u3044\u307e\u3059\uff1a</p> <ol> <li>\u6210\u719f\u5ea6\u3068\u5b89\u5b9a\u6027: \u5e83\u304f\u4f7f\u7528\u3055\u308c\u3066\u304a\u308a\u3001\u5b89\u5b9a\u3057\u305fAPI\u3092\u63d0\u4f9b\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u9078\u5b9a</li> <li>\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9: \u9ad8\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u6301\u3064\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u512a\u5148</li> <li>\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30b5\u30dd\u30fc\u30c8: \u6d3b\u767a\u306a\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3068\u826f\u597d\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u6301\u3064\u30e2\u30b8\u30e5\u30fc\u30eb</li> <li>\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u3068\u306e\u89aa\u548c\u6027: DDD\u306e\u539f\u5247\u306b\u6cbf\u3063\u305f\u5b9f\u88c5\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb</li> </ol>"},{"location":"modules_explanation/#5","title":"5. \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001<code>go.mod</code>\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u3066\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u969b\u306f\u3001\u4ee5\u4e0b\u306e\u70b9\u306b\u6ce8\u610f\u3057\u3066\u3044\u307e\u3059\uff1a</p> <ol> <li>\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30d0\u30fc\u30b8\u30e7\u30cb\u30f3\u30b0\u306e\u5c0a\u91cd</li> <li>\u7834\u58ca\u7684\u5909\u66f4\u306e\u5f71\u97ff\u8a55\u4fa1</li> <li>\u4f9d\u5b58\u95a2\u4fc2\u306e\u7af6\u5408\u89e3\u6c7a</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u512a\u5148\u9069\u7528</li> </ol>"},{"location":"modules_explanation/#6","title":"6. \u307e\u3068\u3081","text":"<p>Go-DDD\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u539f\u5247\u306b\u57fa\u3065\u3044\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3092\u652f\u63f4\u3059\u308b\u305f\u3081\u306b\u3001\u9069\u5207\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u9078\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u64cd\u4f5c\u3001Web API\u5b9f\u88c5\u3001\u30c6\u30b9\u30c8\u3001\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u6a5f\u80fd\u306a\u3069\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u69d8\u3005\u306a\u5074\u9762\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"orm_mapper_implementation/","title":"Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 ORM\u30de\u30c3\u30d1\u30fc\u5b9f\u88c5\u306e\u8a73\u7d30\u89e3\u8aac","text":""},{"location":"orm_mapper_implementation/#1","title":"1. \u6982\u8981","text":"<p>\u3053\u306e\u6587\u66f8\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308b\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u5c64\u306eORM\u30de\u30c3\u30d1\u30fc\u5b9f\u88c5\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u89e3\u8aac\u3057\u307e\u3059\u3002ORM\u30de\u30c3\u30d1\u30fc\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u9593\u306e\u5909\u63db\u3092\u62c5\u5f53\u3057\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p>"},{"location":"orm_mapper_implementation/#11-orm","title":"1.1 ORM\u30de\u30c3\u30d1\u30fc\u306e\u5f79\u5272","text":"<p>ORM\u30de\u30c3\u30d1\u30fc\u306f\u4ee5\u4e0b\u306e\u5f79\u5272\u3092\u62c5\u3044\u307e\u3059\uff1a</p> <ol> <li>\u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\u306e\u5909\u63db: \u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u53ef\u80fd\u306a\u5f62\u5f0f\u306b\u5909\u63db\u3057\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u3092\u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u5909\u63db\u3057\u307e\u3059\u3002</li> <li>\u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5: \u30c9\u30e1\u30a4\u30f3\u5c64\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</li> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u64cd\u4f5c\u306e\u62bd\u8c61\u5316: SQL\u30af\u30a8\u30ea\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u56fa\u6709\u306e\u64cd\u4f5c\u3092\u62bd\u8c61\u5316\u3057\u3001\u30c9\u30e1\u30a4\u30f3\u5c64\u304c\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u8a73\u7d30\u3092\u77e5\u308b\u5fc5\u8981\u304c\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002</li> </ol>"},{"location":"orm_mapper_implementation/#12","title":"1.2 \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u304a\u3051\u308b\u4f4d\u7f6e\u3065\u3051","text":"<p>\u4ee5\u4e0b\u306e\u56f3\u306f\u3001ORM\u30de\u30c3\u30d1\u30fc\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u304a\u3051\u308b\u4f4d\u7f6e\u3065\u3051\u3092\u793a\u3057\u3066\u3044\u307e\u3059\uff1a</p> <p></p>"},{"location":"orm_mapper_implementation/#2-orm","title":"2. ORM\u30de\u30c3\u30d1\u30fc\u306e\u5b9f\u88c5","text":""},{"location":"orm_mapper_implementation/#21","title":"2.1 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\u306e\u5b9a\u7fa9","text":"<p>\u307e\u305a\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30e2\u30c7\u30eb\u306f\u3001GORM\u306e\u30bf\u30b0\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30c6\u30fc\u30d6\u30eb\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</p>"},{"location":"orm_mapper_implementation/#211","title":"2.1.1 \u5546\u54c1\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb","text":"<pre><code>package postgres\n\nimport (\n    \"time\"\n)\n\n// DBProduct \u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u5546\u54c1\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u5fdc\u3059\u308b\u69cb\u9020\u4f53\ntype DBProduct struct {\n    ID          string `gorm:\"primaryKey\"`\n    Name        string\n    Description string\n    Price       float64\n    SellerID    string\n    CreatedAt   time.Time\n    UpdatedAt   time.Time\n    DeletedAt   *time.Time `gorm:\"index\"`\n}\n\n// TableName \u306f\u30c6\u30fc\u30d6\u30eb\u540d\u3092\u6307\u5b9a\u3059\u308bGORM\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30e1\u30bd\u30c3\u30c9\nfunc (DBProduct) TableName() string {\n    return \"products\"\n}\n</code></pre>"},{"location":"orm_mapper_implementation/#212","title":"2.1.2 \u51fa\u54c1\u8005\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb","text":"<pre><code>package postgres\n\nimport (\n    \"time\"\n)\n\n// DBSeller \u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u51fa\u54c1\u8005\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u5fdc\u3059\u308b\u69cb\u9020\u4f53\ntype DBSeller struct {\n    ID        string `gorm:\"primaryKey\"`\n    Name      string\n    Email     string\n    CreatedAt time.Time\n    UpdatedAt time.Time\n    DeletedAt *time.Time `gorm:\"index\"`\n}\n\n// TableName \u306f\u30c6\u30fc\u30d6\u30eb\u540d\u3092\u6307\u5b9a\u3059\u308bGORM\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30e1\u30bd\u30c3\u30c9\nfunc (DBSeller) TableName() string {\n    return \"sellers\"\n}\n</code></pre>"},{"location":"orm_mapper_implementation/#22","title":"2.2 \u30de\u30c3\u30d1\u30fc\u95a2\u6570\u306e\u5b9f\u88c5","text":"<p>\u6b21\u306b\u3001\u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\u306e\u9593\u306e\u5909\u63db\u3092\u884c\u3046\u30de\u30c3\u30d1\u30fc\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</p>"},{"location":"orm_mapper_implementation/#221","title":"2.2.1 \u5546\u54c1\u30de\u30c3\u30d1\u30fc","text":"<pre><code>package postgres\n\nimport (\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n)\n\n// toDBProduct \u306f\u30c9\u30e1\u30a4\u30f3\u306e\u5546\u54c1\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\u306b\u5909\u63db\u3059\u308b\nfunc toDBProduct(product entities.Product) DBProduct {\n    return DBProduct{\n        ID:          product.Id,\n        Name:        product.Name,\n        Description: product.Description,\n        Price:       product.Price,\n        SellerID:    product.SellerId,\n        CreatedAt:   product.CreatedAt,\n        UpdatedAt:   product.UpdatedAt,\n        DeletedAt:   product.DeletedAt,\n    }\n}\n\n// toDomainProduct \u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\u3092\u30c9\u30e1\u30a4\u30f3\u306e\u5546\u54c1\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u5909\u63db\u3059\u308b\nfunc toDomainProduct(dbProduct DBProduct) entities.Product {\n    return entities.Product{\n        Id:          dbProduct.ID,\n        Name:        dbProduct.Name,\n        Description: dbProduct.Description,\n        Price:       dbProduct.Price,\n        SellerId:    dbProduct.SellerID,\n        CreatedAt:   dbProduct.CreatedAt,\n        UpdatedAt:   dbProduct.UpdatedAt,\n        DeletedAt:   dbProduct.DeletedAt,\n    }\n}\n</code></pre>"},{"location":"orm_mapper_implementation/#222","title":"2.2.2 \u51fa\u54c1\u8005\u30de\u30c3\u30d1\u30fc","text":"<pre><code>package postgres\n\nimport (\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n)\n\n// toDBSeller \u306f\u30c9\u30e1\u30a4\u30f3\u306e\u51fa\u54c1\u8005\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\u306b\u5909\u63db\u3059\u308b\nfunc toDBSeller(seller entities.Seller) DBSeller {\n    return DBSeller{\n        ID:        seller.Id,\n        Name:      seller.Name,\n        Email:     seller.Email,\n        CreatedAt: seller.CreatedAt,\n        UpdatedAt: seller.UpdatedAt,\n        DeletedAt: seller.DeletedAt,\n    }\n}\n\n// toDomainSeller \u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\u3092\u30c9\u30e1\u30a4\u30f3\u306e\u51fa\u54c1\u8005\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u5909\u63db\u3059\u308b\nfunc toDomainSeller(dbSeller DBSeller) entities.Seller {\n    return entities.Seller{\n        Id:        dbSeller.ID,\n        Name:      dbSeller.Name,\n        Email:     dbSeller.Email,\n        CreatedAt: dbSeller.CreatedAt,\n        UpdatedAt: dbSeller.UpdatedAt,\n        DeletedAt: dbSeller.DeletedAt,\n    }\n}\n</code></pre>"},{"location":"orm_mapper_implementation/#23","title":"2.3 \u30ea\u30dd\u30b8\u30c8\u30ea\u5b9f\u88c5","text":"<p>\u6700\u5f8c\u306b\u3001\u30c9\u30e1\u30a4\u30f3\u5c64\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u5b9f\u88c5\u306f\u3001GORM\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u64cd\u4f5c\u3092\u884c\u3044\u3001\u30de\u30c3\u30d1\u30fc\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\u306e\u5909\u63db\u3092\u884c\u3044\u307e\u3059\u3002</p>"},{"location":"orm_mapper_implementation/#231","title":"2.3.1 \u5546\u54c1\u30ea\u30dd\u30b8\u30c8\u30ea\u5b9f\u88c5","text":"<pre><code>package postgres\n\nimport (\n    \"errors\"\n    \"gorm.io/gorm\"\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n    \"github.com/sklinkert/go-ddd/internal/application/common\"\n)\n\n// GormProductRepository \u306fGORM\u3092\u4f7f\u7528\u3057\u305f\u5546\u54c1\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5b9f\u88c5\ntype GormProductRepository struct {\n    db *gorm.DB\n}\n\n// NewGormProductRepository \u306f\u65b0\u3057\u3044GormProductRepository\u3092\u4f5c\u6210\u3059\u308b\nfunc NewGormProductRepository(db *gorm.DB) *GormProductRepository {\n    return &amp;GormProductRepository{db: db}\n}\n\n// Save \u306f\u5546\u54c1\u3092\u4fdd\u5b58\u3059\u308b\nfunc (r *GormProductRepository) Save(product entities.Product) error {\n    dbProduct := toDBProduct(product)\n    result := r.db.Create(&amp;dbProduct)\n    if result.Error != nil {\n        return common.NewDatabaseError(\"Failed to save product\", result.Error)\n    }\n    return nil\n}\n\n// FindAll \u306f\u5168\u3066\u306e\u5546\u54c1\u3092\u53d6\u5f97\u3059\u308b\nfunc (r *GormProductRepository) FindAll() ([]entities.Product, error) {\n    var dbProducts []DBProduct\n    // \u524a\u9664\u3055\u308c\u3066\u3044\u306a\u3044\u30ec\u30b3\u30fc\u30c9\u306e\u307f\u3092\u53d6\u5f97\n    result := r.db.Where(\"deleted_at IS NULL\").Find(&amp;dbProducts)\n    if result.Error != nil {\n        return nil, common.NewDatabaseError(\"Failed to find products\", result.Error)\n    }\n\n    products := make([]entities.Product, len(dbProducts))\n    for i, dbProduct := range dbProducts {\n        products[i] = toDomainProduct(dbProduct)\n    }\n    return products, nil\n}\n\n// ById \u306fID\u3067\u5546\u54c1\u3092\u53d6\u5f97\u3059\u308b\nfunc (r *GormProductRepository) ById(id string) (entities.Product, error) {\n    var dbProduct DBProduct\n    result := r.db.First(&amp;dbProduct, \"id = ? AND deleted_at IS NULL\", id)\n    if result.Error != nil {\n        if errors.Is(result.Error, gorm.ErrRecordNotFound) {\n            return entities.Product{}, common.NewNotFoundError(\"Product not found\", nil)\n        }\n        return entities.Product{}, common.NewDatabaseError(\"Failed to find product\", result.Error)\n    }\n    return toDomainProduct(dbProduct), nil\n}\n\n// Update \u306f\u5546\u54c1\u3092\u66f4\u65b0\u3059\u308b\nfunc (r *GormProductRepository) Update(product entities.Product) error {\n    dbProduct := toDBProduct(product)\n    result := r.db.Save(&amp;dbProduct)\n    if result.Error != nil {\n        return common.NewDatabaseError(\"Failed to update product\", result.Error)\n    }\n    if result.RowsAffected == 0 {\n        return common.NewNotFoundError(\"Product not found\", nil)\n    }\n    return nil\n}\n\n// Delete \u306f\u5546\u54c1\u3092\u8ad6\u7406\u524a\u9664\u3059\u308b\nfunc (r *GormProductRepository) Delete(id string) error {\n    result := r.db.Model(&amp;DBProduct{}).Where(\"id = ?\", id).Update(\"deleted_at\", gorm.Expr(\"NOW()\"))\n    if result.Error != nil {\n        return common.NewDatabaseError(\"Failed to delete product\", result.Error)\n    }\n    if result.RowsAffected == 0 {\n        return common.NewNotFoundError(\"Product not found\", nil)\n    }\n    return nil\n}\n</code></pre>"},{"location":"orm_mapper_implementation/#232","title":"2.3.2 \u51fa\u54c1\u8005\u30ea\u30dd\u30b8\u30c8\u30ea\u5b9f\u88c5","text":"<pre><code>package postgres\n\nimport (\n    \"errors\"\n    \"gorm.io/gorm\"\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n    \"github.com/sklinkert/go-ddd/internal/application/common\"\n)\n\n// GormSellerRepository \u306fGORM\u3092\u4f7f\u7528\u3057\u305f\u51fa\u54c1\u8005\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5b9f\u88c5\ntype GormSellerRepository struct {\n    db *gorm.DB\n}\n\n// NewGormSellerRepository \u306f\u65b0\u3057\u3044GormSellerRepository\u3092\u4f5c\u6210\u3059\u308b\nfunc NewGormSellerRepository(db *gorm.DB) *GormSellerRepository {\n    return &amp;GormSellerRepository{db: db}\n}\n\n// Save \u306f\u51fa\u54c1\u8005\u3092\u4fdd\u5b58\u3059\u308b\nfunc (r *GormSellerRepository) Save(seller entities.Seller) error {\n    dbSeller := toDBSeller(seller)\n    result := r.db.Create(&amp;dbSeller)\n    if result.Error != nil {\n        return common.NewDatabaseError(\"Failed to save seller\", result.Error)\n    }\n    return nil\n}\n\n// FindAll \u306f\u5168\u3066\u306e\u51fa\u54c1\u8005\u3092\u53d6\u5f97\u3059\u308b\nfunc (r *GormSellerRepository) FindAll() ([]entities.Seller, error) {\n    var dbSellers []DBSeller\n    // \u524a\u9664\u3055\u308c\u3066\u3044\u306a\u3044\u30ec\u30b3\u30fc\u30c9\u306e\u307f\u3092\u53d6\u5f97\n    result := r.db.Where(\"deleted_at IS NULL\").Find(&amp;dbSellers)\n    if result.Error != nil {\n        return nil, common.NewDatabaseError(\"Failed to find sellers\", result.Error)\n    }\n\n    sellers := make([]entities.Seller, len(dbSellers))\n    for i, dbSeller := range dbSellers {\n        sellers[i] = toDomainSeller(dbSeller)\n    }\n    return sellers, nil\n}\n\n// ById \u306fID\u3067\u51fa\u54c1\u8005\u3092\u53d6\u5f97\u3059\u308b\nfunc (r *GormSellerRepository) ById(id string) (entities.Seller, error) {\n    var dbSeller DBSeller\n    result := r.db.First(&amp;dbSeller, \"id = ? AND deleted_at IS NULL\", id)\n    if result.Error != nil {\n        if errors.Is(result.Error, gorm.ErrRecordNotFound) {\n            return entities.Seller{}, common.NewNotFoundError(\"Seller not found\", nil)\n        }\n        return entities.Seller{}, common.NewDatabaseError(\"Failed to find seller\", result.Error)\n    }\n    return toDomainSeller(dbSeller), nil\n}\n\n// Update \u306f\u51fa\u54c1\u8005\u3092\u66f4\u65b0\u3059\u308b\nfunc (r *GormSellerRepository) Update(seller entities.Seller) error {\n    dbSeller := toDBSeller(seller)\n    result := r.db.Save(&amp;dbSeller)\n    if result.Error != nil {\n        return common.NewDatabaseError(\"Failed to update seller\", result.Error)\n    }\n    if result.RowsAffected == 0 {\n        return common.NewNotFoundError(\"Seller not found\", nil)\n    }\n    return nil\n}\n\n// Delete \u306f\u51fa\u54c1\u8005\u3092\u8ad6\u7406\u524a\u9664\u3059\u308b\nfunc (r *GormSellerRepository) Delete(id string) error {\n    result := r.db.Model(&amp;DBSeller{}).Where(\"id = ?\", id).Update(\"deleted_at\", gorm.Expr(\"NOW()\"))\n    if result.Error != nil {\n        return common.NewDatabaseError(\"Failed to delete seller\", result.Error)\n    }\n    if result.RowsAffected == 0 {\n        return common.NewNotFoundError(\"Seller not found\", nil)\n    }\n    return nil\n}\n</code></pre>"},{"location":"orm_mapper_implementation/#3-orm","title":"3. ORM\u30de\u30c3\u30d1\u30fc\u306e\u52d5\u4f5c\u30d5\u30ed\u30fc","text":"<p>\u4ee5\u4e0b\u306e\u56f3\u306f\u3001ORM\u30de\u30c3\u30d1\u30fc\u3092\u4f7f\u7528\u3057\u305f\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u3068\u53d6\u5f97\u306e\u6d41\u308c\u3092\u793a\u3057\u3066\u3044\u307e\u3059\uff1a</p>"},{"location":"orm_mapper_implementation/#31","title":"3.1 \u30c7\u30fc\u30bf\u4fdd\u5b58\u30d5\u30ed\u30fc","text":""},{"location":"orm_mapper_implementation/#32","title":"3.2 \u30c7\u30fc\u30bf\u53d6\u5f97\u30d5\u30ed\u30fc","text":""},{"location":"orm_mapper_implementation/#33","title":"3.3 \u30c7\u30fc\u30bf\u66f4\u65b0\u30d5\u30ed\u30fc","text":""},{"location":"orm_mapper_implementation/#34","title":"3.4 \u30c7\u30fc\u30bf\u524a\u9664\u30d5\u30ed\u30fc\uff08\u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8\uff09","text":""},{"location":"orm_mapper_implementation/#4-orm","title":"4. ORM\u30de\u30c3\u30d1\u30fc\u306e\u5229\u70b9\u3068\u6ce8\u610f\u70b9","text":""},{"location":"orm_mapper_implementation/#41","title":"4.1 \u5229\u70b9","text":"<ol> <li> <p>\u30c9\u30e1\u30a4\u30f3\u30ed\u30b8\u30c3\u30af\u3068\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u306e\u5206\u96e2: ORM\u30de\u30c3\u30d1\u30fc\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30c9\u30e1\u30a4\u30f3\u30ed\u30b8\u30c3\u30af\u3068\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u306e\u95a2\u5fc3\u4e8b\u3092\u660e\u78ba\u306b\u5206\u96e2\u3067\u304d\u307e\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u8a73\u7d30\u3092\u77e5\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u7d14\u7c8b\u306a\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002</p> </li> <li> <p>\u30ea\u30dd\u30b8\u30c8\u30ea\u30d1\u30bf\u30fc\u30f3\u306e\u5b9f\u88c5: \u30ea\u30dd\u30b8\u30c8\u30ea\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u62bd\u8c61\u5316\u3057\u3001\u5b9f\u88c5\u306e\u8a73\u7d30\u3092\u96a0\u853d\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30c6\u30b9\u30c8\u304c\u5bb9\u6613\u306b\u306a\u308a\u3001\u5c06\u6765\u7684\u306a\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306e\u5909\u66f4\u306b\u3082\u67d4\u8edf\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002</p> </li> <li> <p>\u578b\u5b89\u5168\u6027: Go\u306e\u9759\u7684\u578b\u30b7\u30b9\u30c6\u30e0\u3092\u6d3b\u7528\u3057\u3066\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u578b\u5b89\u5168\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> </li> <li> <p>\u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8: GORM\u306e\u6a5f\u80fd\u3092\u5229\u7528\u3057\u3066\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u8ad6\u7406\u524a\u9664\uff08\u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8\uff09\u3092\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002</p> </li> </ol>"},{"location":"orm_mapper_implementation/#42","title":"4.2 \u6ce8\u610f\u70b9","text":"<ol> <li> <p>\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9: ORM\u30de\u30c3\u30d1\u30fc\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\u306e\u5909\u63db\u306b\u3088\u308b\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u767a\u751f\u3057\u307e\u3059\u3002\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u91cd\u8981\u306a\u5834\u5408\u306f\u3001\u30af\u30a8\u30ea\u306e\u6700\u9069\u5316\u3084\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u751f\u306eSQL\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u691c\u8a0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> </li> <li> <p>\u8907\u96d1\u306a\u30af\u30a8\u30ea: \u8907\u96d1\u306a\u30af\u30a8\u30ea\u3084\u96c6\u8a08\u30af\u30a8\u30ea\u306a\u3069\u306f\u3001ORM\u3067\u306f\u8868\u73fe\u3057\u306b\u304f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u5c02\u7528\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3001\u751f\u306eSQL\u3084GORM\u306e\u9ad8\u5ea6\u306a\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> </li> <li> <p>N+1\u554f\u984c: \u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u6301\u3064\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u53d6\u5f97\u3059\u308b\u969b\u306b\u3001N+1\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002GORM\u306ePreload\u3084Joins\u306a\u3069\u306e\u6a5f\u80fd\u3092\u9069\u5207\u306b\u4f7f\u7528\u3057\u3066\u3001\u3053\u306e\u554f\u984c\u3092\u56de\u907f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> </li> <li> <p>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406: \u8907\u6570\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u307e\u305f\u304c\u308b\u64cd\u4f5c\u3092\u884c\u3046\u5834\u5408\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002GORM\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u6a5f\u80fd\u3092\u4f7f\u7528\u3057\u3066\u3001\u4e00\u8cab\u6027\u3092\u4fdd\u3064\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> </li> </ol>"},{"location":"orm_mapper_implementation/#5","title":"5. \u307e\u3068\u3081","text":"<p>ORM\u30de\u30c3\u30d1\u30fc\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306b\u304a\u3044\u3066\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u3068\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ec\u30a4\u30e4\u30fc\u3092\u6a4b\u6e21\u3057\u3059\u308b\u91cd\u8981\u306a\u5f79\u5272\u3092\u679c\u305f\u3057\u307e\u3059\u3002\u9069\u5207\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u3001\u30c9\u30e1\u30a4\u30f3\u30ed\u30b8\u30c3\u30af\u3068\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u306e\u95a2\u5fc3\u4e8b\u3092\u5206\u96e2\u3057\u3001\u30c6\u30b9\u30c8\u53ef\u80fd\u3067\u4fdd\u5b88\u6027\u306e\u9ad8\u3044\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>Go\u8a00\u8a9e\u3068GORM\u3092\u4f7f\u7528\u3057\u305fORM\u30de\u30c3\u30d1\u30fc\u306e\u5b9f\u88c5\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u30dd\u30a4\u30f3\u30c8\u306b\u6ce8\u610f\u3059\u308b\u3053\u3068\u304c\u91cd\u8981\u3067\u3059\uff1a</p> <ol> <li>\u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\u3092\u660e\u78ba\u306b\u5206\u96e2\u3059\u308b</li> <li>\u30de\u30c3\u30d1\u30fc\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001\u4e21\u8005\u306e\u5909\u63db\u3092\u884c\u3046</li> <li>\u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u901a\u3058\u3066\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u3068\u3084\u308a\u53d6\u308a\u3059\u308b</li> <li>\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u9069\u5207\u306b\u884c\u3044\u3001\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u306b\u610f\u5473\u306e\u3042\u308b\u30a8\u30e9\u30fc\u3092\u8fd4\u3059</li> <li>\u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8\u306a\u3069\u306e\u6a2a\u65ad\u7684\u306a\u95a2\u5fc3\u4e8b\u3092\u9069\u5207\u306b\u5b9f\u88c5\u3059\u308b</li> </ol> <p>\u3053\u308c\u3089\u306e\u30dd\u30a4\u30f3\u30c8\u3092\u62bc\u3055\u3048\u308b\u3053\u3068\u3067\u3001\u30af\u30ea\u30fc\u30f3\u3067\u4fdd\u5b88\u6027\u306e\u9ad8\u3044ORM\u30de\u30c3\u30d1\u30fc\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"product_implementation/","title":"Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u5546\u54c1\u7ba1\u7406\u6a5f\u80fd\u306e\u5b9f\u88c5\u624b\u9806","text":""},{"location":"product_implementation/#1","title":"1. \u6982\u8981","text":"<p>\u3053\u306e\u6587\u66f8\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308b\u5546\u54c1\u7ba1\u7406\u6a5f\u80fd\u306e\u5b9f\u88c5\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\u5b9f\u88c5\u306f\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\uff08DDD\uff09\u306e\u539f\u5247\u306b\u5f93\u3044\u3001\u30ec\u30a4\u30e4\u30fc\u30c9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p>"},{"location":"product_implementation/#11","title":"1.1 \u5546\u54c1\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb","text":"<p>\u4ee5\u4e0b\u306f\u5546\u54c1\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u8868\u3059\u30b9\u30c6\u30fc\u30c8\u56f3\u3067\u3059\uff1a</p> <p></p>"},{"location":"product_implementation/#2","title":"2. \u5b9f\u88c5\u30b9\u30c6\u30c3\u30d7","text":"<p>\u4ee5\u4e0b\u306f\u5546\u54c1\u7ba1\u7406\u6a5f\u80fd\u306e\u5b9f\u88c5\u30b9\u30c6\u30c3\u30d7\u306e\u6982\u8981\u3092\u8868\u3059\u30d5\u30ed\u30fc\u56f3\u3067\u3059\uff1a</p> <p></p>"},{"location":"product_implementation/#21","title":"2.1 \u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u306e\u5b9f\u88c5","text":""},{"location":"product_implementation/#211","title":"2.1.1 \u5546\u54c1\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u4f5c\u6210","text":"<ol> <li><code>internal/domain/entities/product.go</code> \u306b\u5546\u54c1\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package entities\n\nimport (\n    \"time\"\n    \"errors\"\n)\n\ntype Product struct {\n    Id          string\n    Name        string\n    Description string\n    Price       float64\n    SellerId    string\n    CreatedAt   time.Time\n    UpdatedAt   time.Time\n}\n\nfunc (p *Product) Validate() error {\n    if p.Name == \"\" {\n        return errors.New(\"product name cannot be empty\")\n    }\n    if p.Price &lt;= 0 {\n        return errors.New(\"product price must be greater than zero\")\n    }\n    if p.SellerId == \"\" {\n        return errors.New(\"product must have a seller\")\n    }\n    return nil\n}\n</code></pre>"},{"location":"product_implementation/#212","title":"2.1.2 \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u6e08\u307f\u5546\u54c1\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u4f5c\u6210","text":"<ol> <li><code>internal/domain/entities/validated_product.go</code> \u306b\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u6e08\u307f\u5546\u54c1\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package entities\n\ntype ValidatedProduct struct {\n    Product Product\n}\n\nfunc NewValidatedProduct(product Product) (*ValidatedProduct, error) {\n    if err := product.Validate(); err != nil {\n        return nil, err\n    }\n    return &amp;ValidatedProduct{Product: product}, nil\n}\n</code></pre>"},{"location":"product_implementation/#213","title":"2.1.3 \u5546\u54c1\u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5b9a\u7fa9","text":"<ol> <li><code>internal/domain/repositories/product_repository.go</code> \u306b\u5546\u54c1\u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package repositories\n\nimport (\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n)\n\ntype ProductRepository interface {\n    Save(product entities.Product) error\n    FindAll() ([]entities.Product, error)\n    ById(id string) (entities.Product, error)\n    Update(product entities.Product) error\n}\n</code></pre>"},{"location":"product_implementation/#22","title":"2.2 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306e\u5b9f\u88c5","text":""},{"location":"product_implementation/#221","title":"2.2.1 \u5546\u54c1\u30b3\u30de\u30f3\u30c9\u306e\u4f5c\u6210","text":"<ol> <li><code>internal/application/command/product_commands.go</code> \u306b\u5546\u54c1\u30b3\u30de\u30f3\u30c9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package command\n\ntype CreateProductCommand struct {\n    Name        string\n    Description string\n    Price       float64\n    SellerId    string\n}\n\ntype UpdateProductCommand struct {\n    Id          string\n    Name        string\n    Description string\n    Price       float64\n}\n</code></pre>"},{"location":"product_implementation/#222","title":"2.2.2 \u5546\u54c1\u30af\u30a8\u30ea\u306e\u4f5c\u6210","text":"<ol> <li><code>internal/application/query/product_queries.go</code> \u306b\u5546\u54c1\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package query\n\ntype FindAllProductsQuery struct {}\n\ntype FindProductByIdQuery struct {\n    Id string\n}\n</code></pre>"},{"location":"product_implementation/#223","title":"2.2.3 \u5546\u54c1\u30b5\u30fc\u30d3\u30b9\u306e\u5b9f\u88c5","text":"<ol> <li><code>internal/application/services/product_service.go</code> \u306b\u5546\u54c1\u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package services\n\nimport (\n    \"errors\"\n    \"time\"\n    \"github.com/google/uuid\"\n    \"github.com/sklinkert/go-ddd/internal/application/command\"\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n    \"github.com/sklinkert/go-ddd/internal/domain/repositories\"\n)\n\ntype ProductService struct {\n    productRepo repositories.ProductRepository\n    sellerRepo  repositories.SellerRepository\n}\n\nfunc NewProductService(productRepo repositories.ProductRepository, sellerRepo repositories.SellerRepository) *ProductService {\n    return &amp;ProductService{\n        productRepo: productRepo,\n        sellerRepo:  sellerRepo,\n    }\n}\n\nfunc (s *ProductService) Create(cmd command.CreateProductCommand) (entities.Product, error) {\n    // \u51fa\u54c1\u8005\u306e\u5b58\u5728\u78ba\u8a8d\n    _, err := s.sellerRepo.ById(cmd.SellerId)\n    if err != nil {\n        return entities.Product{}, errors.New(\"seller not found\")\n    }\n\n    // \u5546\u54c1\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u4f5c\u6210\n    now := time.Now()\n    product := entities.Product{\n        Id:          uuid.New().String(),\n        Name:        cmd.Name,\n        Description: cmd.Description,\n        Price:       cmd.Price,\n        SellerId:    cmd.SellerId,\n        CreatedAt:   now,\n        UpdatedAt:   now,\n    }\n\n    // \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n    if _, err := entities.NewValidatedProduct(product); err != nil {\n        return entities.Product{}, err\n    }\n\n    // \u4fdd\u5b58\n    if err := s.productRepo.Save(product); err != nil {\n        return entities.Product{}, err\n    }\n\n    return product, nil\n}\n\nfunc (s *ProductService) FindAll() ([]entities.Product, error) {\n    return s.productRepo.FindAll()\n}\n\nfunc (s *ProductService) ById(id string) (entities.Product, error) {\n    return s.productRepo.ById(id)\n}\n\nfunc (s *ProductService) Update(cmd command.UpdateProductCommand) (entities.Product, error) {\n    // \u65e2\u5b58\u306e\u5546\u54c1\u3092\u53d6\u5f97\n    product, err := s.productRepo.ById(cmd.Id)\n    if err != nil {\n        return entities.Product{}, err\n    }\n\n    // \u5546\u54c1\u3092\u66f4\u65b0\n    product.Name = cmd.Name\n    product.Description = cmd.Description\n    product.Price = cmd.Price\n    product.UpdatedAt = time.Now()\n\n    // \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n    if _, err := entities.NewValidatedProduct(product); err != nil {\n        return entities.Product{}, err\n    }\n\n    // \u4fdd\u5b58\n    if err := s.productRepo.Update(product); err != nil {\n        return entities.Product{}, err\n    }\n\n    return product, nil\n}\n</code></pre>"},{"location":"product_implementation/#23","title":"2.3 \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ec\u30a4\u30e4\u30fc\u306e\u5b9f\u88c5","text":""},{"location":"product_implementation/#231-postgresql","title":"2.3.1 \u5546\u54c1\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5b9f\u88c5\uff08PostgreSQL\uff09","text":"<ol> <li><code>internal/infrastructure/db/postgres/product_repository.go</code> \u306b\u5546\u54c1\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5b9f\u88c5\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package postgres\n\nimport (\n    \"errors\"\n    \"gorm.io/gorm\"\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n)\n\ntype GormProductRepository struct {\n    db *gorm.DB\n}\n\nfunc NewGormProductRepository(db *gorm.DB) *GormProductRepository {\n    return &amp;GormProductRepository{db: db}\n}\n\nfunc (r *GormProductRepository) Save(product entities.Product) error {\n    dbProduct := toDBProduct(product)\n    result := r.db.Create(&amp;dbProduct)\n    return result.Error\n}\n\nfunc (r *GormProductRepository) FindAll() ([]entities.Product, error) {\n    var dbProducts []DBProduct\n    result := r.db.Find(&amp;dbProducts)\n    if result.Error != nil {\n        return nil, result.Error\n    }\n\n    products := make([]entities.Product, len(dbProducts))\n    for i, dbProduct := range dbProducts {\n        products[i] = toDomainProduct(dbProduct)\n    }\n    return products, nil\n}\n\nfunc (r *GormProductRepository) ById(id string) (entities.Product, error) {\n    var dbProduct DBProduct\n    result := r.db.First(&amp;dbProduct, \"id = ?\", id)\n    if result.Error != nil {\n        if errors.Is(result.Error, gorm.ErrRecordNotFound) {\n            return entities.Product{}, errors.New(\"product not found\")\n        }\n        return entities.Product{}, result.Error\n    }\n    return toDomainProduct(dbProduct), nil\n}\n\nfunc (r *GormProductRepository) Update(product entities.Product) error {\n    dbProduct := toDBProduct(product)\n    result := r.db.Save(&amp;dbProduct)\n    return result.Error\n}\n</code></pre>"},{"location":"product_implementation/#232","title":"2.3.2 \u5546\u54c1\u30de\u30c3\u30d1\u30fc\u306e\u5b9f\u88c5","text":"<ol> <li><code>internal/infrastructure/db/postgres/product_mapper.go</code> \u306b\u5546\u54c1\u30de\u30c3\u30d1\u30fc\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package postgres\n\nimport (\n    \"time\"\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n)\n\ntype DBProduct struct {\n    ID          string `gorm:\"primaryKey\"`\n    Name        string\n    Description string\n    Price       float64\n    SellerID    string\n    CreatedAt   time.Time\n    UpdatedAt   time.Time\n    DeletedAt   *time.Time `gorm:\"index\"`\n}\n\nfunc (DBProduct) TableName() string {\n    return \"products\"\n}\n\nfunc toDBProduct(product entities.Product) DBProduct {\n    return DBProduct{\n        ID:          product.Id,\n        Name:        product.Name,\n        Description: product.Description,\n        Price:       product.Price,\n        SellerID:    product.SellerId,\n        CreatedAt:   product.CreatedAt,\n        UpdatedAt:   product.UpdatedAt,\n    }\n}\n\nfunc toDomainProduct(dbProduct DBProduct) entities.Product {\n    return entities.Product{\n        Id:          dbProduct.ID,\n        Name:        dbProduct.Name,\n        Description: dbProduct.Description,\n        Price:       dbProduct.Price,\n        SellerId:    dbProduct.SellerID,\n        CreatedAt:   dbProduct.CreatedAt,\n        UpdatedAt:   dbProduct.UpdatedAt,\n    }\n}\n</code></pre>"},{"location":"product_implementation/#24","title":"2.4 \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc\u306e\u5b9f\u88c5","text":""},{"location":"product_implementation/#241","title":"2.4.1 \u5546\u54c1\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5b9f\u88c5","text":"<ol> <li><code>internal/interface/api/rest/product_controller.go</code> \u306b\u5546\u54c1\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package rest\n\nimport (\n    \"net/http\"\n    \"time\"\n    \"github.com/labstack/echo/v4\"\n    \"github.com/sklinkert/go-ddd/internal/application/command\"\n    \"github.com/sklinkert/go-ddd/internal/application/services\"\n)\n\ntype ProductController struct {\n    productService *services.ProductService\n}\n\nfunc NewProductController(e *echo.Echo, productService *services.ProductService) {\n    controller := &amp;ProductController{\n        productService: productService,\n    }\n\n    api := e.Group(\"/api/v1\")\n    api.POST(\"/products\", controller.Create)\n    api.GET(\"/products\", controller.FindAll)\n    api.GET(\"/products/:id\", controller.ById)\n    api.PUT(\"/products/:id\", controller.Update)\n}\n\ntype CreateProductRequest struct {\n    Name        string  `json:\"name\"`\n    Description string  `json:\"description\"`\n    Price       float64 `json:\"price\"`\n    SellerId    string  `json:\"sellerId\"`\n}\n\ntype ProductResponse struct {\n    Id          string  `json:\"id\"`\n    Name        string  `json:\"name\"`\n    Description string  `json:\"description\"`\n    Price       float64 `json:\"price\"`\n    SellerId    string  `json:\"sellerId\"`\n    CreatedAt   string  `json:\"createdAt\"`\n    UpdatedAt   string  `json:\"updatedAt\"`\n}\n\nfunc (ctrl *ProductController) Create(c echo.Context) error {\n    var req CreateProductRequest\n    if err := c.Bind(&amp;req); err != nil {\n        return c.JSON(http.StatusBadRequest, map[string]string{\"error\": err.Error()})\n    }\n\n    cmd := command.CreateProductCommand{\n        Name:        req.Name,\n        Description: req.Description,\n        Price:       req.Price,\n        SellerId:    req.SellerId,\n    }\n\n    product, err := ctrl.productService.Create(cmd)\n    if err != nil {\n        return c.JSON(http.StatusBadRequest, map[string]string{\"error\": err.Error()})\n    }\n\n    resp := ProductResponse{\n        Id:          product.Id,\n        Name:        product.Name,\n        Description: product.Description,\n        Price:       product.Price,\n        SellerId:    product.SellerId,\n        CreatedAt:   product.CreatedAt.Format(time.RFC3339),\n        UpdatedAt:   product.UpdatedAt.Format(time.RFC3339),\n    }\n\n    return c.JSON(http.StatusCreated, resp)\n}\n\nfunc (ctrl *ProductController) FindAll(c echo.Context) error {\n    products, err := ctrl.productService.FindAll()\n    if err != nil {\n        return c.JSON(http.StatusInternalServerError, map[string]string{\"error\": err.Error()})\n    }\n\n    var resp []ProductResponse\n    for _, product := range products {\n        resp = append(resp, ProductResponse{\n            Id:          product.Id,\n            Name:        product.Name,\n            Description: product.Description,\n            Price:       product.Price,\n            SellerId:    product.SellerId,\n            CreatedAt:   product.CreatedAt.Format(time.RFC3339),\n            UpdatedAt:   product.UpdatedAt.Format(time.RFC3339),\n        })\n    }\n\n    return c.JSON(http.StatusOK, resp)\n}\n\nfunc (ctrl *ProductController) ById(c echo.Context) error {\n    id := c.Param(\"id\")\n    product, err := ctrl.productService.ById(id)\n    if err != nil {\n        return c.JSON(http.StatusNotFound, map[string]string{\"error\": err.Error()})\n    }\n\n    resp := ProductResponse{\n        Id:          product.Id,\n        Name:        product.Name,\n        Description: product.Description,\n        Price:       product.Price,\n        SellerId:    product.SellerId,\n        CreatedAt:   product.CreatedAt.Format(time.RFC3339),\n        UpdatedAt:   product.UpdatedAt.Format(time.RFC3339),\n    }\n\n    return c.JSON(http.StatusOK, resp)\n}\n\nfunc (ctrl *ProductController) Update(c echo.Context) error {\n    id := c.Param(\"id\")\n    var req CreateProductRequest\n    if err := c.Bind(&amp;req); err != nil {\n        return c.JSON(http.StatusBadRequest, map[string]string{\"error\": err.Error()})\n    }\n\n    cmd := command.UpdateProductCommand{\n        Id:          id,\n        Name:        req.Name,\n        Description: req.Description,\n        Price:       req.Price,\n    }\n\n    product, err := ctrl.productService.Update(cmd)\n    if err != nil {\n        return c.JSON(http.StatusBadRequest, map[string]string{\"error\": err.Error()})\n    }\n\n    resp := ProductResponse{\n        Id:          product.Id,\n        Name:        product.Name,\n        Description: product.Description,\n        Price:       product.Price,\n        SellerId:    product.SellerId,\n        CreatedAt:   product.CreatedAt.Format(time.RFC3339),\n        UpdatedAt:   product.UpdatedAt.Format(time.RFC3339),\n    }\n\n    return c.JSON(http.StatusOK, resp)\n}\n</code></pre>"},{"location":"product_implementation/#25","title":"2.5 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8d77\u52d5\u8a2d\u5b9a","text":"<ol> <li><code>cmd/marketplace/main.go</code> \u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8d77\u52d5\u8a2d\u5b9a\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package main\n\nimport (\n    _ \"github.com/jinzhu/gorm/dialects/postgres\"\n    \"github.com/labstack/echo/v4\"\n    \"github.com/sklinkert/go-ddd/internal/application/services\"\n    postgres2 \"github.com/sklinkert/go-ddd/internal/infrastructure/db/postgres\"\n    \"github.com/sklinkert/go-ddd/internal/interface/api/rest\"\n    \"gorm.io/driver/postgres\"\n    \"gorm.io/gorm\"\n    \"log\"\n)\n\nfunc main() {\n    dsn := \"host=localhost user=root password=password dbname=mydb port=9920 sslmode=disable TimeZone=Asia/Shanghai\"\n    port := \":9090\"\n\n    gormDB, err := gorm.Open(postgres.Open(dsn), &amp;gorm.Config{})\n    if err != nil {\n        log.Fatalf(\"Failed to connect to database: %v\", err)\n    }\n\n    // \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\n    gormDB.AutoMigrate(&amp;postgres2.DBProduct{}, &amp;postgres2.DBSeller{})\n\n    // \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u521d\u671f\u5316\n    productRepo := postgres2.NewGormProductRepository(gormDB)\n    sellerRepo := postgres2.NewGormSellerRepository(gormDB)\n\n    // \u30b5\u30fc\u30d3\u30b9\u306e\u521d\u671f\u5316\n    productService := services.NewProductService(productRepo, sellerRepo)\n    sellerService := services.NewSellerService(sellerRepo)\n\n    // Echo\u30b5\u30fc\u30d0\u30fc\u306e\u521d\u671f\u5316\n    e := echo.New()\n\n    // \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u521d\u671f\u5316\n    rest.NewProductController(e, productService)\n    rest.NewSellerController(e, sellerService)\n\n    // \u30b5\u30fc\u30d0\u30fc\u306e\u8d77\u52d5\n    if err := e.Start(port); err != nil {\n        log.Fatalf(\"Failed to start server: %v\", err)\n    }\n}\n</code></pre>"},{"location":"product_implementation/#3","title":"3. \u30c6\u30b9\u30c8","text":"<p>\u5404\u30ec\u30a4\u30e4\u30fc\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u5bfe\u3057\u3066\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u91cd\u8981\u3067\u3059\u3002\u4ee5\u4e0b\u306f\u5546\u54c1\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30c6\u30b9\u30c8\u4f8b\u3067\u3059\u3002</p> <pre><code>package entities\n\nimport (\n    \"testing\"\n    \"time\"\n)\n\nfunc TestProduct_Validate(t *testing.T) {\n    tests := []struct {\n        name    string\n        product Product\n        wantErr bool\n    }{\n        {\n            name: \"valid product\",\n            product: Product{\n                Id:          \"1\",\n                Name:        \"Test Product\",\n                Description: \"Test Description\",\n                Price:       100.0,\n                SellerId:    \"1\",\n                CreatedAt:   time.Now(),\n                UpdatedAt:   time.Now(),\n            },\n            wantErr: false,\n        },\n        {\n            name: \"empty name\",\n            product: Product{\n                Id:          \"1\",\n                Name:        \"\",\n                Description: \"Test Description\",\n                Price:       100.0,\n                SellerId:    \"1\",\n                CreatedAt:   time.Now(),\n                UpdatedAt:   time.Now(),\n            },\n            wantErr: true,\n        },\n        {\n            name: \"zero price\",\n            product: Product{\n                Id:          \"1\",\n                Name:        \"Test Product\",\n                Description: \"Test Description\",\n                Price:       0.0,\n                SellerId:    \"1\",\n                CreatedAt:   time.Now(),\n                UpdatedAt:   time.Now(),\n            },\n            wantErr: true,\n        },\n        {\n            name: \"empty seller id\",\n            product: Product{\n                Id:          \"1\",\n                Name:        \"Test Product\",\n                Description: \"Test Description\",\n                Price:       100.0,\n                SellerId:    \"\",\n                CreatedAt:   time.Now(),\n                UpdatedAt:   time.Now(),\n            },\n            wantErr: true,\n        },\n    }\n\n    for _, tt := range tests {\n        t.Run(tt.name, func(t *testing.T) {\n            if err := tt.product.Validate(); (err != nil) != tt.wantErr {\n                t.Errorf(\"Product.Validate() error = %v, wantErr %v\", err, tt.wantErr)\n            }\n        })\n    }\n}\n</code></pre>"},{"location":"product_implementation/#4","title":"4. \u307e\u3068\u3081","text":"<p>\u3053\u306e\u5b9f\u88c5\u624b\u9806\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5546\u54c1\u7ba1\u7406\u6a5f\u80fd\u3092\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u539f\u5247\u306b\u5f93\u3063\u3066\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\u5404\u30ec\u30a4\u30e4\u30fc\uff08\u30c9\u30e1\u30a4\u30f3\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\uff09\u306e\u5f79\u5272\u3068\u5b9f\u88c5\u65b9\u6cd5\u3092\u793a\u3057\u3001\u30af\u30ea\u30fc\u30f3\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>\u3053\u306e\u5b9f\u88c5\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u660e\u78ba\u306b\u5206\u96e2\u3057\u3001\u30c6\u30b9\u30c8\u53ef\u80fd\u3067\u4fdd\u5b88\u6027\u306e\u9ad8\u3044\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u65b0\u3057\u3044\u6a5f\u80fd\u306e\u8ffd\u52a0\u3084\u65e2\u5b58\u6a5f\u80fd\u306e\u5909\u66f4\u304c\u5bb9\u6613\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"release_plan/","title":"Go-DDD \u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30ea\u30ea\u30fc\u30b9\u30d7\u30e9\u30f3","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ea\u30ea\u30fc\u30b9\u30d7\u30e9\u30f3\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002</p>"},{"location":"release_plan/#1","title":"1. \u30ea\u30ea\u30fc\u30b9\u30d7\u30e9\u30f3\u6982\u8981","text":"<p>\u30ea\u30ea\u30fc\u30b9\u30d7\u30e9\u30f3\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u3092\u8907\u6570\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u5206\u5272\u3057\u3001\u5404\u30ea\u30ea\u30fc\u30b9\u3067\u5b9f\u88c5\u3059\u308b\u6a5f\u80fd\u3092\u5b9a\u7fa9\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u3053\u306e\u30d7\u30e9\u30f3\u306b\u5f93\u3063\u3066\u6bb5\u968e\u7684\u306b\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u3066\u3044\u304d\u307e\u3059\u3002</p> <pre><code>gantt\n    title Go-DDD \u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30ea\u30ea\u30fc\u30b9\u30d7\u30e9\u30f3\n    dateFormat  YYYY-MM-DD\n    section \u30ea\u30ea\u30fc\u30b9\n    \u30ea\u30ea\u30fc\u30b91: MVP        :r1, 2025-04-01, 6w\n    \u30ea\u30ea\u30fc\u30b92: \u62e1\u5f35\u6a5f\u80fd    :r2, 2025-05-13, 6w\n    \u30ea\u30ea\u30fc\u30b93: \u9ad8\u5ea6\u306a\u6a5f\u80fd   :r3, 2025-06-24, 4w</code></pre>"},{"location":"release_plan/#2","title":"2. \u30ea\u30ea\u30fc\u30b9\u8a73\u7d30","text":""},{"location":"release_plan/#21-1-mvp","title":"2.1 \u30ea\u30ea\u30fc\u30b91: \u57fa\u672c\u6a5f\u80fd\uff08MVP\uff09","text":"<p>\u76ee\u6a19: \u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u306e\u57fa\u672c\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u3001\u6700\u5c0f\u9650\u306e\u6a5f\u80fd\u3067\u52d5\u4f5c\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30ea\u30ea\u30fc\u30b9\u3059\u308b\u3002</p> <p>\u671f\u9593: 6\u9031\u9593\uff083\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\uff09</p> <p>\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc: - \u5546\u54c1\u306e\u4f5c\u6210 (1) - \u5546\u54c1\u306e\u691c\u7d22 (2) - \u5546\u54c1\u306e\u8a73\u7d30\u53d6\u5f97 (3) - \u51fa\u54c1\u8005\u306e\u4f5c\u6210 (9) - \u51fa\u54c1\u8005\u306e\u691c\u7d22 (10) - \u51fa\u54c1\u8005\u306e\u8a73\u7d30\u53d6\u5f97 (11) - RESTful API (16) - \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0 (18) - \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u7ba1\u7406 (19) - \u30c6\u30b9\u30c8 (21)</p> <p>\u6210\u679c\u7269: - \u57fa\u672c\u7684\u306a\u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\uff08Product, Seller\uff09 - \u57fa\u672c\u7684\u306a\u30ea\u30dd\u30b8\u30c8\u30ea\u5b9f\u88c5 - \u57fa\u672c\u7684\u306aAPI\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 - \u57fa\u672c\u7684\u306a\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0</p>"},{"location":"release_plan/#22-2","title":"2.2 \u30ea\u30ea\u30fc\u30b92: \u62e1\u5f35\u6a5f\u80fd","text":"<p>\u76ee\u6a19: \u57fa\u672c\u6a5f\u80fd\u3092\u62e1\u5f35\u3057\u3001\u3088\u308a\u4f7f\u3044\u3084\u3059\u3044\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u3092\u5b9f\u73fe\u3059\u308b\u3002</p> <p>\u671f\u9593: 6\u9031\u9593\uff083\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\uff09</p> <p>\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc: - \u5546\u54c1\u306e\u66f4\u65b0 (4) - \u5546\u54c1\u306e\u691c\u8a3c (5) - \u5546\u54c1\u3068\u51fa\u54c1\u8005\u306e\u95a2\u9023\u4ed8\u3051 (6) - \u51fa\u54c1\u8005\u306e\u66f4\u65b0 (12) - \u51fa\u54c1\u8005\u306e\u691c\u8a3c (14) - DTO\u3068\u30de\u30c3\u30d1\u30fc (17)</p> <p>\u6210\u679c\u7269: - \u62e1\u5f35\u3055\u308c\u305fAPI\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 - \u5f37\u5316\u3055\u308c\u305f\u691c\u8a3c\u6a5f\u80fd - DTO\u3068\u30de\u30c3\u30d1\u30fc\u306e\u5b9f\u88c5 - \u6539\u5584\u3055\u308c\u305fAPI\u30ec\u30b9\u30dd\u30f3\u30b9</p>"},{"location":"release_plan/#23-3","title":"2.3 \u30ea\u30ea\u30fc\u30b93: \u9ad8\u5ea6\u306a\u6a5f\u80fd","text":"<p>\u76ee\u6a19: \u9ad8\u5ea6\u306a\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u3001\u5b8c\u5168\u306a\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u73fe\u3059\u308b\u3002</p> <p>\u671f\u9593: 4\u9031\u9593\uff082\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\uff09</p> <p>\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc: - \u5b58\u5728\u3057\u306a\u3044\u51fa\u54c1\u8005\u306e\u30a8\u30e9\u30fc\u51e6\u7406 (7) - \u5546\u54c1\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306e404\u30ec\u30b9\u30dd\u30f3\u30b9 (8) - \u51fa\u54c1\u8005\u306e\u524a\u9664 (13) - \u51fa\u54c1\u8005\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306e404\u30ec\u30b9\u30dd\u30f3\u30b9 (15) - \u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8 (20)</p> <p>\u6210\u679c\u7269: - \u5f37\u5316\u3055\u308c\u305f\u30a8\u30e9\u30fc\u51e6\u7406 - \u524a\u9664\u6a5f\u80fd\u306e\u5b9f\u88c5 - \u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8\u6a5f\u80fd\u306e\u5b9f\u88c5 - \u5b8c\u5168\u306a\u30c6\u30b9\u30c8\u30ab\u30d0\u30ec\u30c3\u30b8</p>"},{"location":"release_plan/#3","title":"3. \u30ea\u30ea\u30fc\u30b9\u57fa\u6e96","text":"<p>\u5404\u30ea\u30ea\u30fc\u30b9\u306f\u4ee5\u4e0b\u306e\u57fa\u6e96\u3092\u6e80\u305f\u3057\u305f\u5834\u5408\u306b\u306e\u307f\u5b9f\u65bd\u3055\u308c\u307e\u3059\uff1a</p> <ol> <li>\u6a5f\u80fd\u5b8c\u4e86: \u8a08\u753b\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u6a5f\u80fd\u304c\u5b9f\u88c5\u5b8c\u4e86\u3057\u3066\u3044\u308b</li> <li>\u30c6\u30b9\u30c8\u5b8c\u4e86: \u3059\u3079\u3066\u306e\u30c6\u30b9\u30c8\u304c\u6210\u529f\u3057\u3066\u3044\u308b</li> <li>\u30b3\u30fc\u30c9\u30ec\u30d3\u30e5\u30fc\u5b8c\u4e86: \u3059\u3079\u3066\u306e\u30b3\u30fc\u30c9\u304c\u30ec\u30d3\u30e5\u30fc\u3055\u308c\u3066\u3044\u308b</li> <li>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5b8c\u4e86: \u5fc5\u8981\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u308b</li> </ol>"},{"location":"release_plan/#4","title":"4. \u30ea\u30b9\u30af\u7ba1\u7406","text":"<p>\u30ea\u30ea\u30fc\u30b9\u30d7\u30e9\u30f3\u306e\u5b9f\u884c\u306b\u3042\u305f\u308a\u3001\u4ee5\u4e0b\u306e\u30ea\u30b9\u30af\u3092\u8a8d\u8b58\u3057\u3001\u5bfe\u7b56\u3092\u8b1b\u3058\u307e\u3059\uff1a</p> \u30ea\u30b9\u30af \u5f71\u97ff\u5ea6 \u767a\u751f\u78ba\u7387 \u5bfe\u7b56 \u6280\u8853\u7684\u306a\u8ab2\u984c\u306b\u3088\u308b\u9045\u5ef6 \u9ad8 \u4e2d \u65e9\u671f\u306e\u30d7\u30ed\u30c8\u30bf\u30a4\u30d4\u30f3\u30b0\u3068\u6280\u8853\u691c\u8a3c \u8981\u4ef6\u306e\u5909\u66f4 \u4e2d \u9ad8 \u30a4\u30c6\u30ec\u30fc\u30c6\u30a3\u30d6\u306a\u958b\u767a\u30a2\u30d7\u30ed\u30fc\u30c1\u3068\u5b9a\u671f\u7684\u306a\u30ec\u30d3\u30e5\u30fc \u30ea\u30bd\u30fc\u30b9\u4e0d\u8db3 \u9ad8 \u4f4e \u4e8b\u524d\u306e\u30ea\u30bd\u30fc\u30b9\u8a08\u753b\u3068\u512a\u5148\u9806\u4f4d\u4ed8\u3051 \u5916\u90e8\u4f9d\u5b58\u95a2\u4fc2\u306e\u554f\u984c \u4e2d \u4e2d \u4f9d\u5b58\u95a2\u4fc2\u306e\u6700\u5c0f\u5316\u3068\u4ee3\u66ff\u624b\u6bb5\u306e\u691c\u8a0e"},{"location":"release_plan/#5","title":"5. \u307e\u3068\u3081","text":"<p>\u3053\u306e\u30ea\u30ea\u30fc\u30b9\u30d7\u30e9\u30f3\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6bb5\u968e\u7684\u306b\u958b\u767a\u3059\u308b\u305f\u3081\u306e\u6307\u91dd\u3067\u3059\u3002\u30ea\u30ea\u30fc\u30b91\u3067\u306f\u6700\u5c0f\u9650\u306e\u6a5f\u80fd\uff08MVP\uff09\u3092\u5b9f\u88c5\u3057\u3001\u30ea\u30ea\u30fc\u30b92\u3001\u30ea\u30ea\u30fc\u30b93\u3067\u6a5f\u80fd\u3092\u62e1\u5f35\u3057\u3066\u3044\u304d\u307e\u3059\u3002</p> <p>\u5404\u30ea\u30ea\u30fc\u30b9\u306f\u660e\u78ba\u306a\u76ee\u6a19\u3068\u5bfe\u8c61\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc\u3092\u6301\u3061\u3001\u6210\u679c\u7269\u3082\u660e\u78ba\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u958b\u767a\u30c1\u30fc\u30e0\u306f\u77ed\u671f\u7684\u306a\u76ee\u6a19\u306b\u96c6\u4e2d\u3057\u306a\u304c\u3089\u3001\u9577\u671f\u7684\u306a\u30d3\u30b8\u30e7\u30f3\u306b\u5411\u304b\u3063\u3066\u9032\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u30ea\u30ea\u30fc\u30b9\u57fa\u6e96\u3068\u30ea\u30b9\u30af\u7ba1\u7406\u3092\u9069\u5207\u306b\u884c\u3046\u3053\u3068\u3067\u3001\u54c1\u8cea\u3092\u78ba\u4fdd\u3057\u306a\u304c\u3089\u52b9\u7387\u7684\u306b\u958b\u767a\u3092\u9032\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002</p>"},{"location":"revision_summary/","title":"\u5909\u66f4\u5c65\u6b74","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001\u30ea\u30d3\u30b8\u30e7\u30f3<code>8cb1b24b48a1cff873f4e0ab64b5097516cb9423</code>\u304b\u3089<code>22b5011459047d6418c9d2a99d4ddf8687498782</code>\u307e\u3067\u306e\u5909\u66f4\u3092\u6642\u7cfb\u5217\u9806\u306b\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002</p>"},{"location":"revision_summary/#2023813","title":"2023\u5e748\u670813\u65e5","text":""},{"location":"revision_summary/#_2","title":"\u6a5f\u80fd\u8ffd\u52a0","text":"<ul> <li>4c991e9 (Simon Klinkert): product creation via command</li> <li>\u30d7\u30ed\u30c0\u30af\u30c8\u4f5c\u6210\u306e\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u6a5f\u80fd\u3092\u5b9f\u88c5</li> <li>146ce60 (Simon Klinkert): have mappers for req-&gt;command</li> <li>\u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089\u30b3\u30de\u30f3\u30c9\u3078\u306e\u30de\u30c3\u30d1\u30fc\u3092\u5b9f\u88c5</li> </ul>"},{"location":"revision_summary/#2024116","title":"2024\u5e741\u670816\u65e5","text":""},{"location":"revision_summary/#_3","title":"\u4f9d\u5b58\u95a2\u4fc2\u306e\u7ba1\u7406","text":"<ul> <li>f684eb4 (Simon Klinkert): Create dependabot.yml</li> <li>Dependabot\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210</li> </ul>"},{"location":"revision_summary/#_4","title":"\u4f9d\u5b58\u95a2\u4fc2\u306e\u66f4\u65b0","text":"<ul> <li>c7ff3af (dependabot[bot]): Bump github.com/labstack/echo/v4 from 4.11.1 to 4.11.4</li> <li>Echo \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092 v4.11.1 \u304b\u3089 v4.11.4 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8</li> <li>d2e06bb (dependabot[bot]): Bump gorm.io/gorm from 1.25.2 to 1.25.5</li> <li>GORM \u3092 1.25.2 \u304b\u3089 1.25.5 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8</li> <li>cb30ef1 (dependabot[bot]): Bump gorm.io/driver/postgres from 1.5.2 to 1.5.4</li> <li>PostgreSQL \u30c9\u30e9\u30a4\u30d0\u30fc\u3092 1.5.2 \u304b\u3089 1.5.4 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8</li> </ul>"},{"location":"revision_summary/#_5","title":"\u30de\u30fc\u30b8","text":"<ul> <li>3fe184c (Simon Klinkert): Merge pull request #5 from sklinkert/dependabot/go_modules/gorm.io/gorm-1.25.5</li> <li>GORM \u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30de\u30fc\u30b8</li> <li>d70413d (Simon Klinkert): Merge pull request #4 from sklinkert/dependabot/go_modules/github.com/labstack/echo/v4-4.11.4</li> <li>Echo \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30de\u30fc\u30b8</li> <li>e2e6518 (Simon Klinkert): Merge pull request #3 from sklinkert/dependabot/go_modules/gorm.io/driver/postgres-1.5.4</li> <li>PostgreSQL \u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30de\u30fc\u30b8</li> </ul>"},{"location":"revision_summary/#2024122","title":"2024\u5e741\u670822\u65e5","text":""},{"location":"revision_summary/#_6","title":"\u4f9d\u5b58\u95a2\u4fc2\u306e\u66f4\u65b0","text":"<ul> <li>d512f12 (dependabot[bot]): Bump gorm.io/driver/sqlite from 1.5.2 to 1.5.4</li> <li>SQLite \u30c9\u30e9\u30a4\u30d0\u30fc\u3092 1.5.2 \u304b\u3089 1.5.4 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8</li> </ul>"},{"location":"revision_summary/#2024129","title":"2024\u5e741\u670829\u65e5","text":""},{"location":"revision_summary/#_7","title":"\u4f9d\u5b58\u95a2\u4fc2\u306e\u66f4\u65b0","text":"<ul> <li>36ff693 (dependabot[bot]): Bump github.com/google/uuid from 1.3.0 to 1.6.0</li> <li>UUID \u30e9\u30a4\u30d6\u30e9\u30ea\u3092 1.3.0 \u304b\u3089 1.6.0 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8</li> </ul>"},{"location":"revision_summary/#2024210","title":"2024\u5e742\u670810\u65e5","text":""},{"location":"revision_summary/#_8","title":"\u30de\u30fc\u30b8","text":"<ul> <li>70920eb (Simon Klinkert): Merge pull request #9 from sklinkert/dependabot/go_modules/github.com/google/uuid-1.6.0</li> <li>UUID \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30de\u30fc\u30b8</li> <li>8f05aff (Simon Klinkert): Merge pull request #6 from sklinkert/dependabot/go_modules/gorm.io/driver/sqlite-1.5.4</li> <li>SQLite \u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30de\u30fc\u30b8</li> </ul>"},{"location":"revision_summary/#_9","title":"\u6a5f\u80fd\u8ffd\u52a0","text":"<ul> <li>5e129f8 (Simon Klinkert): FindAll()</li> <li>FindAll \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5</li> <li>2068d7f (Simon Klinkert): ById()</li> <li>ById \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5</li> </ul>"},{"location":"revision_summary/#2024311","title":"2024\u5e743\u670811\u65e5","text":""},{"location":"revision_summary/#_10","title":"\u4f9d\u5b58\u95a2\u4fc2\u306e\u66f4\u65b0","text":"<ul> <li>851120d (dependabot[bot]): Bump gorm.io/driver/postgres from 1.5.4 to 1.5.7</li> <li>PostgreSQL \u30c9\u30e9\u30a4\u30d0\u30fc\u3092 1.5.4 \u304b\u3089 1.5.7 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8</li> </ul>"},{"location":"revision_summary/#2024314","title":"2024\u5e743\u670814\u65e5","text":""},{"location":"revision_summary/#_11","title":"\u30de\u30fc\u30b8","text":"<ul> <li>6c91853 (Simon Klinkert): Merge pull request #15 from sklinkert/dependabot/go_modules/gorm.io/driver/postgres-1.5.7</li> <li>PostgreSQL \u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30de\u30fc\u30b8</li> <li>31de2ca (Simon Klinkert): Merge pull request #14 from sklinkert/dependabot/go_modules/github.com/stretchr/testify-1.9.0</li> <li>Testify \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30de\u30fc\u30b8</li> <li>cfb019e (Simon Klinkert): Merge pull request #17 from sklinkert/dependabot/go_modules/go_modules-security-group-cf2ebfe372</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u95a2\u9023\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30de\u30fc\u30b8</li> </ul>"},{"location":"revision_summary/#_12","title":"\u4f9d\u5b58\u95a2\u4fc2\u306e\u66f4\u65b0","text":"<ul> <li>8c33d61 (dependabot[bot]): Bump github.com/stretchr/testify from 1.8.4 to 1.9.0</li> <li>Testify \u30e9\u30a4\u30d6\u30e9\u30ea\u3092 1.8.4 \u304b\u3089 1.9.0 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8</li> <li>6f9ac8f (dependabot[bot]): Bump the go_modules group group with 1 update</li> <li>Go \u30e2\u30b8\u30e5\u30fc\u30eb\u30b0\u30eb\u30fc\u30d7\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8</li> </ul>"},{"location":"revision_summary/#202441","title":"2024\u5e744\u67081\u65e5","text":""},{"location":"revision_summary/#_13","title":"\u4f9d\u5b58\u95a2\u4fc2\u306e\u66f4\u65b0","text":"<ul> <li>12e7923 (dependabot[bot]): Bump gorm.io/gorm from 1.25.7-0.20240204074919-46816ad31dde to 1.25.9</li> <li>GORM \u3092 1.25.7 \u304b\u3089 1.25.9 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8</li> </ul>"},{"location":"revision_summary/#2024419","title":"2024\u5e744\u670819\u65e5","text":""},{"location":"revision_summary/#_14","title":"\u4f9d\u5b58\u95a2\u4fc2\u306e\u66f4\u65b0","text":"<ul> <li>c00dd67 (dependabot[bot]): Bump golang.org/x/net from 0.19.0 to 0.23.0 in the go_modules group</li> <li>golang.org/x/net \u3092 0.19.0 \u304b\u3089 0.23.0 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8</li> </ul>"},{"location":"revision_summary/#2024425","title":"2024\u5e744\u670825\u65e5","text":""},{"location":"revision_summary/#_15","title":"\u30de\u30fc\u30b8","text":"<ul> <li>427393c (Simon Klinkert): Merge pull request #22 from sklinkert/dependabot/go_modules/go_modules-b9ac453758</li> <li>Go \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30de\u30fc\u30b8</li> <li>50800ce (Simon Klinkert): Merge pull request #19 from sklinkert/dependabot/go_modules/gorm.io/gorm-1.25.9</li> <li>GORM \u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30de\u30fc\u30b8</li> </ul>"},{"location":"revision_summary/#_16","title":"\u6a5f\u80fd\u6539\u5584","text":"<ul> <li>b23b5ee (Simon Klinkert): product service: return error if seller does not exist in DB</li> <li>\u51fa\u54c1\u8005\u304cDB\u306b\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306b\u30a8\u30e9\u30fc\u3092\u8fd4\u3059\u3088\u3046\u306b\u6539\u5584</li> <li>5b92367 (Simon Klinkert): implement proper seller update</li> <li>\u51fa\u54c1\u8005\u306e\u66f4\u65b0\u6a5f\u80fd\u3092\u9069\u5207\u306b\u5b9f\u88c5</li> <li>05e060c (Simon Klinkert): product service: rename get all -&gt; find all</li> <li>\u30e1\u30bd\u30c3\u30c9\u540d\u3092 get all \u304b\u3089 find all \u306b\u5909\u66f4</li> <li>4819cc7 (Simon Klinkert): product repo: don't return validated products on read methods</li> <li>\u8aad\u307f\u53d6\u308a\u30e1\u30bd\u30c3\u30c9\u3067\u691c\u8a3c\u6e08\u307f\u88fd\u54c1\u3092\u8fd4\u3055\u306a\u3044\u3088\u3046\u306b\u5909\u66f4</li> <li>9c80c91 (Simon Klinkert): seller repo: don't return validated products on read methods</li> <li>\u8aad\u307f\u53d6\u308a\u30e1\u30bd\u30c3\u30c9\u3067\u691c\u8a3c\u6e08\u307f\u51fa\u54c1\u8005\u3092\u8fd4\u3055\u306a\u3044\u3088\u3046\u306b\u5909\u66f4</li> <li>99d254d (Simon Klinkert): application services: return interfaces</li> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d3\u30b9\u304c\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u8fd4\u3059\u3088\u3046\u306b\u5909\u66f4</li> <li>6a4bc8f (Simon Klinkert): no var in the middle of the method</li> <li>\u30e1\u30bd\u30c3\u30c9\u5185\u306e\u5909\u6570\u5ba3\u8a00\u4f4d\u7f6e\u3092\u6539\u5584</li> <li>1bdcb38 (Simon Klinkert): rename controller method</li> <li>\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u30e1\u30bd\u30c3\u30c9\u306e\u540d\u524d\u3092\u5909\u66f4</li> <li>192112a (Simon Klinkert): add 404 response if item wasn't found</li> <li>\u30a2\u30a4\u30c6\u30e0\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306b404\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8ffd\u52a0</li> </ul>"},{"location":"revision_summary/#_17","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li>7fe11b0 (Simon Klinkert): README.md: add best practices section</li> <li>README.md\u306b\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0</li> <li>bb0e718 (Simon Klinkert): README.md: add link</li> <li>README.md\u306b\u30ea\u30f3\u30af\u3092\u8ffd\u52a0</li> <li>b4b83df (Simon Klinkert): README.md: add one more best practice</li> <li>README.md\u306b\u3055\u3089\u306b\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3092\u8ffd\u52a0</li> </ul>"},{"location":"revision_summary/#2024426","title":"2024\u5e744\u670826\u65e5","text":""},{"location":"revision_summary/#_18","title":"\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0","text":"<ul> <li>52e0e1e (Simon Klinkert): repo: make mapper functions private</li> <li>\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30de\u30c3\u30d1\u30fc\u95a2\u6570\u3092\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306b\u5909\u66f4</li> </ul>"},{"location":"revision_summary/#_19","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li>6c6fa55 (Simon Klinkert): README.md: find vs get</li> <li>README.md\u306b\u300cfind vs get\u300d\u306e\u8aac\u660e\u3092\u8ffd\u52a0</li> </ul>"},{"location":"revision_summary/#2024427","title":"2024\u5e744\u670827\u65e5","text":""},{"location":"revision_summary/#_20","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li>d05bc3c (Simon Klinkert): README.md: soft delete</li> <li>README.md\u306b\u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8\u306b\u3064\u3044\u3066\u306e\u8aac\u660e\u3092\u8ffd\u52a0</li> </ul>"},{"location":"revision_summary/#_21","title":"\u6a5f\u80fd\u8ffd\u52a0","text":"<ul> <li>33d3064 (Simon Klinkert): implement update seller controller</li> <li>\u51fa\u54c1\u8005\u66f4\u65b0\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u5b9f\u88c5</li> <li>d60dd5b (Simon Klinkert): implement delete seller controller</li> <li>\u51fa\u54c1\u8005\u524a\u9664\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u5b9f\u88c5</li> <li>42781ad (Simon Klinkert): add tests for getting sellers</li> <li>\u51fa\u54c1\u8005\u53d6\u5f97\u306e\u30c6\u30b9\u30c8\u3092\u8ffd\u52a0</li> <li>ef8e7e0 (Simon Klinkert): prefix controllers with /api/v1</li> <li>\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u30d1\u30b9\u306b /api/v1 \u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u8ffd\u52a0</li> <li>2b38725 (Simon Klinkert): add github.com/labstack/echo/v4/middleware</li> <li>Echo \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u8ffd\u52a0</li> <li>9b6b52e (Simon Klinkert): e.Use(middleware.Recover())</li> <li>\u30ea\u30ab\u30d0\u30ea\u30fc\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f7f\u7528</li> </ul>"},{"location":"revision_summary/#_22","title":"\u4f9d\u5b58\u95a2\u4fc2\u306e\u66f4\u65b0","text":"<ul> <li>4fd0d2d (Simon Klinkert): go mod: update github.com/labstack/echo/v4</li> <li>Echo \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u66f4\u65b0</li> </ul>"},{"location":"revision_summary/#2024429","title":"2024\u5e744\u670829\u65e5","text":""},{"location":"revision_summary/#_23","title":"\u4f9d\u5b58\u95a2\u4fc2\u306e\u66f4\u65b0","text":"<ul> <li>b40e203 (dependabot[bot]): Bump gorm.io/gorm from 1.25.9 to 1.25.10</li> <li>GORM \u3092 1.25.9 \u304b\u3089 1.25.10 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8</li> </ul>"},{"location":"revision_summary/#2024430","title":"2024\u5e744\u670830\u65e5","text":""},{"location":"revision_summary/#_24","title":"\u30de\u30fc\u30b8","text":"<ul> <li>e736139 (Simon Klinkert): Merge pull request #24 from sklinkert/dependabot/go_modules/gorm.io/gorm-1.25.10</li> <li>GORM \u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30de\u30fc\u30b8</li> </ul>"},{"location":"revision_summary/#202451","title":"2024\u5e745\u67081\u65e5","text":""},{"location":"revision_summary/#_25","title":"\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0","text":"<ul> <li>986120b (Simon Klinkert): rest dto package</li> <li>REST DTO\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u6210</li> <li>dbe5131 (Simon Klinkert): product controller: add dto and mapper to not expose domain entities to the outside world</li> <li>\u30d7\u30ed\u30c0\u30af\u30c8\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306bDTO\u3068\u30de\u30c3\u30d1\u30fc\u3092\u8ffd\u52a0\u3057\u3001\u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u5916\u90e8\u306b\u516c\u958b\u3057\u306a\u3044\u3088\u3046\u306b\u5909\u66f4</li> <li>e2206fe (Simon Klinkert): seller controller: add dto and mapper to not expose domain entities to the outside world</li> <li>\u51fa\u54c1\u8005\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306bDTO\u3068\u30de\u30c3\u30d1\u30fc\u3092\u8ffd\u52a0\u3057\u3001\u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u5916\u90e8\u306b\u516c\u958b\u3057\u306a\u3044\u3088\u3046\u306b\u5909\u66f4</li> </ul>"},{"location":"revision_summary/#202454","title":"2024\u5e745\u67084\u65e5","text":""},{"location":"revision_summary/#_26","title":"\u6a5f\u80fd\u8ffd\u52a0","text":"<ul> <li>87bafae (Simon Klinkert): entities: add CreatedAt and UpdatedAt</li> <li>\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306bCreatedAt\u3068UpdatedAt\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8ffd\u52a0</li> <li>a29f10b (Simon Klinkert): Seller.UpdateName()</li> <li>\u51fa\u54c1\u8005\u306e\u540d\u524d\u66f4\u65b0\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5</li> <li>ece20fd (Simon Klinkert): implement product update methods</li> <li>\u30d7\u30ed\u30c0\u30af\u30c8\u66f4\u65b0\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5</li> <li>5ba226f (Simon Klinkert): more validation examples</li> <li>\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u4f8b\u3092\u8ffd\u52a0</li> </ul>"},{"location":"revision_summary/#_27","title":"\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0","text":"<ul> <li>4c59fcd (Simon Klinkert): rename ID -&gt; Id</li> <li>ID\u3092Id\u306b\u30ea\u30cd\u30fc\u30e0</li> <li>59ea1b3 (Simon Klinkert): move createdAt and updatedAt</li> <li>createdAt\u3068updatedAt\u306e\u4f4d\u7f6e\u3092\u79fb\u52d5</li> </ul>"},{"location":"revision_summary/#_28","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li>ad2ebf8 (Simon Klinkert): README.md: add diagram</li> <li>README.md\u306b\u56f3\u3092\u8ffd\u52a0</li> <li>2897d4f (Simon Klinkert): README.md: update diagram</li> <li>README.md\u306e\u56f3\u3092\u66f4\u65b0</li> </ul>"},{"location":"revision_summary/#2024527","title":"2024\u5e745\u670827\u65e5","text":""},{"location":"revision_summary/#_29","title":"\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0","text":"<ul> <li>7dccc21 (Simon Klinkert): rename master to main</li> <li>master\u30d6\u30e9\u30f3\u30c1\u3092main\u306b\u30ea\u30cd\u30fc\u30e0</li> </ul>"},{"location":"revision_summary/#2024617","title":"2024\u5e746\u670817\u65e5","text":""},{"location":"revision_summary/#_30","title":"\u4f9d\u5b58\u95a2\u4fc2\u306e\u66f4\u65b0","text":"<ul> <li>48e118f (dependabot[bot]): Bump gorm.io/driver/postgres from 1.5.7 to 1.5.9</li> <li>PostgreSQL \u30c9\u30e9\u30a4\u30d0\u30fc\u3092 1.5.7 \u304b\u3089 1.5.9 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8</li> </ul>"},{"location":"revision_summary/#2024624","title":"2024\u5e746\u670824\u65e5","text":""},{"location":"revision_summary/#_31","title":"\u30de\u30fc\u30b8","text":"<ul> <li>e6ca064 (Simon Klinkert): Merge pull request #26 from sklinkert/dependabot/go_modules/gorm.io/driver/postgres-1.5.9</li> <li>PostgreSQL \u30c9\u30e9\u30a4\u30d0\u30fc\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30de\u30fc\u30b8</li> </ul>"},{"location":"revision_summary/#2024715","title":"2024\u5e747\u670815\u65e5","text":""},{"location":"revision_summary/#_32","title":"\u4f9d\u5b58\u95a2\u4fc2\u306e\u66f4\u65b0","text":"<ul> <li>4011b6c (dependabot[bot]): Bump gorm.io/gorm from 1.25.10 to 1.25.11</li> <li>GORM \u3092 1.25.10 \u304b\u3089 1.25.11 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8</li> </ul>"},{"location":"revision_summary/#2024718","title":"2024\u5e747\u670818\u65e5","text":""},{"location":"revision_summary/#_33","title":"\u30de\u30fc\u30b8","text":"<ul> <li>47abbf6 (Simon Klinkert): Merge pull request #27 from sklinkert/dependabot/go_modules/gorm.io/gorm-1.25.11</li> <li>GORM \u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30de\u30fc\u30b8</li> </ul>"},{"location":"revision_summary/#202493","title":"2024\u5e749\u67083\u65e5","text":""},{"location":"revision_summary/#_34","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<ul> <li>6a688ae (Simon Klinkert): Update README.md</li> <li>README.md \u3092\u66f4\u65b0</li> </ul>"},{"location":"revision_summary/#202499","title":"2024\u5e749\u67089\u65e5","text":""},{"location":"revision_summary/#_35","title":"\u4f9d\u5b58\u95a2\u4fc2\u306e\u66f4\u65b0","text":"<ul> <li>387de47 (dependabot[bot]): Bump gorm.io/gorm from 1.25.11 to 1.25.12</li> <li>GORM \u3092 1.25.11 \u304b\u3089 1.25.12 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8</li> </ul>"},{"location":"revision_summary/#2024928","title":"2024\u5e749\u670828\u65e5","text":""},{"location":"revision_summary/#_36","title":"\u30de\u30fc\u30b8","text":"<ul> <li>1279a05 (Simon Klinkert): Merge pull request #31 from sklinkert/dependabot/go_modules/gorm.io/gorm-1.25.12</li> <li>GORM \u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u30de\u30fc\u30b8</li> </ul>"},{"location":"revision_summary/#20241028","title":"2024\u5e7410\u670828\u65e5","text":""},{"location":"revision_summary/#_37","title":"\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0","text":"<ul> <li>9de1781 (Simon Klinkert): merge command with results into same file</li> <li>\u30b3\u30de\u30f3\u30c9\u3068\u7d50\u679c\u3092\u540c\u3058\u30d5\u30a1\u30a4\u30eb\u306b\u30de\u30fc\u30b8</li> <li>c311d7c (Simon Klinkert): CI: use go 1.22</li> <li>CI \u3067 Go 1.22 \u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u5909\u66f4</li> <li>22b5011 (Simon Klinkert): ID -&gt; Id</li> <li>ID \u3092 Id \u306b\u30ea\u30cd\u30fc\u30e0</li> </ul>"},{"location":"seller_implementation/","title":"Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u51fa\u54c1\u8005\u7ba1\u7406\u6a5f\u80fd\u306e\u5b9f\u88c5\u624b\u9806","text":""},{"location":"seller_implementation/#1","title":"1. \u6982\u8981","text":"<p>\u3053\u306e\u6587\u66f8\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308b\u51fa\u54c1\u8005\u7ba1\u7406\u6a5f\u80fd\u306e\u5b9f\u88c5\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\u5b9f\u88c5\u306f\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\uff08DDD\uff09\u306e\u539f\u5247\u306b\u5f93\u3044\u3001\u30ec\u30a4\u30e4\u30fc\u30c9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p>"},{"location":"seller_implementation/#11","title":"1.1 \u51fa\u54c1\u8005\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb","text":"<p>\u4ee5\u4e0b\u306f\u51fa\u54c1\u8005\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u8868\u3059\u30b9\u30c6\u30fc\u30c8\u56f3\u3067\u3059\uff1a</p> <p></p>"},{"location":"seller_implementation/#2","title":"2. \u5b9f\u88c5\u30b9\u30c6\u30c3\u30d7","text":"<p>\u4ee5\u4e0b\u306f\u51fa\u54c1\u8005\u7ba1\u7406\u6a5f\u80fd\u306e\u5b9f\u88c5\u30b9\u30c6\u30c3\u30d7\u306e\u6982\u8981\u3092\u8868\u3059\u30d5\u30ed\u30fc\u56f3\u3067\u3059\uff1a</p> <p></p>"},{"location":"seller_implementation/#21","title":"2.1 \u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u306e\u5b9f\u88c5","text":""},{"location":"seller_implementation/#211","title":"2.1.1 \u51fa\u54c1\u8005\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u4f5c\u6210","text":"<ol> <li><code>internal/domain/entities/seller.go</code> \u306b\u51fa\u54c1\u8005\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package entities\n\nimport (\n    \"time\"\n    \"errors\"\n    \"regexp\"\n)\n\ntype Seller struct {\n    Id        string\n    Name      string\n    Email     string\n    CreatedAt time.Time\n    UpdatedAt time.Time\n    DeletedAt *time.Time\n}\n\nfunc (s *Seller) Validate() error {\n    if s.Name == \"\" {\n        return errors.New(\"seller name cannot be empty\")\n    }\n\n    if s.Email == \"\" {\n        return errors.New(\"seller email cannot be empty\")\n    }\n\n    // \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306e\u7c21\u6613\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n    emailRegex := regexp.MustCompile(`^[a-zA-Z0-9._%+\\-]+@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]{2,}$`)\n    if !emailRegex.MatchString(s.Email) {\n        return errors.New(\"invalid email format\")\n    }\n\n    return nil\n}\n\nfunc (s *Seller) UpdateName(name string) error {\n    if name == \"\" {\n        return errors.New(\"seller name cannot be empty\")\n    }\n    s.Name = name\n    s.UpdatedAt = time.Now()\n    return nil\n}\n\nfunc (s *Seller) UpdateEmail(email string) error {\n    if email == \"\" {\n        return errors.New(\"seller email cannot be empty\")\n    }\n\n    // \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306e\u7c21\u6613\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n    emailRegex := regexp.MustCompile(`^[a-zA-Z0-9._%+\\-]+@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]{2,}$`)\n    if !emailRegex.MatchString(email) {\n        return errors.New(\"invalid email format\")\n    }\n\n    s.Email = email\n    s.UpdatedAt = time.Now()\n    return nil\n}\n\nfunc (s *Seller) SoftDelete() {\n    now := time.Now()\n    s.DeletedAt = &amp;now\n}\n\nfunc (s *Seller) IsDeleted() bool {\n    return s.DeletedAt != nil\n}\n</code></pre>"},{"location":"seller_implementation/#212","title":"2.1.2 \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u6e08\u307f\u51fa\u54c1\u8005\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u4f5c\u6210","text":"<ol> <li><code>internal/domain/entities/validated_seller.go</code> \u306b\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u6e08\u307f\u51fa\u54c1\u8005\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package entities\n\ntype ValidatedSeller struct {\n    Seller Seller\n}\n\nfunc NewValidatedSeller(seller Seller) (*ValidatedSeller, error) {\n    if err := seller.Validate(); err != nil {\n        return nil, err\n    }\n    return &amp;ValidatedSeller{Seller: seller}, nil\n}\n</code></pre>"},{"location":"seller_implementation/#213","title":"2.1.3 \u51fa\u54c1\u8005\u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5b9a\u7fa9","text":"<ol> <li><code>internal/domain/repositories/seller_repository.go</code> \u306b\u51fa\u54c1\u8005\u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package repositories\n\nimport (\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n)\n\ntype SellerRepository interface {\n    Save(seller entities.Seller) error\n    FindAll() ([]entities.Seller, error)\n    ById(id string) (entities.Seller, error)\n    Update(seller entities.Seller) error\n    Delete(id string) error\n}\n</code></pre>"},{"location":"seller_implementation/#22","title":"2.2 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306e\u5b9f\u88c5","text":""},{"location":"seller_implementation/#221","title":"2.2.1 \u51fa\u54c1\u8005\u30b3\u30de\u30f3\u30c9\u306e\u4f5c\u6210","text":"<ol> <li><code>internal/application/command/seller_commands.go</code> \u306b\u51fa\u54c1\u8005\u30b3\u30de\u30f3\u30c9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package command\n\ntype CreateSellerCommand struct {\n    Name  string\n    Email string\n}\n\ntype UpdateSellerNameCommand struct {\n    Id   string\n    Name string\n}\n\ntype UpdateSellerEmailCommand struct {\n    Id    string\n    Email string\n}\n\ntype DeleteSellerCommand struct {\n    Id string\n}\n</code></pre>"},{"location":"seller_implementation/#222","title":"2.2.2 \u51fa\u54c1\u8005\u30af\u30a8\u30ea\u306e\u4f5c\u6210","text":"<ol> <li><code>internal/application/query/seller_queries.go</code> \u306b\u51fa\u54c1\u8005\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package query\n\ntype FindAllSellersQuery struct {}\n\ntype FindSellerByIdQuery struct {\n    Id string\n}\n</code></pre>"},{"location":"seller_implementation/#223","title":"2.2.3 \u51fa\u54c1\u8005\u30b5\u30fc\u30d3\u30b9\u306e\u5b9f\u88c5","text":"<ol> <li><code>internal/application/services/seller_service.go</code> \u306b\u51fa\u54c1\u8005\u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package services\n\nimport (\n    \"errors\"\n    \"time\"\n    \"github.com/google/uuid\"\n    \"github.com/sklinkert/go-ddd/internal/application/command\"\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n    \"github.com/sklinkert/go-ddd/internal/domain/repositories\"\n)\n\ntype SellerService struct {\n    sellerRepo repositories.SellerRepository\n}\n\nfunc NewSellerService(sellerRepo repositories.SellerRepository) *SellerService {\n    return &amp;SellerService{\n        sellerRepo: sellerRepo,\n    }\n}\n\nfunc (s *SellerService) Create(cmd command.CreateSellerCommand) (entities.Seller, error) {\n    // \u51fa\u54c1\u8005\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u4f5c\u6210\n    now := time.Now()\n    seller := entities.Seller{\n        Id:        uuid.New().String(),\n        Name:      cmd.Name,\n        Email:     cmd.Email,\n        CreatedAt: now,\n        UpdatedAt: now,\n    }\n\n    // \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n    if _, err := entities.NewValidatedSeller(seller); err != nil {\n        return entities.Seller{}, err\n    }\n\n    // \u4fdd\u5b58\n    if err := s.sellerRepo.Save(seller); err != nil {\n        return entities.Seller{}, err\n    }\n\n    return seller, nil\n}\n\nfunc (s *SellerService) FindAll() ([]entities.Seller, error) {\n    return s.sellerRepo.FindAll()\n}\n\nfunc (s *SellerService) ById(id string) (entities.Seller, error) {\n    return s.sellerRepo.ById(id)\n}\n\nfunc (s *SellerService) UpdateName(cmd command.UpdateSellerNameCommand) (entities.Seller, error) {\n    // \u65e2\u5b58\u306e\u51fa\u54c1\u8005\u3092\u53d6\u5f97\n    seller, err := s.sellerRepo.ById(cmd.Id)\n    if err != nil {\n        return entities.Seller{}, err\n    }\n\n    // \u540d\u524d\u3092\u66f4\u65b0\n    if err := seller.UpdateName(cmd.Name); err != nil {\n        return entities.Seller{}, err\n    }\n\n    // \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n    if _, err := entities.NewValidatedSeller(seller); err != nil {\n        return entities.Seller{}, err\n    }\n\n    // \u4fdd\u5b58\n    if err := s.sellerRepo.Update(seller); err != nil {\n        return entities.Seller{}, err\n    }\n\n    return seller, nil\n}\n\nfunc (s *SellerService) UpdateEmail(cmd command.UpdateSellerEmailCommand) (entities.Seller, error) {\n    // \u65e2\u5b58\u306e\u51fa\u54c1\u8005\u3092\u53d6\u5f97\n    seller, err := s.sellerRepo.ById(cmd.Id)\n    if err != nil {\n        return entities.Seller{}, err\n    }\n\n    // \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u66f4\u65b0\n    if err := seller.UpdateEmail(cmd.Email); err != nil {\n        return entities.Seller{}, err\n    }\n\n    // \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n    if _, err := entities.NewValidatedSeller(seller); err != nil {\n        return entities.Seller{}, err\n    }\n\n    // \u4fdd\u5b58\n    if err := s.sellerRepo.Update(seller); err != nil {\n        return entities.Seller{}, err\n    }\n\n    return seller, nil\n}\n\nfunc (s *SellerService) Delete(cmd command.DeleteSellerCommand) error {\n    // \u65e2\u5b58\u306e\u51fa\u54c1\u8005\u3092\u53d6\u5f97\u3057\u3066\u5b58\u5728\u78ba\u8a8d\n    _, err := s.sellerRepo.ById(cmd.Id)\n    if err != nil {\n        return errors.New(\"seller not found\")\n    }\n\n    // \u524a\u9664\n    return s.sellerRepo.Delete(cmd.Id)\n}\n</code></pre>"},{"location":"seller_implementation/#23","title":"2.3 \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ec\u30a4\u30e4\u30fc\u306e\u5b9f\u88c5","text":""},{"location":"seller_implementation/#231-postgresql","title":"2.3.1 \u51fa\u54c1\u8005\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5b9f\u88c5\uff08PostgreSQL\uff09","text":"<ol> <li><code>internal/infrastructure/db/postgres/seller_repository.go</code> \u306b\u51fa\u54c1\u8005\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5b9f\u88c5\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package postgres\n\nimport (\n    \"errors\"\n    \"gorm.io/gorm\"\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n)\n\ntype GormSellerRepository struct {\n    db *gorm.DB\n}\n\nfunc NewGormSellerRepository(db *gorm.DB) *GormSellerRepository {\n    return &amp;GormSellerRepository{db: db}\n}\n\nfunc (r *GormSellerRepository) Save(seller entities.Seller) error {\n    dbSeller := toDBSeller(seller)\n    result := r.db.Create(&amp;dbSeller)\n    return result.Error\n}\n\nfunc (r *GormSellerRepository) FindAll() ([]entities.Seller, error) {\n    var dbSellers []DBSeller\n    result := r.db.Find(&amp;dbSellers)\n    if result.Error != nil {\n        return nil, result.Error\n    }\n\n    sellers := make([]entities.Seller, len(dbSellers))\n    for i, dbSeller := range dbSellers {\n        sellers[i] = toDomainSeller(dbSeller)\n    }\n    return sellers, nil\n}\n\nfunc (r *GormSellerRepository) ById(id string) (entities.Seller, error) {\n    var dbSeller DBSeller\n    result := r.db.First(&amp;dbSeller, \"id = ?\", id)\n    if result.Error != nil {\n        if errors.Is(result.Error, gorm.ErrRecordNotFound) {\n            return entities.Seller{}, errors.New(\"seller not found\")\n        }\n        return entities.Seller{}, result.Error\n    }\n    return toDomainSeller(dbSeller), nil\n}\n\nfunc (r *GormSellerRepository) Update(seller entities.Seller) error {\n    dbSeller := toDBSeller(seller)\n    result := r.db.Save(&amp;dbSeller)\n    return result.Error\n}\n\nfunc (r *GormSellerRepository) Delete(id string) error {\n    // \u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8\n    result := r.db.Delete(&amp;DBSeller{}, \"id = ?\", id)\n    return result.Error\n}\n</code></pre>"},{"location":"seller_implementation/#232","title":"2.3.2 \u51fa\u54c1\u8005\u30de\u30c3\u30d1\u30fc\u306e\u5b9f\u88c5","text":"<ol> <li><code>internal/infrastructure/db/postgres/seller_mapper.go</code> \u306b\u51fa\u54c1\u8005\u30de\u30c3\u30d1\u30fc\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package postgres\n\nimport (\n    \"time\"\n    \"github.com/sklinkert/go-ddd/internal/domain/entities\"\n)\n\ntype DBSeller struct {\n    ID        string `gorm:\"primaryKey\"`\n    Name      string\n    Email     string\n    CreatedAt time.Time\n    UpdatedAt time.Time\n    DeletedAt *time.Time `gorm:\"index\"`\n}\n\nfunc (DBSeller) TableName() string {\n    return \"sellers\"\n}\n\nfunc toDBSeller(seller entities.Seller) DBSeller {\n    return DBSeller{\n        ID:        seller.Id,\n        Name:      seller.Name,\n        Email:     seller.Email,\n        CreatedAt: seller.CreatedAt,\n        UpdatedAt: seller.UpdatedAt,\n        DeletedAt: seller.DeletedAt,\n    }\n}\n\nfunc toDomainSeller(dbSeller DBSeller) entities.Seller {\n    return entities.Seller{\n        Id:        dbSeller.ID,\n        Name:      dbSeller.Name,\n        Email:     dbSeller.Email,\n        CreatedAt: dbSeller.CreatedAt,\n        UpdatedAt: dbSeller.UpdatedAt,\n        DeletedAt: dbSeller.DeletedAt,\n    }\n}\n</code></pre>"},{"location":"seller_implementation/#24","title":"2.4 \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc\u306e\u5b9f\u88c5","text":""},{"location":"seller_implementation/#241","title":"2.4.1 \u51fa\u54c1\u8005\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5b9f\u88c5","text":"<ol> <li><code>internal/interface/api/rest/seller_controller.go</code> \u306b\u51fa\u54c1\u8005\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</li> </ol> <p>```go package rest</p> <p>import (     \"net/http\"     \"time\"     \"github.com/labstack/echo/v4\"     \"github.com/sklinkert/go-ddd/internal/application/command\"     \"github.com/sklinkert/go-ddd/internal/application/services\" )</p> <p>type SellerController struct {     sellerService *services.SellerService }</p> <p>func NewSellerController(e echo.Echo, sellerService services.SellerService) {     controller := &amp;SellerController{         sellerService: sellerService,     }</p> <pre><code>api := e.Group(\"/api/v1\")\napi.POST(\"/sellers\", controller.Create)\napi.GET(\"/sellers\", controller.FindAll)\napi.GET(\"/sellers/:id\", controller.ById)\napi.PUT(\"/sellers/:id/name\", controller.UpdateName)\napi.PUT(\"/sellers/:id/email\", controller.UpdateEmail)\napi.DELETE(\"/sellers/:id\", controller.Delete)\n</code></pre> <p>}</p> <p>type CreateSellerRequest struct {     Name  string <code>json:\"name\"</code>     Email string <code>json:\"email\"</code> }</p> <p>type UpdateSellerNameRequest struct {     Name string <code>json:\"name\"</code> }</p> <p>type UpdateSellerEmailRequest struct {     Email string <code>json:\"email\"</code> }</p> <p>type SellerResponse struct {     Id        string  <code>json:\"id\"</code>     Name      string  <code>json:\"name\"</code>     Email     string  <code>json:\"email\"</code>     CreatedAt string  <code>json:\"createdAt\"</code>     UpdatedAt string  <code>json:\"updatedAt\"</code>     DeletedAt *string <code>json:\"deletedAt,omitempty\"</code> }</p> <p>func (ctrl *SellerController) Create(c echo.Context) error {     var req CreateSellerRequest     if err := c.Bind(&amp;req); err != nil {         return c.JSON(http.StatusBadRequest, map[string]string{\"error\": err.Error()})     }</p> <pre><code>cmd := command.CreateSellerCommand{\n    Name:  req.Name,\n    Email: req.Email,\n}\n\nseller, err := ctrl.sellerService.Create(cmd)\nif err != nil {\n    return c.JSON(http.StatusBadRequest, map[string]string{\"error\": err.Error()})\n}\n\nresp := toSellerResponse(seller)\nreturn c.JSON(http.StatusCreated, resp)\n</code></pre> <p>}</p> <p>func (ctrl *SellerController) FindAll(c echo.Context) error {     sellers, err := ctrl.sellerService.FindAll()     if err != nil {         return c.JSON(http</p>"},{"location":"setup_guide/","title":"Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30ac\u30a4\u30c9","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\uff10\u304b\u3089\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\u3002</p>"},{"location":"setup_guide/#1","title":"1. \u6982\u8981","text":"<p>Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\uff08Domain-Driven Design, DDD\uff09\u306e\u539f\u5247\u306b\u5f93\u3063\u3066\u69cb\u7bc9\u3055\u308c\u305fGo\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\u3053\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30ac\u30a4\u30c9\u3067\u306f\u3001\u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\u304b\u3089\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u3001\u30c6\u30b9\u30c8\u307e\u3067\u306e\u4e00\u9023\u306e\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\u3002</p> <p></p>"},{"location":"setup_guide/#2","title":"2. \u524d\u63d0\u6761\u4ef6","text":"<p>Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u3067\u3059\uff1a</p> \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3 \u5099\u8003 Go 1.23 \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e Docker \u6700\u65b0 \u30b3\u30f3\u30c6\u30ca\u5316 Docker Compose \u6700\u65b0 \u30de\u30eb\u30c1\u30b3\u30f3\u30c6\u30ca\u7ba1\u7406 Git \u6700\u65b0 \u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406 Node.js 20.x \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u958b\u767a"},{"location":"setup_guide/#3","title":"3. \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806","text":"<p>\u4ee5\u4e0b\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u5f93\u3063\u3066\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002</p> <p></p>"},{"location":"setup_guide/#31","title":"3.1 \u524d\u63d0\u6761\u4ef6\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>\u5404\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u5fdc\u3058\u3066\u3001\u5fc5\u8981\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002</p>"},{"location":"setup_guide/#311-go","title":"3.1.1 Go \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>macOS: <pre><code>brew install go\n</code></pre></p> <p>Linux (Ubuntu/Debian): <pre><code>sudo apt-get update\nsudo apt-get install golang-go\n</code></pre></p> <p>Windows: 1. Go\u516c\u5f0f\u30b5\u30a4\u30c8\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 2. \u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u5b9f\u884c\u3057\u3001\u6307\u793a\u306b\u5f93\u3046</p> <p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d: <pre><code>go version\n</code></pre></p>"},{"location":"setup_guide/#312-docker-docker-compose","title":"3.1.2 Docker \u3068 Docker Compose \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>macOS &amp; Windows: 1. Docker Desktop\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb</p> <p>Linux (Ubuntu/Debian): <pre><code>sudo apt-get update\nsudo apt-get install docker.io\n</code></pre></p> <p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d: <pre><code>docker --version\ndocker compose --version\n</code></pre></p>"},{"location":"setup_guide/#313-nodejs","title":"3.1.3 Node.js \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>macOS: <pre><code>brew install node@20\n</code></pre></p> <p>Linux (Ubuntu/Debian): <pre><code>curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -\nsudo apt-get install -y nodejs\n</code></pre></p> <p>Windows: 1. Node.js\u516c\u5f0f\u30b5\u30a4\u30c8\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 2. \u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u5b9f\u884c\u3057\u3001\u6307\u793a\u306b\u5f93\u3046</p> <p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d: <pre><code>node --version\nnpm --version\n</code></pre></p>"},{"location":"setup_guide/#32","title":"3.2 \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30af\u30ed\u30fc\u30f3","text":"<p>\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3057\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u307e\u3059\uff1a</p> <pre><code>git clone https://github.com/yourusername/go-ddd.git\ncd go-ddd\n</code></pre>"},{"location":"setup_guide/#33","title":"3.3 \u4f9d\u5b58\u95a2\u4fc2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>Node.js \u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff1a</p> <pre><code>npm install\n</code></pre> <p>Go \u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\uff1a</p> <pre><code>go mod download\n</code></pre>"},{"location":"setup_guide/#34","title":"3.4 \u958b\u767a\u74b0\u5883\u306e\u8d77\u52d5","text":"<p>Docker Compose \u3092\u4f7f\u7528\u3057\u3066\u3001\u958b\u767a\u74b0\u5883\u3092\u8d77\u52d5\u3057\u307e\u3059\uff1a</p> <pre><code>docker compose up -d\n</code></pre> <p>\u8d77\u52d5\u3057\u305f\u30b5\u30fc\u30d3\u30b9\u3092\u78ba\u8a8d\u3057\u307e\u3059\uff1a</p> <pre><code>docker compose ps\n</code></pre> <p>\u4ee5\u4e0b\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u8d77\u52d5\u3057\u307e\u3059\uff1a - PostgreSQL (\u30dd\u30fc\u30c8 9920) - MySQL (\u30dd\u30fc\u30c8 3306) - Wiki.js (\u30dd\u30fc\u30c8 80) - PlantUML Server (\u30dd\u30fc\u30c8 9999)</p>"},{"location":"setup_guide/#35","title":"3.5 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u8d77\u52d5\u6642\u306b\u81ea\u52d5\u7684\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u60c5\u5831\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff1a</p> <p>PostgreSQL: - \u30db\u30b9\u30c8: localhost - \u30dd\u30fc\u30c8: 9920 - \u30e6\u30fc\u30b6\u30fc: root - \u30d1\u30b9\u30ef\u30fc\u30c9: password - \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9: mydb</p>"},{"location":"setup_guide/#36","title":"3.6 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u69cb\u7bc9","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\uff1a</p> <pre><code>go build -o app/backend/cmd/marketplace/marketplace app/backend/cmd/marketplace/main.go\n</code></pre>"},{"location":"setup_guide/#37","title":"3.7 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c","text":"<p>\u30d3\u30eb\u30c9\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u307e\u3059\uff1a</p> <pre><code>./app/backend/cmd/marketplace/marketplace\n</code></pre> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30dd\u30fc\u30c89090\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\uff1a</p> <pre><code>http://localhost:9090/api/v1/health\n</code></pre>"},{"location":"setup_guide/#38","title":"3.8 \u30c6\u30b9\u30c8\u306e\u5b9f\u884c","text":"<p>\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\uff1a</p> <pre><code>cd app/backend\ngo test ./...\n</code></pre>"},{"location":"setup_guide/#4","title":"4. \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u9020","text":"<p>Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u539f\u5247\u306b\u5f93\u3063\u3066\u3001\u4ee5\u4e0b\u306e\u30ec\u30a4\u30e4\u30fc\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\uff1a</p> <p></p>"},{"location":"setup_guide/#41","title":"4.1 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020","text":"<pre><code>go-ddd/\n\u251c\u2500\u2500 app/\n\u2502   \u2514\u2500\u2500 backend/\n\u2502       \u251c\u2500\u2500 cmd/\n\u2502       \u2502   \u2514\u2500\u2500 marketplace/\n\u2502       \u2502       \u2514\u2500\u2500 main.go\n\u2502       \u2514\u2500\u2500 internal/\n\u2502           \u251c\u2500\u2500 domain/\n\u2502           \u2502   \u251c\u2500\u2500 entities/\n\u2502           \u2502   \u2514\u2500\u2500 repositories/\n\u2502           \u251c\u2500\u2500 application/\n\u2502           \u2502   \u251c\u2500\u2500 services/\n\u2502           \u2502   \u251c\u2500\u2500 command/\n\u2502           \u2502   \u2514\u2500\u2500 query/\n\u2502           \u251c\u2500\u2500 infrastructure/\n\u2502           \u2502   \u2514\u2500\u2500 db/\n\u2502           \u2514\u2500\u2500 interface/\n\u2502               \u2514\u2500\u2500 api/\n\u2502                   \u2514\u2500\u2500 rest/\n\u251c\u2500\u2500 docs/\n\u2502   \u2514\u2500\u2500 wiki/\n\u251c\u2500\u2500 ops/\n\u2502   \u2514\u2500\u2500 docker/\n\u2514\u2500\u2500 docker-compose.yml\n</code></pre>"},{"location":"setup_guide/#42","title":"4.2 \u4e3b\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8","text":""},{"location":"setup_guide/#421","title":"4.2.1 \u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4e2d\u5fc3\u3067\u3042\u308a\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3068\u30eb\u30fc\u30eb\u3092\u542b\u307f\u307e\u3059\u3002</p> <ul> <li>\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3: \u5546\u54c1\uff08Product\uff09\u3084\u51fa\u54c1\u8005\uff08Seller\uff09\u306a\u3069\u306e\u30d3\u30b8\u30cd\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</li> <li>\u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9: \u30c7\u30fc\u30bf\u306e\u6c38\u7d9a\u5316\u3092\u62c5\u5f53\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9</li> </ul>"},{"location":"setup_guide/#422","title":"4.2.2 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306f\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u3001\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8abf\u6574\u3057\u307e\u3059\u3002</p> <ul> <li>\u30b5\u30fc\u30d3\u30b9: \u5546\u54c1\u30b5\u30fc\u30d3\u30b9\u3084\u51fa\u54c1\u8005\u30b5\u30fc\u30d3\u30b9\u306a\u3069\u3001\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u30b5\u30fc\u30d3\u30b9</li> <li>\u30b3\u30de\u30f3\u30c9: \u30c9\u30e1\u30a4\u30f3\u306e\u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u64cd\u4f5c\uff08\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\uff09</li> <li>\u30af\u30a8\u30ea: \u30c9\u30e1\u30a4\u30f3\u304b\u3089\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u64cd\u4f5c\uff08\u8aad\u307f\u53d6\u308a\u64cd\u4f5c\uff09</li> </ul>"},{"location":"setup_guide/#423","title":"4.2.3 \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ec\u30a4\u30e4\u30fc\u306f\u3001\u6c38\u7d9a\u5316\u3084\u305d\u306e\u4ed6\u306e\u6280\u8853\u7684\u306a\u95a2\u5fc3\u4e8b\u3092\u51e6\u7406\u3057\u307e\u3059\u3002</p> <ul> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5b9f\u88c5: \u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5b9f\u88c5\uff08GORM \u3092\u4f7f\u7528\uff09</li> </ul>"},{"location":"setup_guide/#424","title":"4.2.4 \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc\u306f\u3001\u5916\u90e8\u4e16\u754c\u3068\u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3057\u307e\u3059\u3002</p> <ul> <li>REST API: \u5546\u54c1\u3084\u51fa\u54c1\u8005\u306b\u95a2\u3059\u308bREST API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u63d0\u4f9b</li> </ul>"},{"location":"setup_guide/#5-api","title":"5. API \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8","text":"<p>Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u4ee5\u4e0b\u306eREST API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff1a</p> <p></p>"},{"location":"setup_guide/#51-api","title":"5.1 \u5546\u54c1 API","text":"\u30e1\u30bd\u30c3\u30c9 \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 \u8aac\u660e POST /api/v1/products \u65b0\u3057\u3044\u5546\u54c1\u3092\u4f5c\u6210 GET /api/v1/products \u3059\u3079\u3066\u306e\u5546\u54c1\u3092\u53d6\u5f97 GET /api/v1/products/{id} \u6307\u5b9aID\u306e\u5546\u54c1\u3092\u53d6\u5f97 PUT /api/v1/products/{id} \u6307\u5b9aID\u306e\u5546\u54c1\u3092\u66f4\u65b0"},{"location":"setup_guide/#52-api","title":"5.2 \u51fa\u54c1\u8005 API","text":"\u30e1\u30bd\u30c3\u30c9 \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 \u8aac\u660e POST /api/v1/sellers \u65b0\u3057\u3044\u51fa\u54c1\u8005\u3092\u4f5c\u6210 GET /api/v1/sellers \u3059\u3079\u3066\u306e\u51fa\u54c1\u8005\u3092\u53d6\u5f97 GET /api/v1/sellers/{id} \u6307\u5b9aID\u306e\u51fa\u54c1\u8005\u3092\u53d6\u5f97 PUT /api/v1/sellers/{id}/name \u6307\u5b9aID\u306e\u51fa\u54c1\u8005\u306e\u540d\u524d\u3092\u66f4\u65b0 PUT /api/v1/sellers/{id}/email \u6307\u5b9aID\u306e\u51fa\u54c1\u8005\u306e\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u66f4\u65b0 DELETE /api/v1/sellers/{id} \u6307\u5b9aID\u306e\u51fa\u54c1\u8005\u3092\u524a\u9664"},{"location":"setup_guide/#53-api","title":"5.3 \u30b7\u30b9\u30c6\u30e0 API","text":"\u30e1\u30bd\u30c3\u30c9 \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 \u8aac\u660e GET /api/v1/health \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af"},{"location":"setup_guide/#6","title":"6. \u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0","text":""},{"location":"setup_guide/#61","title":"6.1 \u3088\u304f\u3042\u308b\u554f\u984c\u3068\u89e3\u6c7a\u7b56","text":""},{"location":"setup_guide/#_1","title":"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u30a8\u30e9\u30fc","text":"<p>\u75c7\u72b6: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u6642\u306b\u300cFailed to connect to database\u300d\u306a\u3069\u306e\u30a8\u30e9\u30fc\u304c\u8868\u793a\u3055\u308c\u308b</p> <p>\u89e3\u6c7a\u7b56: 1. Docker Compose\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u304b\u78ba\u8a8d: <code>docker compose ps</code> 2. \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u60c5\u5831\u304c\u6b63\u3057\u3044\u304b\u78ba\u8a8d 3. \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b3\u30f3\u30c6\u30ca\u306b\u76f4\u63a5\u63a5\u7d9a\u3057\u3066\u307f\u308b: <code>docker compose exec db_postgresql psql -U root -d mydb</code></p>"},{"location":"setup_guide/#_2","title":"\u30d3\u30eb\u30c9\u30a8\u30e9\u30fc","text":"<p>\u75c7\u72b6: <code>go build</code> \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b</p> <p>\u89e3\u6c7a\u7b56: 1. Go\u4f9d\u5b58\u95a2\u4fc2\u304c\u6b63\u3057\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d: <code>go mod download</code> 2. \u4f9d\u5b58\u95a2\u4fc2\u3092\u6574\u7406: <code>go mod tidy</code> 3. Go\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c1.23\u4ee5\u4e0a\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d: <code>go version</code></p>"},{"location":"setup_guide/#_3","title":"\u5b9f\u884c\u6642\u30a8\u30e9\u30fc","text":"<p>\u75c7\u72b6: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b</p> <p>\u89e3\u6c7a\u7b56: 1. \u30ed\u30b0\u3092\u78ba\u8a8d\u3057\u3066\u5177\u4f53\u7684\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u7279\u5b9a 2. \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u6210\u529f\u3057\u305f\u304b\u78ba\u8a8d 3. \u5fc5\u8981\u306a\u30c6\u30fc\u30d6\u30eb\u304c\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d</p>"},{"location":"setup_guide/#7","title":"7. \u307e\u3068\u3081","text":"<p>\u3053\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30ac\u30a4\u30c9\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\uff10\u304b\u3089\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u539f\u5247\u306b\u5f93\u3063\u3066\u69cb\u7bc9\u3055\u308c\u305f\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u63a1\u7528\u3057\u3001\u5404\u30ec\u30a4\u30e4\u30fc\u304c\u660e\u78ba\u306b\u5206\u96e2\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p></p> <p>\u3053\u306e\u30ac\u30a4\u30c9\u306b\u5f93\u3046\u3053\u3068\u3067\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7c21\u5358\u306b\u69cb\u7bc9\u3057\u3001\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u539f\u5247\u3092\u5b66\u3073\u3001\u5b9f\u8df5\u3059\u308b\u305f\u3081\u306e\u826f\u3044\u4f8b\u3068\u3057\u3066\u3082\u6d3b\u7528\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"setup_guide/#8","title":"8. \u53c2\u8003\u30ea\u30f3\u30af","text":"<ul> <li>Go\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>Docker\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>GORM\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>Echo Framework\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9</li> </ul>"},{"location":"setup_guide_mermaid/","title":"Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3","text":""},{"location":"setup_guide_mermaid/#1","title":"1. \u6982\u8981","text":"<p>Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\uff08Domain-Driven Design, DDD\uff09\u306e\u539f\u5247\u306b\u5f93\u3063\u3066\u69cb\u7bc9\u3055\u308c\u305fGo\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\u3053\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30ac\u30a4\u30c9\u3067\u306f\u3001\u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\u304b\u3089\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u3001\u30c6\u30b9\u30c8\u307e\u3067\u306e\u4e00\u9023\u306e\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\u3002</p> <pre><code>flowchart TD\n    subgraph \"\u958b\u767a\u74b0\u5883\"\n        go[\"Go\"]\n        docker[\"Docker\"]\n        git[\"Git\"]\n        node[\"Node.js\"]\n    end\n\n    subgraph \"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\"\n        postgres[\"PostgreSQL\"]\n        mysql[\"MySQL\"]\n    end\n\n    subgraph \"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\"\n        backend[\"\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\"]\n        frontend[\"\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\"]\n        docs[\"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\"]\n    end\n\n    subgraph \"\u30c4\u30fc\u30eb\"\n        wiki[\"Wiki.js\"]\n        plantuml[\"PlantUML\"]\n    end\n\n    go --&gt; backend\n    docker --&gt; postgres\n    docker --&gt; mysql\n    docker --&gt; wiki\n    docker --&gt; plantuml\n    node --&gt; frontend\n    node --&gt; docs\n    git --&gt; backend\n    git --&gt; frontend\n    git --&gt; docs</code></pre>"},{"location":"setup_guide_mermaid/#2","title":"2. \u524d\u63d0\u6761\u4ef6","text":"<p>Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u3067\u3059\uff1a</p> \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2 \u30d0\u30fc\u30b8\u30e7\u30f3 \u5099\u8003 Go 1.23 \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e Docker \u6700\u65b0 \u30b3\u30f3\u30c6\u30ca\u5316 Docker Compose \u6700\u65b0 \u30de\u30eb\u30c1\u30b3\u30f3\u30c6\u30ca\u7ba1\u7406 Git \u6700\u65b0 \u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406 Node.js 20.x \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u958b\u767a"},{"location":"setup_guide_mermaid/#3","title":"3. \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806","text":"<p>\u4ee5\u4e0b\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u5f93\u3063\u3066\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002</p> <pre><code>flowchart TD\n    start([\u958b\u59cb]) --&gt; step1[1. \u524d\u63d0\u6761\u4ef6\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb]\n    step1 --&gt; step2[2. \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30af\u30ed\u30fc\u30f3]\n    step2 --&gt; step3[3. \u4f9d\u5b58\u95a2\u4fc2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb]\n    step3 --&gt; step4[4. \u958b\u767a\u74b0\u5883\u306e\u8d77\u52d5]\n    step4 --&gt; step5[5. \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7]\n    step5 --&gt; step6[6. \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u69cb\u7bc9]\n    step6 --&gt; step7[7. \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c]\n    step7 --&gt; step8[8. \u30c6\u30b9\u30c8\u306e\u5b9f\u884c]\n    step8 --&gt; stop([\u7d42\u4e86])</code></pre>"},{"location":"setup_guide_mermaid/#31","title":"3.1 \u524d\u63d0\u6761\u4ef6\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>\u5404\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u5fdc\u3058\u3066\u3001\u5fc5\u8981\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002</p>"},{"location":"setup_guide_mermaid/#311-go","title":"3.1.1 Go \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<pre><code>flowchart TD\n    start([\u958b\u59cb]) --&gt; platform{\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306f?}\n    platform --&gt;|macOS| mac[brew install go]\n    platform --&gt;|Linux| linux1[apt-get update]\n    linux1 --&gt; linux2[apt-get install golang-go]\n    platform --&gt;|Windows| win1[Go\u516c\u5f0f\u30b5\u30a4\u30c8\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9]\n    win1 --&gt; win2[\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u5b9f\u884c]\n    mac --&gt; check[go version \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d]\n    linux2 --&gt; check\n    win2 --&gt; check\n    check --&gt; stop([\u7d42\u4e86])</code></pre> <p>macOS: <pre><code>brew install go\n</code></pre></p> <p>Linux (Ubuntu/Debian): <pre><code>sudo apt-get update\nsudo apt-get install golang-go\n</code></pre></p> <p>Windows: 1. Go\u516c\u5f0f\u30b5\u30a4\u30c8\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 2. \u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u5b9f\u884c\u3057\u3001\u6307\u793a\u306b\u5f93\u3046</p> <p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d: <pre><code>go version\n</code></pre></p>"},{"location":"setup_guide_mermaid/#312-docker-docker-compose","title":"3.1.2 Docker \u3068 Docker Compose \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<pre><code>flowchart TD\n    start([\u958b\u59cb]) --&gt; platform{\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306f?}\n    platform --&gt;|macOS| mac[Docker Desktop for Mac\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb]\n    platform --&gt;|Linux| linux1[apt-get update]\n    linux1 --&gt; linux2[apt-get install docker.io]\n    platform --&gt;|Windows| win[Docker Desktop for Windows\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb]\n    mac --&gt; check1[docker --version \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d]\n    linux2 --&gt; check1\n    win --&gt; check1\n    check1 --&gt; check2[docker compose --version \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d]\n    check2 --&gt; stop([\u7d42\u4e86])</code></pre> <p>macOS &amp; Windows: 1. Docker Desktop\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb</p> <p>Linux (Ubuntu/Debian): <pre><code>sudo apt-get update\nsudo apt-get install docker.io\n</code></pre></p> <p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d: <pre><code>docker --version\ndocker compose --version\n</code></pre></p>"},{"location":"setup_guide_mermaid/#313-nodejs","title":"3.1.3 Node.js \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<pre><code>flowchart TD\n    start([\u958b\u59cb]) --&gt; platform{\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306f?}\n    platform --&gt;|macOS| mac[\"brew install node version 20\"]\n    platform --&gt;|Linux| linux1[\"curl -fsSL https://deb.nodesource.com/setup_20.x | bash\"]\n    linux1 --&gt; linux2[apt-get install -y nodejs]\n    platform --&gt;|Windows| win1[Node.js\u516c\u5f0f\u30b5\u30a4\u30c8\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9]\n    win1 --&gt; win2[\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u5b9f\u884c]\n    mac --&gt; check1[node --version \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d]\n    linux2 --&gt; check1\n    win2 --&gt; check1\n    check1 --&gt; check2[npm --version \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d]\n    check2 --&gt; stop([\u7d42\u4e86])</code></pre> <p>macOS: <pre><code>brew install node@20\n</code></pre></p> <p>Linux (Ubuntu/Debian): <pre><code>curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -\nsudo apt-get install -y nodejs\n</code></pre></p> <p>Windows: 1. Node.js\u516c\u5f0f\u30b5\u30a4\u30c8\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 2. \u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u5b9f\u884c\u3057\u3001\u6307\u793a\u306b\u5f93\u3046</p> <p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d: <pre><code>node --version\nnpm --version\n</code></pre></p>"},{"location":"setup_guide_mermaid/#32","title":"3.2 \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30af\u30ed\u30fc\u30f3","text":"<pre><code>flowchart TD\n    start([\u958b\u59cb]) --&gt; clone[git clone https://github.com/yourusername/go-ddd.git]\n    clone --&gt; cd[cd go-ddd]\n    cd --&gt; stop([\u7d42\u4e86])</code></pre> <p>\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30af\u30ed\u30fc\u30f3\u3057\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u307e\u3059\uff1a</p> <pre><code>git clone https://github.com/yourusername/go-ddd.git\ncd go-ddd\n</code></pre>"},{"location":"setup_guide_mermaid/#33","title":"3.3 \u4f9d\u5b58\u95a2\u4fc2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<pre><code>flowchart TD\n    start([\u958b\u59cb]) --&gt; npm[npm install]\n    npm --&gt; go[go mod download]\n    go --&gt; stop([\u7d42\u4e86])</code></pre> <p>Node.js \u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff1a</p> <pre><code>npm install\n</code></pre> <p>Go \u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\uff1a</p> <pre><code>go mod download\n</code></pre>"},{"location":"setup_guide_mermaid/#34","title":"3.4 \u958b\u767a\u74b0\u5883\u306e\u8d77\u52d5","text":"<pre><code>flowchart TD\n    start([\u958b\u59cb]) --&gt; docker[docker compose up -d]\n    docker --&gt; check[docker-compose ps \u3067\u8d77\u52d5\u78ba\u8a8d]\n    check --&gt; stop([\u7d42\u4e86])\n    docker -.-&gt; note[\"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3001Wiki\u3001PlantUML\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\"]</code></pre> <p>Docker Compose \u3092\u4f7f\u7528\u3057\u3066\u3001\u958b\u767a\u74b0\u5883\u3092\u8d77\u52d5\u3057\u307e\u3059\uff1a</p> <pre><code>docker-compose up -d\n</code></pre> <p>\u8d77\u52d5\u3057\u305f\u30b5\u30fc\u30d3\u30b9\u3092\u78ba\u8a8d\u3057\u307e\u3059\uff1a</p> <pre><code>docker-compose ps\n</code></pre> <p>\u4ee5\u4e0b\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u8d77\u52d5\u3057\u307e\u3059\uff1a - PostgreSQL (\u30dd\u30fc\u30c8 9920) - MySQL (\u30dd\u30fc\u30c8 3306) - Wiki.js (\u30dd\u30fc\u30c8 80) - PlantUML Server (\u30dd\u30fc\u30c8 9999)</p>"},{"location":"setup_guide_mermaid/#35","title":"3.5 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7","text":"<pre><code>flowchart TD\n    start([\u958b\u59cb]) --&gt; check[\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u60c5\u5831\u3092\u78ba\u8a8d]\n    check --&gt; migrate[\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u6642\u306b\u81ea\u52d5\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3]\n    migrate --&gt; stop([\u7d42\u4e86])\n    check -.-&gt; note[\"PostgreSQL\u63a5\u7d9a\u60c5\u5831\"]</code></pre> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u8d77\u52d5\u6642\u306b\u81ea\u52d5\u7684\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u60c5\u5831\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff1a</p> <p>PostgreSQL: - \u30db\u30b9\u30c8: localhost - \u30dd\u30fc\u30c8: 9920 - \u30e6\u30fc\u30b6\u30fc: root - \u30d1\u30b9\u30ef\u30fc\u30c9: password - \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9: mydb</p>"},{"location":"setup_guide_mermaid/#36","title":"3.6 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u69cb\u7bc9","text":"<pre><code>flowchart TD\n    start([\u958b\u59cb]) --&gt; build[go build -o app/backend/cmd/marketplace/marketplace app/backend/cmd/marketplace/main.go]\n    build --&gt; stop([\u7d42\u4e86])</code></pre> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\uff1a</p> <pre><code>go build -o app/backend/cmd/marketplace/marketplace app/backend/cmd/marketplace/main.go\n</code></pre>"},{"location":"setup_guide_mermaid/#37","title":"3.7 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c","text":"<pre><code>flowchart TD\n    start([\u958b\u59cb]) --&gt; run[./app/backend/cmd/marketplace/marketplace]\n    run --&gt; access[\u30d6\u30e9\u30a6\u30b6\u3067 http://localhost:9090/api/v1/health \u306b\u30a2\u30af\u30bb\u30b9]\n    access --&gt; stop([\u7d42\u4e86])\n    run -.-&gt; note[\"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u30dd\u30fc\u30c89090\u3067\u8d77\u52d5\"]</code></pre> <p>\u30d3\u30eb\u30c9\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u307e\u3059\uff1a</p> <pre><code>./app/backend/cmd/marketplace/marketplace\n</code></pre> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30dd\u30fc\u30c89090\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\uff1a</p> <pre><code>http://localhost:9090/api/v1/health\n</code></pre>"},{"location":"setup_guide_mermaid/#38","title":"3.8 \u30c6\u30b9\u30c8\u306e\u5b9f\u884c","text":"<pre><code>flowchart TD\n    start([\u958b\u59cb]) --&gt; cd[cd app/backend]\n    cd --&gt; test[go test ./...]\n    test --&gt; stop([\u7d42\u4e86])</code></pre> <p>\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\uff1a</p> <pre><code>cd app/backend\ngo test ./...\n</code></pre>"},{"location":"setup_guide_mermaid/#4","title":"4. \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u9020","text":"<p>Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u539f\u5247\u306b\u5f93\u3063\u3066\u3001\u4ee5\u4e0b\u306e\u30ec\u30a4\u30e4\u30fc\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\uff1a</p> <pre><code>flowchart TD\n    subgraph \"\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc\"\n        rest[\"REST API\"]\n    end\n\n    subgraph \"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\"\n        services[\"\u30b5\u30fc\u30d3\u30b9\"]\n        commands[\"\u30b3\u30de\u30f3\u30c9\"]\n        queries[\"\u30af\u30a8\u30ea\"]\n    end\n\n    subgraph \"\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\"\n        entities[\"\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\"]\n        repos[\"\u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\"]\n    end\n\n    subgraph \"\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ec\u30a4\u30e4\u30fc\"\n        db[\"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5b9f\u88c5\"]\n    end\n\n    rest --&gt; services\n    services --&gt; entities\n    services --&gt; repos\n    commands --&gt; services\n    queries --&gt; services\n    db --&gt; repos</code></pre>"},{"location":"setup_guide_mermaid/#41","title":"4.1 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020","text":"<pre><code>go-ddd/\n\u251c\u2500\u2500 app/\n\u2502   \u2514\u2500\u2500 backend/\n\u2502       \u251c\u2500\u2500 cmd/\n\u2502       \u2502   \u2514\u2500\u2500 marketplace/\n\u2502       \u2502       \u2514\u2500\u2500 main.go\n\u2502       \u2514\u2500\u2500 internal/\n\u2502           \u251c\u2500\u2500 domain/\n\u2502           \u2502   \u251c\u2500\u2500 entities/\n\u2502           \u2502   \u2514\u2500\u2500 repositories/\n\u2502           \u251c\u2500\u2500 application/\n\u2502           \u2502   \u251c\u2500\u2500 services/\n\u2502           \u2502   \u251c\u2500\u2500 command/\n\u2502           \u2502   \u2514\u2500\u2500 query/\n\u2502           \u251c\u2500\u2500 infrastructure/\n\u2502           \u2502   \u2514\u2500\u2500 db/\n\u2502           \u2514\u2500\u2500 interface/\n\u2502               \u2514\u2500\u2500 api/\n\u2502                   \u2514\u2500\u2500 rest/\n\u251c\u2500\u2500 docs/\n\u2502   \u2514\u2500\u2500 wiki/\n\u251c\u2500\u2500 ops/\n\u2502   \u2514\u2500\u2500 docker/\n\u2514\u2500\u2500 docker-compose.yml\n</code></pre>"},{"location":"setup_guide_mermaid/#42","title":"4.2 \u4e3b\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8","text":""},{"location":"setup_guide_mermaid/#421","title":"4.2.1 \u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4e2d\u5fc3\u3067\u3042\u308a\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3068\u30eb\u30fc\u30eb\u3092\u542b\u307f\u307e\u3059\u3002</p> <ul> <li>\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3: \u5546\u54c1\uff08Product\uff09\u3084\u51fa\u54c1\u8005\uff08Seller\uff09\u306a\u3069\u306e\u30d3\u30b8\u30cd\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</li> <li>\u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9: \u30c7\u30fc\u30bf\u306e\u6c38\u7d9a\u5316\u3092\u62c5\u5f53\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9</li> </ul>"},{"location":"setup_guide_mermaid/#422","title":"4.2.2 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306f\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u3001\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u30fc\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8abf\u6574\u3057\u307e\u3059\u3002</p> <ul> <li>\u30b5\u30fc\u30d3\u30b9: \u5546\u54c1\u30b5\u30fc\u30d3\u30b9\u3084\u51fa\u54c1\u8005\u30b5\u30fc\u30d3\u30b9\u306a\u3069\u3001\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u30b5\u30fc\u30d3\u30b9</li> <li>\u30b3\u30de\u30f3\u30c9: \u30c9\u30e1\u30a4\u30f3\u306e\u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u64cd\u4f5c\uff08\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\uff09</li> <li>\u30af\u30a8\u30ea: \u30c9\u30e1\u30a4\u30f3\u304b\u3089\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u64cd\u4f5c\uff08\u8aad\u307f\u53d6\u308a\u64cd\u4f5c\uff09</li> </ul>"},{"location":"setup_guide_mermaid/#423","title":"4.2.3 \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ec\u30a4\u30e4\u30fc\u306f\u3001\u6c38\u7d9a\u5316\u3084\u305d\u306e\u4ed6\u306e\u6280\u8853\u7684\u306a\u95a2\u5fc3\u4e8b\u3092\u51e6\u7406\u3057\u307e\u3059\u3002</p> <ul> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5b9f\u88c5: \u30ea\u30dd\u30b8\u30c8\u30ea\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5b9f\u88c5\uff08GORM \u3092\u4f7f\u7528\uff09</li> </ul>"},{"location":"setup_guide_mermaid/#424","title":"4.2.4 \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc","text":"<p>\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc\u306f\u3001\u5916\u90e8\u4e16\u754c\u3068\u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3057\u307e\u3059\u3002</p> <ul> <li>REST API: \u5546\u54c1\u3084\u51fa\u54c1\u8005\u306b\u95a2\u3059\u308bREST API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u63d0\u4f9b</li> </ul>"},{"location":"setup_guide_mermaid/#5-api","title":"5. API \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8","text":"<p>Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u4ee5\u4e0b\u306eREST API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff1a</p> <pre><code>flowchart TD\n    subgraph \"API \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\"\n        subgraph \"\u5546\u54c1 API\"\n            createProduct[\"POST /api/v1/products\"]\n            getAllProducts[\"GET /api/v1/products\"]\n            getProductById[\"GET /api/v1/products/{id}\"]\n            updateProduct[\"PUT /api/v1/products/{id}\"]\n        end\n\n        subgraph \"\u51fa\u54c1\u8005 API\"\n            createSeller[\"POST /api/v1/sellers\"]\n            getAllSellers[\"GET /api/v1/sellers\"]\n            getSellerById[\"GET /api/v1/sellers/{id}\"]\n            updateSellerName[\"PUT /api/v1/sellers/{id}/name\"]\n            updateSellerEmail[\"PUT /api/v1/sellers/{id}/email\"]\n            deleteSeller[\"DELETE /api/v1/sellers/{id}\"]\n        end\n\n        subgraph \"\u30b7\u30b9\u30c6\u30e0 API\"\n            healthCheck[\"GET /api/v1/health\"]\n        end\n    end</code></pre>"},{"location":"setup_guide_mermaid/#51-api","title":"5.1 \u5546\u54c1 API","text":"\u30e1\u30bd\u30c3\u30c9 \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 \u8aac\u660e POST /api/v1/products \u65b0\u3057\u3044\u5546\u54c1\u3092\u4f5c\u6210 GET /api/v1/products \u3059\u3079\u3066\u306e\u5546\u54c1\u3092\u53d6\u5f97 GET /api/v1/products/{id} \u6307\u5b9aID\u306e\u5546\u54c1\u3092\u53d6\u5f97 PUT /api/v1/products/{id} \u6307\u5b9aID\u306e\u5546\u54c1\u3092\u66f4\u65b0"},{"location":"setup_guide_mermaid/#52-api","title":"5.2 \u51fa\u54c1\u8005 API","text":"\u30e1\u30bd\u30c3\u30c9 \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 \u8aac\u660e POST /api/v1/sellers \u65b0\u3057\u3044\u51fa\u54c1\u8005\u3092\u4f5c\u6210 GET /api/v1/sellers \u3059\u3079\u3066\u306e\u51fa\u54c1\u8005\u3092\u53d6\u5f97 GET /api/v1/sellers/{id} \u6307\u5b9aID\u306e\u51fa\u54c1\u8005\u3092\u53d6\u5f97 PUT /api/v1/sellers/{id}/name \u6307\u5b9aID\u306e\u51fa\u54c1\u8005\u306e\u540d\u524d\u3092\u66f4\u65b0 PUT /api/v1/sellers/{id}/email \u6307\u5b9aID\u306e\u51fa\u54c1\u8005\u306e\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u66f4\u65b0 DELETE /api/v1/sellers/{id} \u6307\u5b9aID\u306e\u51fa\u54c1\u8005\u3092\u524a\u9664"},{"location":"setup_guide_mermaid/#53-api","title":"5.3 \u30b7\u30b9\u30c6\u30e0 API","text":"\u30e1\u30bd\u30c3\u30c9 \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8 \u8aac\u660e GET /api/v1/health \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af"},{"location":"setup_guide_mermaid/#6","title":"6. \u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0","text":"<pre><code>flowchart TD\n    start([\u958b\u59cb]) --&gt; problem{\u554f\u984c\u306f?}\n    problem --&gt;|\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u30a8\u30e9\u30fc| db1[Docker Compose\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u304b\u78ba\u8a8d]\n    db1 --&gt; db2[\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u60c5\u5831\u304c\u6b63\u3057\u3044\u304b\u78ba\u8a8d]\n    problem --&gt;|\u30d3\u30eb\u30c9\u30a8\u30e9\u30fc| build1[Go\u4f9d\u5b58\u95a2\u4fc2\u304c\u6b63\u3057\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d]\n    build1 --&gt; build2[go mod tidy \u3092\u5b9f\u884c]\n    problem --&gt;|\u5b9f\u884c\u6642\u30a8\u30e9\u30fc| run1[\u30ed\u30b0\u3092\u78ba\u8a8d]\n    run1 --&gt; run2[\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u6210\u529f\u3057\u305f\u304b\u78ba\u8a8d]\n    db2 --&gt; issue[\u554f\u984c\u304c\u89e3\u6c7a\u3057\u306a\u3044\u5834\u5408\u306fIssue\u3092\u4f5c\u6210]\n    build2 --&gt; issue\n    run2 --&gt; issue\n    issue --&gt; stop([\u7d42\u4e86])</code></pre>"},{"location":"setup_guide_mermaid/#61","title":"6.1 \u3088\u304f\u3042\u308b\u554f\u984c\u3068\u89e3\u6c7a\u7b56","text":""},{"location":"setup_guide_mermaid/#_1","title":"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u30a8\u30e9\u30fc","text":"<p>\u75c7\u72b6: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u6642\u306b\u300cFailed to connect to database\u300d\u306a\u3069\u306e\u30a8\u30e9\u30fc\u304c\u8868\u793a\u3055\u308c\u308b</p> <p>\u89e3\u6c7a\u7b56: 1. Docker Compose\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u304b\u78ba\u8a8d: <code>docker-compose ps</code> 2. \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u60c5\u5831\u304c\u6b63\u3057\u3044\u304b\u78ba\u8a8d 3. \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b3\u30f3\u30c6\u30ca\u306b\u76f4\u63a5\u63a5\u7d9a\u3057\u3066\u307f\u308b: <code>docker-compose exec db_postgresql psql -U root -d mydb</code></p>"},{"location":"setup_guide_mermaid/#_2","title":"\u30d3\u30eb\u30c9\u30a8\u30e9\u30fc","text":"<p>\u75c7\u72b6: <code>go build</code> \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b</p> <p>\u89e3\u6c7a\u7b56: 1. Go\u4f9d\u5b58\u95a2\u4fc2\u304c\u6b63\u3057\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d: <code>go mod download</code> 2. \u4f9d\u5b58\u95a2\u4fc2\u3092\u6574\u7406: <code>go mod tidy</code> 3. Go\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c1.23\u4ee5\u4e0a\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d: <code>go version</code></p>"},{"location":"setup_guide_mermaid/#_3","title":"\u5b9f\u884c\u6642\u30a8\u30e9\u30fc","text":"<p>\u75c7\u72b6: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b</p> <p>\u89e3\u6c7a\u7b56: 1. \u30ed\u30b0\u3092\u78ba\u8a8d\u3057\u3066\u5177\u4f53\u7684\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u7279\u5b9a 2. \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u6210\u529f\u3057\u305f\u304b\u78ba\u8a8d 3. \u5fc5\u8981\u306a\u30c6\u30fc\u30d6\u30eb\u304c\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d</p>"},{"location":"setup_guide_mermaid/#7","title":"7. \u307e\u3068\u3081","text":"<p>\u3053\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30ac\u30a4\u30c9\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\uff10\u304b\u3089\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u539f\u5247\u306b\u5f93\u3063\u3066\u69cb\u7bc9\u3055\u308c\u305f\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u63a1\u7528\u3057\u3001\u5404\u30ec\u30a4\u30e4\u30fc\u304c\u660e\u78ba\u306b\u5206\u96e2\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <pre><code>flowchart LR\n    env[\"\u74b0\u5883\u69cb\u7bc9\"] --&gt; dev[\"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\"]\n    dev --&gt; test[\"\u30c6\u30b9\u30c8\"]\n    test --&gt; deploy[\"\u30c7\u30d7\u30ed\u30a4\"]\n\n    env -.-&gt; env_note[\"\u524d\u63d0\u6761\u4ef6\u3068\u74b0\u5883\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\"]\n    dev -.-&gt; dev_note[\"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u7bc9\u3068\u5b9f\u884c\"]\n    test -.-&gt; test_note[\"\u30c6\u30b9\u30c8\u3068\u691c\u8a3c\"]\n    deploy -.-&gt; deploy_note[\"\u30c7\u30d7\u30ed\u30a4\u3068\u904b\u7528\"]</code></pre> <p>\u74b0\u5883\u69cb\u7bc9: - \u524d\u63d0\u6761\u4ef6\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb - \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30af\u30ed\u30fc\u30f3 - \u4f9d\u5b58\u95a2\u4fc2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb - \u958b\u767a\u74b0\u5883\u306e\u8d77\u52d5</p> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a: - \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 - \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u69cb\u7bc9 - \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c</p> <p>\u30c6\u30b9\u30c8: - \u30c6\u30b9\u30c8\u306e\u5b9f\u884c - API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u78ba\u8a8d</p> <p>\u30c7\u30d7\u30ed\u30a4: - \u672c\u756a\u74b0\u5883\u3078\u306e\u30c7\u30d7\u30ed\u30a4 - \u76e3\u8996\u3068\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9</p> <p>\u3053\u306e\u30ac\u30a4\u30c9\u306b\u5f93\u3046\u3053\u3068\u3067\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7c21\u5358\u306b\u69cb\u7bc9\u3057\u3001\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u539f\u5247\u3092\u5b66\u3073\u3001\u5b9f\u8df5\u3059\u308b\u305f\u3081\u306e\u826f\u3044\u4f8b\u3068\u3057\u3066\u3082\u6d3b\u7528\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"setup_guide_mermaid/#8","title":"8. \u53c2\u8003\u30ea\u30f3\u30af","text":"<ul> <li>Go\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>Docker\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>GORM\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>Echo Framework\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9</li> </ul>"},{"location":"swagger_implementation/","title":"Swagger\u751f\u6210\u306e\u8a73\u7d30\u8aac\u660e","text":""},{"location":"swagger_implementation/#1","title":"1. \u6982\u8981","text":"<p>\u3053\u306e\u6587\u66f8\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308bSwagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u751f\u6210\u30d7\u30ed\u30bb\u30b9\u306b\u3064\u3044\u3066\u8a73\u7d30\u306b\u89e3\u8aac\u3057\u307e\u3059\u3002Swagger\u306f\u3001RESTful API\u306e\u305f\u3081\u306e\u4ed5\u69d8\u3068\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u751f\u6210\u30c4\u30fc\u30eb\u3067\u3042\u308a\u3001API\u306e\u8a2d\u8a08\u3001\u69cb\u7bc9\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316\u3001\u30c6\u30b9\u30c8\u3092\u52b9\u7387\u5316\u3057\u307e\u3059\u3002</p>"},{"location":"swagger_implementation/#11-swagger","title":"1.1 Swagger\u306e\u7279\u5fb4","text":"<p>Swagger\u306f\u4ee5\u4e0b\u306e\u7279\u5fb4\u3092\u6301\u3063\u3066\u3044\u307e\u3059\uff1a</p> <ol> <li>API\u4ed5\u69d8\u306e\u6a19\u6e96\u5316: OpenAPI\u4ed5\u69d8\u306b\u6e96\u62e0\u3057\u305fAPI\u5b9a\u7fa9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</li> <li>\u81ea\u52d5\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u751f\u6210: \u30b3\u30fc\u30c9\u304b\u3089API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u81ea\u52d5\u751f\u6210\u3057\u307e\u3059\u3002</li> <li>\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306aUI: API\u3092\u30d6\u30e9\u30a6\u30b6\u3067\u8996\u899a\u7684\u306b\u78ba\u8a8d\u3057\u3001\u30c6\u30b9\u30c8\u3067\u304d\u308bUI\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</li> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\u751f\u6210: \u69d8\u3005\u306a\u8a00\u8a9e\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u751f\u6210\u3067\u304d\u307e\u3059\u3002</li> </ol>"},{"location":"swagger_implementation/#12-swagger","title":"1.2 Swagger\u3092\u4f7f\u7528\u3059\u308b\u7406\u7531","text":"<p>API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u624b\u52d5\u3067\u4f5c\u6210\u30fb\u7dad\u6301\u3059\u308b\u3053\u3068\u306f\u6642\u9593\u304c\u304b\u304b\u308a\u3001\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3084\u3059\u3044\u3067\u3059\u3002Swagger\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\uff1a</p> <ol> <li>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068\u30b3\u30fc\u30c9\u306e\u540c\u671f: \u30b3\u30fc\u30c9\u304b\u3089\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u3001\u5e38\u306b\u6700\u65b0\u306e\u72b6\u614b\u3092\u7dad\u6301\u3067\u304d\u307e\u3059\u3002</li> <li>\u958b\u767a\u52b9\u7387\u306e\u5411\u4e0a: API\u306e\u4ed5\u69d8\u304c\u660e\u78ba\u306b\u306a\u308a\u3001\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3068\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u958b\u767a\u3092\u4e26\u884c\u3057\u3066\u9032\u3081\u3089\u308c\u307e\u3059\u3002</li> <li>\u30c6\u30b9\u30c8\u306e\u5bb9\u6613\u3055: Swagger UI\u3092\u4f7f\u7528\u3057\u3066\u3001API\u3092\u7c21\u5358\u306b\u30c6\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002</li> <li>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9023\u643a\u306e\u52b9\u7387\u5316: \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001API\u3068\u306e\u9023\u643a\u3092\u52b9\u7387\u5316\u3067\u304d\u307e\u3059\u3002</li> </ol>"},{"location":"swagger_implementation/#2-swagger","title":"2. Swagger\u751f\u6210\u306e\u5b9f\u88c5","text":""},{"location":"swagger_implementation/#21-swagger","title":"2.1 Swagger\u751f\u6210\u30b9\u30af\u30ea\u30d7\u30c8","text":"<p>\u672c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001<code>generate_swagger.go</code>\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u7528\u3057\u3066Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u305d\u306e\u30b3\u30fc\u30c9\u3067\u3059\uff1a</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"log\"\n    \"os\"\n    \"os/exec\"\n    \"path/filepath\"\n)\n\nfunc main() {\n    // \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078\u306e\u7d76\u5bfe\u30d1\u30b9\u3092\u53d6\u5f97\n    currentDir, err := os.Getwd()\n    if err != nil {\n        log.Fatalf(\"\u73fe\u5728\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f: %v\", err)\n    }\n\n    // \u30b9\u30af\u30ea\u30d7\u30c8\u304capp/backend/cmd/gen\u306b\u3042\u308b\u3068\u4eee\u5b9a\n    backendDir := filepath.Join(currentDir, \"app\", \"backend\")\n\n    // \u3059\u3067\u306b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\n    if _, err := os.Stat(filepath.Join(currentDir, \"cmd\", \"marketplace\", \"main.go\")); err == nil {\n        // \u3059\u3067\u306b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3044\u308b\n        backendDir = currentDir\n    } else if _, err := os.Stat(filepath.Join(currentDir, \"app\", \"backend\", \"cmd\", \"marketplace\", \"main.go\")); err == nil {\n        // \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u306b\u3044\u308b\n        backendDir = filepath.Join(currentDir, \"app\", \"backend\")\n    } else if _, err := os.Stat(filepath.Join(currentDir, \"..\", \"..\", \"cmd\", \"marketplace\", \"main.go\")); err == nil {\n        // app/backend/cmd/gen\u306b\u3044\u308b\n        backendDir = filepath.Join(currentDir, \"..\", \"..\")\n    }\n\n    // \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\n    err = os.Chdir(backendDir)\n    if err != nil {\n        log.Fatalf(\"%s\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078\u306e\u79fb\u52d5\u306b\u5931\u6557\u3057\u307e\u3057\u305f: %v\", backendDir, err)\n    }\n\n    log.Printf(\"Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u4e2d...\")\n    log.Printf(\"\u4e00\u822c\u7684\u306aAPI\u60c5\u5831\u3092\u751f\u6210\u4e2d\u3001\u691c\u7d22\u30c7\u30a3\u30ec\u30af\u30c8\u30ea:%s\", backendDir)\n\n    // swag\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u4e00\u6642\u7684\u306a\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\n    scriptPath := filepath.Join(os.TempDir(), \"run_swag.sh\")\n    scriptContent := `#!/bin/bash\nexport PATH=$PATH:$(go env GOPATH)/bin\ngo install github.com/swaggo/swag/cmd/swag@latest\nswag init -g cmd/marketplace/main.go -o docs\n`\n    err = os.WriteFile(scriptPath, []byte(scriptContent), 0755)\n    if err != nil {\n        log.Fatalf(\"\u4e00\u6642\u7684\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f: %v\", err)\n    }\n    defer os.Remove(scriptPath)\n\n    // \u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\n    cmd := exec.Command(\"/bin/bash\", scriptPath)\n    cmd.Stdout = os.Stdout\n    cmd.Stderr = os.Stderr\n    cmd.Env = append(os.Environ(), fmt.Sprintf(\"PATH=%s:%s\", os.Getenv(\"PATH\"), filepath.Join(os.Getenv(\"HOME\"), \"go\", \"bin\")))\n\n    log.Println(\"Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u4e2d...\")\n    err = cmd.Run()\n    if err != nil {\n        log.Fatalf(\"Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u751f\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f: %v\", err)\n    }\n\n    log.Println(\"Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u6b63\u5e38\u306b\u751f\u6210\u3055\u308c\u307e\u3057\u305f\uff01\")\n}\n</code></pre> <p>\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\uff1a</p> <ol> <li>\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d1\u30b9\u3092\u7279\u5b9a\u3057\u307e\u3059\u3002</li> <li>\u305d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002</li> <li>\u4e00\u6642\u7684\u306a\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\uff1a</li> <li>Go\u74b0\u5883\u306ePATH\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002</li> <li>swag\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002</li> <li><code>swag init</code>\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002</li> <li>\u751f\u6210\u7d50\u679c\u3092\u6a19\u6e96\u51fa\u529b\u306b\u8868\u793a\u3057\u307e\u3059\u3002</li> </ol>"},{"location":"swagger_implementation/#22-swagger","title":"2.2 Swagger\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3","text":"<p>Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u3001\u30b3\u30fc\u30c9\u5185\u306b\u7279\u5225\u306a\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u3001API\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3067\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u4f8b\u3067\u3059\uff1a</p> <pre><code>// GetAllProducts godoc\n// @Summary Get all products\n// @Description Get a list of all products\n// @Tags products\n// @Accept json\n// @Produce json\n// @Success 200 {array} response.ProductResponse\n// @Failure 500 {object} map[string]string\n// @Router /products [get]\nfunc (pc *ProductController) GetAllProducts(c echo.Context) error {\n    // \u5b9f\u88c5\u30b3\u30fc\u30c9\n}\n</code></pre> <p>\u4e3b\u306aSwagger\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff1a</p> <ul> <li><code>@Summary</code>: API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u7c21\u5358\u306a\u8aac\u660e</li> <li><code>@Description</code>: \u3088\u308a\u8a73\u7d30\u306a\u8aac\u660e</li> <li><code>@Tags</code>: API\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\u305f\u3081\u306e\u30bf\u30b0</li> <li><code>@Accept</code>: \u53d7\u3051\u5165\u308c\u308b\u30b3\u30f3\u30c6\u30f3\u30c4\u30bf\u30a4\u30d7</li> <li><code>@Produce</code>: \u751f\u6210\u3059\u308b\u30b3\u30f3\u30c6\u30f3\u30c4\u30bf\u30a4\u30d7</li> <li><code>@Param</code>: \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5b9a\u7fa9</li> <li><code>@Success</code>: \u6210\u529f\u6642\u306e\u30ec\u30b9\u30dd\u30f3\u30b9</li> <li><code>@Failure</code>: \u30a8\u30e9\u30fc\u6642\u306e\u30ec\u30b9\u30dd\u30f3\u30b9</li> <li><code>@Router</code>: \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u30d1\u30b9\u3068HTTP\u30e1\u30bd\u30c3\u30c9</li> </ul>"},{"location":"swagger_implementation/#23","title":"2.3 \u751f\u6210\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb","text":"<p>Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u751f\u6210\u30d7\u30ed\u30bb\u30b9\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\uff1a</p> <ol> <li>docs.go: Swagger\u306e\u5b9a\u7fa9\u60c5\u5831\u3092\u542b\u3080Go\u30d5\u30a1\u30a4\u30eb</li> <li>swagger.json: JSON\u5f62\u5f0f\u306eSwagger\u5b9a\u7fa9</li> <li>swagger.yaml: YAML\u5f62\u5f0f\u306eSwagger\u5b9a\u7fa9</li> </ol> <p>\u3053\u308c\u3089\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u3001<code>docs</code>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u751f\u6210\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"swagger_implementation/#3-swagger","title":"3. Swagger\u751f\u6210\u306e\u4f7f\u3044\u65b9","text":""},{"location":"swagger_implementation/#31-swagger","title":"3.1 Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u751f\u6210","text":"<p>Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\uff1a</p> <pre><code>cd app/backend/cmd/gen\ngo run generate_swagger.go\n</code></pre> <p>\u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001<code>app/backend/docs</code>\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306bSwagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"swagger_implementation/#32-swagger-ui","title":"3.2 Swagger UI\u306e\u8a2d\u5b9a","text":"<p>\u751f\u6210\u3055\u308c\u305fSwagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30d6\u30e9\u30a6\u30b6\u3067\u8868\u793a\u3059\u308b\u306b\u306f\u3001Echo Framework\u306b<code>github.com/swaggo/echo-swagger</code>\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff1a</p> <pre><code>import (\n    \"github.com/labstack/echo/v4\"\n    echoSwagger \"github.com/swaggo/echo-swagger\"\n    _ \"github.com/sklinkert/go-ddd/docs\" // Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n)\n\nfunc main() {\n    e := echo.New()\n\n    // Swagger UI\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u8a2d\u5b9a\n    e.GET(\"/swagger/*\", echoSwagger.WrapHandler)\n\n    // \u305d\u306e\u4ed6\u306e\u30eb\u30fc\u30c8\u8a2d\u5b9a\n    // ...\n\n    e.Start(\":9090\")\n}\n</code></pre> <p>\u3053\u308c\u306b\u3088\u308a\u3001<code>http://localhost:9090/swagger/index.html</code> \u3067Swagger UI\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"swagger_implementation/#33-swagger","title":"3.3 Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u66f4\u65b0","text":"<p>API\u306e\u5909\u66f4\u304c\u3042\u3063\u305f\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u3067Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u66f4\u65b0\u3057\u307e\u3059\uff1a</p> <ol> <li>API\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306eSwagger\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002</li> <li><code>generate_swagger.go</code>\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u518d\u5b9f\u884c\u3057\u307e\u3059\u3002</li> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u518d\u8d77\u52d5\u3057\u3066\u3001\u66f4\u65b0\u3055\u308c\u305fSwagger UI\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002</li> </ol>"},{"location":"swagger_implementation/#4-swagger","title":"4. Swagger\u306e\u6d3b\u7528\u65b9\u6cd5","text":""},{"location":"swagger_implementation/#41-api","title":"4.1 API\u306e\u8a2d\u8a08\u3068\u691c\u8a3c","text":"<p>Swagger UI\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001API\u306e\u8a2d\u8a08\u3092\u8996\u899a\u7684\u306b\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001API\u306e\u4e00\u8cab\u6027\u3092\u4fdd\u3061\u3001\u8a2d\u8a08\u4e0a\u306e\u554f\u984c\u3092\u65e9\u671f\u306b\u767a\u898b\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"swagger_implementation/#42-api","title":"4.2 API\u306e\u30c6\u30b9\u30c8","text":"<p>Swagger UI\u306b\u306f\u3001API\u3092\u30c6\u30b9\u30c8\u3059\u308b\u305f\u3081\u306e\u6a5f\u80fd\u304c\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u5404\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u5bfe\u3057\u3066\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5165\u529b\u3057\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u3066\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"swagger_implementation/#43","title":"4.3 \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u958b\u767a\u3068\u306e\u9023\u643a","text":"<p>\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u958b\u767a\u8005\u306f\u3001Swagger UI\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u3067\u3001API\u306e\u4ed5\u69d8\u3092\u7406\u89e3\u3057\u3001\u9069\u5207\u306b\u9023\u643a\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001Swagger\u304b\u3089\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002</p>"},{"location":"swagger_implementation/#44-api","title":"4.4 API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u5171\u6709","text":"<p>\u751f\u6210\u3055\u308c\u305fSwagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001\u30c1\u30fc\u30e0\u5185\u3084\u5916\u90e8\u306e\u958b\u767a\u8005\u3068\u5171\u6709\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001API\u306e\u7406\u89e3\u3068\u5229\u7528\u304c\u4fc3\u9032\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"swagger_implementation/#5","title":"5. \u307e\u3068\u3081","text":"<p>Swagger\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4f5c\u6210\u3068\u7dad\u6301\u304c\u52b9\u7387\u5316\u3055\u308c\u3001\u958b\u767a\u30c1\u30fc\u30e0\u5168\u4f53\u306e\u751f\u7523\u6027\u304c\u5411\u4e0a\u3057\u307e\u3059\u3002\u672c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001<code>generate_swagger.go</code>\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u7528\u3057\u3066\u3001Swagger\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u7c21\u5358\u306b\u751f\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p> <p>API\u306e\u5909\u66f4\u304c\u3042\u3063\u305f\u5834\u5408\u306f\u3001Swagger\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u66f4\u65b0\u3057\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u518d\u751f\u6210\u3059\u308b\u3053\u3068\u3067\u3001\u5e38\u306b\u6700\u65b0\u306e\u72b6\u614b\u3092\u7dad\u6301\u3067\u304d\u307e\u3059\u3002Swagger UI\u3092\u6d3b\u7528\u3059\u308b\u3053\u3068\u3067\u3001API\u306e\u8a2d\u8a08\u3001\u30c6\u30b9\u30c8\u3001\u5171\u6709\u304c\u52b9\u7387\u5316\u3055\u308c\u3001\u3088\u308a\u826f\u3044API\u306e\u958b\u767a\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"swagger_implementation/#6","title":"6. \u53c2\u8003\u30ea\u30f3\u30af","text":"<ul> <li>Swaggo\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8</li> <li>OpenAPI\u4ed5\u69d8</li> <li>Echo Swagger</li> <li>Swagger UI</li> </ul>"},{"location":"system_implementation/","title":"Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30b7\u30b9\u30c6\u30e0\u6a5f\u80fd\u306e\u5b9f\u88c5\u624b\u9806","text":""},{"location":"system_implementation/#1","title":"1. \u6982\u8981","text":"<p>\u3053\u306e\u6587\u66f8\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3051\u308b\u30b7\u30b9\u30c6\u30e0\u6a5f\u80fd\u306e\u5b9f\u88c5\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\u30b7\u30b9\u30c6\u30e0\u6a5f\u80fd\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u306b\u95a2\u308f\u308b\u6a2a\u65ad\u7684\u306a\u95a2\u5fc3\u4e8b\uff08\u30af\u30ed\u30b9\u30ab\u30c3\u30c6\u30a3\u30f3\u30b0\u30b3\u30f3\u30b5\u30fc\u30f3\uff09\u3092\u6271\u3044\u307e\u3059\u3002\u5b9f\u88c5\u306f\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\uff08DDD\uff09\u306e\u539f\u5247\u306b\u5f93\u3044\u3001\u30ec\u30a4\u30e4\u30fc\u30c9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p>"},{"location":"system_implementation/#11","title":"1.1 \u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406\u30d5\u30ed\u30fc","text":"<p>\u4ee5\u4e0b\u306fAPI\u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406\u306e\u30d5\u30ed\u30fc\u3092\u8868\u3059\u30b9\u30c6\u30fc\u30c8\u56f3\u3067\u3059\uff1a</p> <p></p>"},{"location":"system_implementation/#2","title":"2. \u5b9f\u88c5\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u6a5f\u80fd","text":"<p>Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u30b7\u30b9\u30c6\u30e0\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff1a</p> <ol> <li>RESTful API: \u6a19\u6e96\u7684\u306aRESTful API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u63d0\u4f9b</li> <li>\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3067\u306e\u4e00\u8cab\u3057\u305f\u30a8\u30e9\u30fc\u51e6\u7406</li> <li>\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u7ba1\u7406: \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u4f5c\u6210\u65e5\u6642\u3068\u66f4\u65b0\u65e5\u6642\u306e\u7ba1\u7406</li> <li>\u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8: \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u8ad6\u7406\u524a\u9664\u6a5f\u80fd</li> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3: \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b9\u30ad\u30fc\u30de\u306e\u81ea\u52d5\u4f5c\u6210\u3068\u66f4\u65b0</li> </ol>"},{"location":"system_implementation/#3","title":"3. \u5b9f\u88c5\u30b9\u30c6\u30c3\u30d7","text":"<p>\u4ee5\u4e0b\u306f\u30b7\u30b9\u30c6\u30e0\u6a5f\u80fd\u306e\u5b9f\u88c5\u30b9\u30c6\u30c3\u30d7\u306e\u6982\u8981\u3092\u8868\u3059\u30d5\u30ed\u30fc\u56f3\u3067\u3059\uff1a</p> <p></p>"},{"location":"system_implementation/#31-restful-api","title":"3.1 RESTful API","text":"<p>Echo\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u7528\u3057\u305fRESTful API\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f\u3001Echo\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5b9f\u88c5\u306e\u8a73\u7d30\u89e3\u8aac\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"system_implementation/#311-api","title":"3.1.1 API\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u8a2d\u5b9a","text":"<p>API\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u8a2d\u5b9a\u3067\u306f\u3001Echo\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u7528\u3057\u3066\u5404\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u8a73\u7d30\u306a\u5b9f\u88c5\u306fEcho\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5b9f\u88c5\u306e\u8a73\u7d30\u89e3\u8aac\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"system_implementation/#312","title":"3.1.2 \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4fee\u6b63","text":"<p>\u5546\u54c1\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3068\u51fa\u54c1\u8005\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306f\u3001API\u30b0\u30eb\u30fc\u30d7\u3092\u53d7\u3051\u53d6\u308b\u3088\u3046\u306b\u4fee\u6b63\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306a\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff1a</p> <ul> <li>\u5546\u54c1\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc</li> <li>\u51fa\u54c1\u8005\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc</li> </ul>"},{"location":"system_implementation/#32","title":"3.2 \u8a8d\u8a3c\u30fb\u8a8d\u53ef","text":"<p>JWT\uff08JSON Web Token\uff09\u3092\u4f7f\u7528\u3057\u305f\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f\u3001Echo JWT\u8a8d\u8a3c\u306e\u8a73\u7d30\u89e3\u8aac\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>JWT\u8a8d\u8a3c\u306f\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff1a</p> <ol> <li>\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\u3068\u30c8\u30fc\u30af\u30f3\u767a\u884c</li> <li>\u4fdd\u8b77\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u5236\u5fa1</li> <li>\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306a\u8a8d\u8a3c\u30e1\u30ab\u30cb\u30ba\u30e0</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56\uff08\u30c8\u30fc\u30af\u30f3\u306e\u6709\u52b9\u671f\u9650\u3001\u7f72\u540d\u691c\u8a3c\u306a\u3069\uff09</li> </ol>"},{"location":"system_implementation/#33","title":"3.3 \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0","text":""},{"location":"system_implementation/#331","title":"3.3.1 \u30ab\u30b9\u30bf\u30e0\u30a8\u30e9\u30fc\u30bf\u30a4\u30d7\u306e\u5b9a\u7fa9","text":"<ol> <li><code>internal/application/common/errors.go</code> \u306b\u30ab\u30b9\u30bf\u30e0\u30a8\u30e9\u30fc\u30bf\u30a4\u30d7\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package common\n\nimport (\n    \"fmt\"\n)\n\n// ErrorType \u306f\u30a8\u30e9\u30fc\u306e\u7a2e\u985e\u3092\u8868\u3059\u578b\ntype ErrorType string\n\nconst (\n    // NotFound \u306f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306e\u30a8\u30e9\u30fc\n    NotFound ErrorType = \"NOT_FOUND\"\n\n    // ValidationError \u306f\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u30a8\u30e9\u30fc\n    ValidationError ErrorType = \"VALIDATION_ERROR\"\n\n    // DatabaseError \u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u64cd\u4f5c\u306b\u95a2\u3059\u308b\u30a8\u30e9\u30fc\n    DatabaseError ErrorType = \"DATABASE_ERROR\"\n\n    // UnknownError \u306f\u672a\u5206\u985e\u306e\u30a8\u30e9\u30fc\n    UnknownError ErrorType = \"UNKNOWN_ERROR\"\n)\n\n// AppError \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u56fa\u6709\u306e\u30a8\u30e9\u30fc\u578b\ntype AppError struct {\n    Type    ErrorType\n    Message string\n    Err     error\n}\n\n// Error \u306f\u30a8\u30e9\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\nfunc (e AppError) Error() string {\n    if e.Err != nil {\n        return fmt.Sprintf(\"%s: %s (%s)\", e.Type, e.Message, e.Err.Error())\n    }\n    return fmt.Sprintf(\"%s: %s\", e.Type, e.Message)\n}\n\n// NewNotFoundError \u306f\u65b0\u3057\u3044NotFound\u30a8\u30e9\u30fc\u3092\u4f5c\u6210\nfunc NewNotFoundError(message string, err error) AppError {\n    return AppError{\n        Type:    NotFound,\n        Message: message,\n        Err:     err,\n    }\n}\n\n// NewValidationError \u306f\u65b0\u3057\u3044ValidationError\u3092\u4f5c\u6210\nfunc NewValidationError(message string, err error) AppError {\n    return AppError{\n        Type:    ValidationError,\n        Message: message,\n        Err:     err,\n    }\n}\n\n// NewDatabaseError \u306f\u65b0\u3057\u3044DatabaseError\u3092\u4f5c\u6210\nfunc NewDatabaseError(message string, err error) AppError {\n    return AppError{\n        Type:    DatabaseError,\n        Message: message,\n        Err:     err,\n    }\n}\n\n// NewUnknownError \u306f\u65b0\u3057\u3044UnknownError\u3092\u4f5c\u6210\nfunc NewUnknownError(message string, err error) AppError {\n    return AppError{\n        Type:    UnknownError,\n        Message: message,\n        Err:     err,\n    }\n}\n</code></pre>"},{"location":"system_implementation/#332","title":"3.3.2 \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u5b9f\u88c5","text":"<p>\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3067\u4e00\u8cab\u3057\u305f\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3067\u3059\u3002\u8a73\u7d30\u306a\u5b9f\u88c5\u306fEcho\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5b9f\u88c5\u306e\u8a73\u7d30\u89e3\u8aac\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306f\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff1a</p> <ol> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a8\u30e9\u30fc\uff08AppError\uff09\u3092\u9069\u5207\u306aHTTP\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u5909\u63db</li> <li>Echo\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u6a19\u6e96HTTP\u30a8\u30e9\u30fc\u306e\u51e6\u7406</li> <li>\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc\u306e\u9069\u5207\u306a\u51e6\u7406</li> </ol> <p>\u3053\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306b\u3088\u308a\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306f\u5e38\u306b\u4e00\u8cab\u3057\u305f\u5f62\u5f0f\u306e\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"system_implementation/#333","title":"3.3.3 \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u9069\u7528","text":"<p>\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306f\u3001Echo\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30eb\u30fc\u30bf\u30fc\u8a2d\u5b9a\u6642\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u8a73\u7d30\u306a\u5b9f\u88c5\u306fEcho\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5b9f\u88c5\u306e\u8a73\u7d30\u89e3\u8aac\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u9069\u7528\u306b\u3088\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3067\u4e00\u8cab\u3057\u305f\u30a8\u30e9\u30fc\u51e6\u7406\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u958b\u767a\u8005\u306f\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u306b\u96c6\u4e2d\u3057\u3001\u30a8\u30e9\u30fc\u51e6\u7406\u306e\u8a73\u7d30\u3092\u6c17\u306b\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"system_implementation/#34","title":"3.4 \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u7ba1\u7406","text":""},{"location":"system_implementation/#341","title":"3.4.1 \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u6301\u3064\u30d9\u30fc\u30b9\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u4f5c\u6210","text":"<ol> <li><code>internal/domain/entities/base_entity.go</code> \u306b\u30d9\u30fc\u30b9\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package entities\n\nimport (\n    \"time\"\n)\n\n// BaseEntity \u306f\u3059\u3079\u3066\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u5171\u901a\u3059\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6301\u3064\u69cb\u9020\u4f53\ntype BaseEntity struct {\n    CreatedAt time.Time\n    UpdatedAt time.Time\n    DeletedAt *time.Time\n}\n\n// IsDeleted \u306f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304c\u524a\u9664\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u8fd4\u3059\nfunc (e *BaseEntity) IsDeleted() bool {\n    return e.DeletedAt != nil\n}\n\n// SetCreatedAt \u306f\u4f5c\u6210\u65e5\u6642\u3092\u8a2d\u5b9a\u3059\u308b\nfunc (e *BaseEntity) SetCreatedAt(t time.Time) {\n    e.CreatedAt = t\n}\n\n// SetUpdatedAt \u306f\u66f4\u65b0\u65e5\u6642\u3092\u8a2d\u5b9a\u3059\u308b\nfunc (e *BaseEntity) SetUpdatedAt(t time.Time) {\n    e.UpdatedAt = t\n}\n\n// SoftDelete \u306f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u8ad6\u7406\u524a\u9664\u3059\u308b\nfunc (e *BaseEntity) SoftDelete() {\n    now := time.Now()\n    e.DeletedAt = &amp;now\n}\n</code></pre>"},{"location":"system_implementation/#342","title":"3.4.2 \u65e2\u5b58\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u4fee\u6b63","text":"<ol> <li>\u5546\u54c1\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u51fa\u54c1\u8005\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4fee\u6b63\u3057\u3066\u3001\u30d9\u30fc\u30b9\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u57cb\u3081\u8fbc\u307f\u307e\u3059\u3002</li> </ol> <pre><code>// Product \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\ntype Product struct {\n    Id          string\n    Name        string\n    Description string\n    Price       float64\n    SellerId    string\n    BaseEntity  // \u30d9\u30fc\u30b9\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u57cb\u3081\u8fbc\u3080\n}\n\n// Seller \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\ntype Seller struct {\n    Id         string\n    Name       string\n    Email      string\n    BaseEntity // \u30d9\u30fc\u30b9\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u57cb\u3081\u8fbc\u3080\n}\n</code></pre>"},{"location":"system_implementation/#35","title":"3.5 \u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8","text":""},{"location":"system_implementation/#351","title":"3.5.1 \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u4fee\u6b63","text":"<ol> <li>\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5b9f\u88c5\u3092\u4fee\u6b63\u3057\u3066\u3001\u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002</li> </ol> <pre><code>// GormProductRepository\nfunc (r *GormProductRepository) FindAll() ([]entities.Product, error) {\n    var dbProducts []DBProduct\n    // \u524a\u9664\u3055\u308c\u3066\u3044\u306a\u3044\u30ec\u30b3\u30fc\u30c9\u306e\u307f\u3092\u53d6\u5f97\n    result := r.db.Where(\"deleted_at IS NULL\").Find(&amp;dbProducts)\n    if result.Error != nil {\n        return nil, common.NewDatabaseError(\"Failed to find products\", result.Error)\n    }\n\n    products := make([]entities.Product, len(dbProducts))\n    for i, dbProduct := range dbProducts {\n        products[i] = toDomainProduct(dbProduct)\n    }\n    return products, nil\n}\n\n// GormSellerRepository\nfunc (r *GormSellerRepository) Delete(id string) error {\n    // \u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8\n    result := r.db.Model(&amp;DBSeller{}).Where(\"id = ?\", id).Update(\"deleted_at\", time.Now())\n    if result.Error != nil {\n        return common.NewDatabaseError(\"Failed to delete seller\", result.Error)\n    }\n    if result.RowsAffected == 0 {\n        return common.NewNotFoundError(\"Seller not found\", nil)\n    }\n    return nil\n}\n</code></pre>"},{"location":"system_implementation/#36","title":"3.6 \u74b0\u5883\u5909\u6570\u7ba1\u7406","text":"<p>\u74b0\u5883\u5909\u6570\u7ba1\u7406\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u74b0\u5883\u5909\u6570\u7ba1\u7406\uff08godotenv\uff09\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>\u74b0\u5883\u5909\u6570\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u4ee5\u4e0b\u306e\u30e1\u30ea\u30c3\u30c8\u304c\u5f97\u3089\u308c\u307e\u3059\uff1a</p> <ol> <li>\u7570\u306a\u308b\u74b0\u5883\uff08\u958b\u767a\u3001\u30c6\u30b9\u30c8\u3001\u672c\u756a\uff09\u3067\u7570\u306a\u308b\u8a2d\u5b9a\u3092\u4f7f\u7528\u53ef\u80fd</li> <li>\u6a5f\u5bc6\u60c5\u5831\uff08\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d1\u30b9\u30ef\u30fc\u30c9\u3001API\u30ad\u30fc\u306a\u3069\uff09\u3092\u30b3\u30fc\u30c9\u304b\u3089\u5206\u96e2</li> <li>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u518d\u30d3\u30eb\u30c9\u306a\u3057\u306b\u8a2d\u5b9a\u3092\u5909\u66f4\u53ef\u80fd</li> </ol>"},{"location":"system_implementation/#37","title":"3.7 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3","text":""},{"location":"system_implementation/#371","title":"3.7.1 \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u6a5f\u80fd\u306e\u5b9f\u88c5","text":"<ol> <li><code>internal/infrastructure/db/postgres/migration.go</code> \u306b\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package postgres\n\nimport (\n    \"gorm.io/gorm\"\n)\n\n// RunMigrations \u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\nfunc RunMigrations(db *gorm.DB) error {\n    // \u81ea\u52d5\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\n    err := db.AutoMigrate(\n        &amp;DBProduct{},\n        &amp;DBSeller{},\n    )\n    return err\n}\n</code></pre>"},{"location":"system_implementation/#362","title":"3.6.2 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u6642\u306b\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c","text":"<ol> <li><code>cmd/marketplace/main.go</code> \u3092\u4fee\u6b63\u3057\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u6642\u306b\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002</li> </ol> <pre><code>func main() {\n    dsn := \"host=localhost user=root password=password dbname=mydb port=9920 sslmode=disable TimeZone=Asia/Shanghai\"\n    port := \":9090\"\n\n    gormDB, err := gorm.Open(postgres.Open(dsn), &amp;gorm.Config{})\n    if err != nil {\n        log.Fatalf(\"Failed to connect to database: %v\", err)\n    }\n\n    // \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\n    if err := postgres2.RunMigrations(gormDB); err != nil {\n        log.Fatalf(\"Failed to run migrations: %v\", err)\n    }\n\n    // \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u521d\u671f\u5316\n    productRepo := postgres2.NewGormProductRepository(gormDB)\n    sellerRepo := postgres2.NewGormSellerRepository(gormDB)\n\n    // \u30b5\u30fc\u30d3\u30b9\u306e\u521d\u671f\u5316\n    productService := services.NewProductService(productRepo, sellerRepo)\n    sellerService := services.NewSellerService(sellerRepo)\n\n    // Echo\u30b5\u30fc\u30d0\u30fc\u306e\u521d\u671f\u5316\n    e := echo.New()\n\n    // \u30eb\u30fc\u30bf\u30fc\u306e\u8a2d\u5b9a\n    rest.SetupRouter(e, productService, sellerService)\n\n    // \u30b5\u30fc\u30d0\u30fc\u306e\u8d77\u52d5\n    if err := e.Start(port); err != nil {\n        log.Fatalf(\"Failed to start server: %v\", err)\n    }\n}\n</code></pre>"},{"location":"system_implementation/#4","title":"4. \u30c6\u30b9\u30c8","text":""},{"location":"system_implementation/#41","title":"4.1 \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u30c6\u30b9\u30c8","text":"<ol> <li><code>internal/application/common/errors_test.go</code> \u306b\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package common\n\nimport (\n    \"errors\"\n    \"testing\"\n)\n\nfunc TestAppError_Error(t *testing.T) {\n    // \u5185\u90e8\u30a8\u30e9\u30fc\u304c\u3042\u308b\u5834\u5408\n    innerErr := errors.New(\"inner error\")\n    appErr := AppError{\n        Type:    ValidationError,\n        Message: \"validation failed\",\n        Err:     innerErr,\n    }\n    expected := \"VALIDATION_ERROR: validation failed (inner error)\"\n    if appErr.Error() != expected {\n        t.Errorf(\"AppError.Error() = %v, want %v\", appErr.Error(), expected)\n    }\n\n    // \u5185\u90e8\u30a8\u30e9\u30fc\u304c\u306a\u3044\u5834\u5408\n    appErr = AppError{\n        Type:    NotFound,\n        Message: \"entity not found\",\n        Err:     nil,\n    }\n    expected = \"NOT_FOUND: entity not found\"\n    if appErr.Error() != expected {\n        t.Errorf(\"AppError.Error() = %v, want %v\", appErr.Error(), expected)\n    }\n}\n\nfunc TestNewErrors(t *testing.T) {\n    innerErr := errors.New(\"inner error\")\n\n    // NotFoundError\n    err := NewNotFoundError(\"not found\", innerErr)\n    if err.Type != NotFound {\n        t.Errorf(\"NewNotFoundError().Type = %v, want %v\", err.Type, NotFound)\n    }\n    if err.Message != \"not found\" {\n        t.Errorf(\"NewNotFoundError().Message = %v, want %v\", err.Message, \"not found\")\n    }\n    if err.Err != innerErr {\n        t.Errorf(\"NewNotFoundError().Err = %v, want %v\", err.Err, innerErr)\n    }\n\n    // ValidationError\n    err = NewValidationError(\"validation failed\", innerErr)\n    if err.Type != ValidationError {\n        t.Errorf(\"NewValidationError().Type = %v, want %v\", err.Type, ValidationError)\n    }\n\n    // DatabaseError\n    err = NewDatabaseError(\"database error\", innerErr)\n    if err.Type != DatabaseError {\n        t.Errorf(\"NewDatabaseError().Type = %v, want %v\", err.Type, DatabaseError)\n    }\n\n    // UnknownError\n    err = NewUnknownError(\"unknown error\", innerErr)\n    if err.Type != UnknownError {\n        t.Errorf(\"NewUnknownError().Type = %v, want %v\", err.Type, UnknownError)\n    }\n}\n</code></pre>"},{"location":"system_implementation/#42","title":"4.2 \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u30c6\u30b9\u30c8","text":"<ol> <li><code>internal/interface/api/rest/middleware_test.go</code> \u306b\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package rest\n\nimport (\n    \"errors\"\n    \"net/http\"\n    \"net/http/httptest\"\n    \"strings\"\n    \"testing\"\n\n    \"github.com/labstack/echo/v4\"\n    \"github.com/sklinkert/go-ddd/internal/application/common\"\n)\n\nfunc TestErrorHandlerMiddleware(t *testing.T) {\n    e := echo.New()\n\n    // \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\n    testCases := []struct {\n        name           string\n        handlerError   error\n        expectedStatus int\n        expectedError  string\n    }{\n        {\n            name:           \"No error\",\n            handlerError:   nil,\n            expectedStatus: http.StatusOK,\n            expectedError:  \"\",\n        },\n        {\n            name:           \"NotFound error\",\n            handlerError:   common.NewNotFoundError(\"entity not found\", nil),\n            expectedStatus: http.StatusNotFound,\n            expectedError:  \"NotFound\",\n        },\n        {\n            name:           \"Validation error\",\n            handlerError:   common.NewValidationError(\"validation failed\", nil),\n            expectedStatus: http.StatusBadRequest,\n            expectedError:  \"ValidationError\",\n        },\n        {\n            name:           \"Database error\",\n            handlerError:   common.NewDatabaseError(\"database error\", nil),\n            expectedStatus: http.StatusInternalServerError,\n            expectedError:  \"DatabaseError\",\n        },\n        {\n            name:           \"Unknown error\",\n            handlerError:   common.NewUnknownError(\"unknown error\", nil),\n            expectedStatus: http.StatusInternalServerError,\n            expectedError:  \"InternalServerError\",\n        },\n        {\n            name:           \"Generic error\",\n            handlerError:   errors.New(\"generic error\"),\n            expectedStatus: http.StatusInternalServerError,\n            expectedError:  \"InternalServerError\",\n        },\n    }\n\n    for _, tc := range testCases {\n        t.Run(tc.name, func(t *testing.T) {\n            // \u30c6\u30b9\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\n            handler := func(c echo.Context) error {\n                return tc.handlerError\n            }\n\n            // \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u9069\u7528\n            middlewareHandler := ErrorHandlerMiddleware(handler)\n\n            // \u30ea\u30af\u30a8\u30b9\u30c8\u4f5c\u6210\n            req := httptest.NewRequest(http.MethodGet, \"/\", nil)\n            rec := httptest.NewRecorder()\n            c := e.NewContext(req, rec)\n\n            // \u30cf\u30f3\u30c9\u30e9\u30fc\u5b9f\u884c\n            middlewareHandler(c)\n\n            // \u30ec\u30b9\u30dd\u30f3\u30b9\u691c\u8a3c\n            if tc.handlerError == nil {\n                if rec.Code != http.StatusOK {\n                    t.Errorf(\"Expected status code %d, got %d\", http.StatusOK, rec.Code)\n                }\n            } else {\n                if rec.Code != tc.expectedStatus {\n                    t.Errorf(\"Expected status code %d, got %d\", tc.expectedStatus, rec.Code)\n                }\n\n                if tc.expectedError != \"\" &amp;&amp; !strings.Contains(rec.Body.String(), tc.expectedError) {\n                    t.Errorf(\"Expected error %s, got %s\", tc.expectedError, rec.Body.String())\n                }\n            }\n        })\n    }\n}\n</code></pre>"},{"location":"system_implementation/#43","title":"4.3 \u30d9\u30fc\u30b9\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30c6\u30b9\u30c8","text":"<ol> <li><code>internal/domain/entities/base_entity_test.go</code> \u306b\u30d9\u30fc\u30b9\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</li> </ol> <pre><code>package entities\n\nimport (\n    \"testing\"\n    \"time\"\n)\n\nfunc TestBaseEntity_IsDeleted(t *testing.T) {\n    // \u524a\u9664\u3055\u308c\u3066\u3044\u306a\u3044\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\n    entity := BaseEntity{\n        CreatedAt: time.Now(),\n        UpdatedAt: time.Now(),\n        DeletedAt: nil,\n    }\n\n    if entity.IsDeleted() {\n        t.Error(\"BaseEntity.IsDeleted() = true, want false\")\n    }\n\n    // \u524a\u9664\u3055\u308c\u305f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\n    now := time.Now()\n    entity.DeletedAt = &amp;now\n\n    if !entity.IsDeleted() {\n        t.Error(\"BaseEntity.IsDeleted() = false, want true\")\n    }\n}\n\nfunc TestBaseEntity_SetCreatedAt(t *testing.T) {\n    entity := BaseEntity{}\n    now := time.Now()\n\n    entity.SetCreatedAt(now)\n\n    if !entity.CreatedAt.Equal(now) {\n        t.Errorf(\"BaseEntity.CreatedAt = %v, want %v\", entity.CreatedAt, now)\n    }\n}\n\nfunc TestBaseEntity_SetUpdatedAt(t *testing.T) {\n    entity := BaseEntity{}\n    now := time.Now()\n\n    entity.SetUpdatedAt(now)\n\n    if !entity.UpdatedAt.Equal(now) {\n        t.Errorf(\"BaseEntity.UpdatedAt = %v, want %v\", entity.UpdatedAt, now)\n    }\n}\n\nfunc TestBaseEntity_SoftDelete(t *testing.T) {\n    entity := BaseEntity{\n        CreatedAt: time.Now(),\n        UpdatedAt: time.Now(),\n    }\n\n    entity.SoftDelete()\n\n    if entity.DeletedAt == nil {\n        t.Error(\"BaseEntity.DeletedAt is nil, want non-nil\")\n    }\n\n    if !entity.IsDeleted() {\n        t.Error(\"BaseEntity.IsDeleted() = false, want true\")\n    }\n}\n</code></pre>"},{"location":"system_implementation/#5","title":"5. \u307e\u3068\u3081","text":"<p>\u3053\u306e\u5b9f\u88c5\u624b\u9806\u3067\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b7\u30b9\u30c6\u30e0\u6a5f\u80fd\u3092\u3001\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u539f\u5247\u306b\u5f93\u3063\u3066\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\u30b7\u30b9\u30c6\u30e0\u6a5f\u80fd\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u306b\u95a2\u308f\u308b\u6a2a\u65ad\u7684\u306a\u95a2\u5fc3\u4e8b\u3092\u6271\u3044\u3001\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff1a</p> <ol> <li>RESTful API: \u6a19\u6e96\u7684\u306aRESTful API\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u63d0\u4f9b\u3057\u3001API\u30d0\u30fc\u30b8\u30e7\u30cb\u30f3\u30b0\u3092\u5b9f\u88c5</li> <li>\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0: \u30ab\u30b9\u30bf\u30e0\u30a8\u30e9\u30fc\u30bf\u30a4\u30d7\u3068\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f7f\u7528\u3057\u3066\u3001\u4e00\u8cab\u3057\u305f\u30a8\u30e9\u30fc\u51e6\u7406\u3092\u5b9f\u73fe</li> <li>\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u7ba1\u7406: \u30d9\u30fc\u30b9\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f7f\u7528\u3057\u3066\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u4f5c\u6210\u65e5\u6642\u3068\u66f4\u65b0\u65e5\u6642\u3092\u7ba1\u7406</li> <li>\u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8: \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u7269\u7406\u7684\u306b\u524a\u9664\u305b\u305a\u3001\u8ad6\u7406\u7684\u306b\u524a\u9664\u3059\u308b\u6a5f\u80fd\u3092\u5b9f\u88c5</li> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u6642\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b9\u30ad\u30fc\u30de\u3092\u81ea\u52d5\u7684\u306b\u4f5c\u6210\u30fb\u66f4\u65b0</li> </ol> <p>\u3053\u308c\u3089\u306e\u30b7\u30b9\u30c6\u30e0\u6a5f\u80fd\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4fdd\u5b88\u6027\u3001\u62e1\u5f35\u6027\u3001\u304a\u3088\u3073\u5805\u7262\u6027\u304c\u5411\u4e0a\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u30c9\u30e1\u30a4\u30f3\u30ed\u30b8\u30c3\u30af\u3068\u30b7\u30b9\u30c6\u30e0\u6a5f\u80fd\u3092\u660e\u78ba\u306b\u5206\u96e2\u3059\u308b\u3053\u3068\u3067\u3001\u30b3\u30fc\u30c9\u306e\u53ef\u8aad\u6027\u3068\u518d\u5229\u7528\u6027\u3082\u5411\u4e0a\u3057\u307e\u3059\u3002</p>"},{"location":"testcontainer_implementation/","title":"Testcontainer\u5b9f\u88c5\u306e\u8a73\u7d30","text":""},{"location":"testcontainer_implementation/#_1","title":"\u6982\u8981","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001\u30c6\u30b9\u30c8\u74b0\u5883\u3092SQLite\u304b\u3089Testcontainers\u3068PostgreSQL\u306b\u79fb\u884c\u3057\u305f\u8a73\u7d30\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\u3053\u306e\u5909\u66f4\u306b\u3088\u308a\u3001\u30c6\u30b9\u30c8\u306f\u672c\u756a\u74b0\u5883\u3067\u4f7f\u7528\u3055\u308c\u308b\u306e\u3068\u540c\u3058\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30bf\u30a4\u30d7\u306b\u5bfe\u3057\u3066\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u3088\u308a\u4fe1\u983c\u6027\u306e\u9ad8\u3044\u73fe\u5b9f\u7684\u306a\u30c6\u30b9\u30c8\u7d50\u679c\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p>"},{"location":"testcontainer_implementation/#testcontainers","title":"Testcontainers\u3068\u306f\uff1f","text":"<p>Testcontainers\u306f\u3001\u4e00\u822c\u7684\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3001Selenium\u30a6\u30a7\u30d6\u30d6\u30e9\u30a6\u30b6\u3001\u307e\u305f\u306fDocker\u30b3\u30f3\u30c6\u30ca\u3067\u5b9f\u884c\u3067\u304d\u308b\u305d\u306e\u4ed6\u306e\u3082\u306e\u306e\u8efd\u91cf\u3067\u4f7f\u3044\u6368\u3066\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u7279\u306b\u7d71\u5408\u30c6\u30b9\u30c8\u306b\u6709\u7528\u3067\u3001\u30e2\u30c3\u30af\u3084\u30a4\u30f3\u30e1\u30e2\u30ea\u306e\u4ee3\u66ff\u624b\u6bb5\u3067\u306f\u306a\u304f\u3001\u5b9f\u969b\u306e\u4f9d\u5b58\u95a2\u4fc2\u306b\u5bfe\u3057\u3066\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"testcontainer_implementation/#sqlitetestcontainers","title":"\u306a\u305cSQLite\u304b\u3089Testcontainers\u306b\u79fb\u884c\u3057\u305f\u306e\u304b","text":"<p>\u4ee5\u524d\u3001\u30c6\u30b9\u30c8\u3067\u306fSQLite\u306e\u30a4\u30f3\u30e1\u30e2\u30ea\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3057\u305f\uff1a</p> <pre><code>// SQLite\u3092\u4f7f\u7528\u3057\u305f\u53e4\u3044\u30a2\u30d7\u30ed\u30fc\u30c1\nfunc setupDatabase() (*gorm.DB, func()) {\n    // \u30c6\u30b9\u30c8\u76ee\u7684\u3067sqlite\u3092\u4f7f\u7528\n    database, err := gorm.Open(sqlite.Open(\"file::memory:?cache=shared\"), &amp;gorm.Config{})\n    if err != nil {\n        panic(\"Failed to connect to database\")\n    }\n\n    // \u30e2\u30c7\u30eb\u306e\u81ea\u52d5\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\n    err = database.AutoMigrate(&amp;postgres.Product{}, &amp;postgres.Seller{})\n    if err != nil {\n        panic(\"Failed to migrate database\")\n    }\n\n    // \u30c6\u30fc\u30d6\u30eb\u3092\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3059\u308b\u95a2\u6570\n    cleanup := func() {\n        database.Exec(\"DELETE FROM sellers\")\n        database.Exec(\"DELETE FROM products\")\n    }\n\n    return database, cleanup\n}\n</code></pre> <p>\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u30b7\u30f3\u30d7\u30eb\u3067\u9ad8\u901f\u3067\u3057\u305f\u304c\u3001\u3044\u304f\u3064\u304b\u306e\u5236\u9650\u304c\u3042\u308a\u307e\u3057\u305f\uff1a</p> <ol> <li>\u7570\u306a\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a8\u30f3\u30b8\u30f3: SQLite\u3068PostgreSQL\u306f\u52d5\u4f5c\u3001\u6a5f\u80fd\u3001SQL\u306e\u65b9\u8a00\u304c\u7570\u306a\u308a\u307e\u3059\u3002SQLite\u3067\u30d1\u30b9\u3059\u308b\u30c6\u30b9\u30c8\u304c\u672c\u756a\u74b0\u5883\u306ePostgreSQL\u3067\u5931\u6557\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</li> <li>\u30b9\u30ad\u30fc\u30de\u306e\u4e92\u63db\u6027: PostgreSQL\u3067\u4f7f\u7528\u3055\u308c\u308b\u30b9\u30ad\u30fc\u30de\u6a5f\u80fd\u306e\u4e00\u90e8\u306fSQLite\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002</li> <li>\u4e26\u884c\u51e6\u7406: PostgreSQL\u3068SQLite\u306f\u4e26\u884c\u64cd\u4f5c\u306e\u51e6\u7406\u65b9\u6cd5\u304c\u7570\u306a\u308a\u307e\u3059\u3002</li> <li>\u672c\u756a\u74b0\u5883\u306b\u8fd1\u3044\u74b0\u5883: \u30c6\u30b9\u30c8\u306f\u7406\u60f3\u7684\u306b\u306f\u672c\u756a\u74b0\u5883\u306b\u3067\u304d\u308b\u3060\u3051\u8fd1\u3044\u74b0\u5883\u3067\u5b9f\u884c\u3055\u308c\u308b\u3079\u304d\u3067\u3059\u3002</li> </ol>"},{"location":"testcontainer_implementation/#testcontainers_1","title":"Testcontainers\u306e\u5b9f\u88c5\u65b9\u6cd5","text":"<p>\u73fe\u5728\u3001\u30c6\u30b9\u30c8\u7528\u306bPostgreSQL\u30b3\u30f3\u30c6\u30ca\u3092\u30b9\u30d4\u30f3\u30a2\u30c3\u30d7\u3059\u308b\u305f\u3081\u306bTestcontainers\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\uff1a</p> <pre><code>func setupDatabase(t *testing.T) (*gorm.DB, func()) {\n    ctx := context.Background()\n\n    // PostgreSQL\u30b3\u30f3\u30c6\u30ca\u306e\u5b9a\u7fa9\n    pgReq := testcontainers.ContainerRequest{\n        Image:        \"postgres:15-alpine\",\n        ExposedPorts: []string{\"5432/tcp\"},\n        Env: map[string]string{\n            \"POSTGRES_USER\":     \"postgres\",\n            \"POSTGRES_PASSWORD\": \"postgres\",\n            \"POSTGRES_DB\":       \"testdb\",\n        },\n        WaitingFor: wait.ForLog(\"database system is ready to accept connections\").\n            WithOccurrence(2).WithStartupTimeout(5 * time.Second),\n    }\n\n    // PostgreSQL\u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\n    pgContainer, err := testcontainers.GenericContainer(ctx, testcontainers.GenericContainerRequest{\n        ContainerRequest: pgReq,\n        Started:          true,\n    })\n    if err != nil {\n        t.Fatalf(\"Failed to start PostgreSQL container: %s\", err)\n    }\n\n    // \u30b3\u30f3\u30c6\u30ca\u306e\u30db\u30b9\u30c8\u3068\u30dd\u30fc\u30c8\u306e\u53d6\u5f97\n    host, err := pgContainer.Host(ctx)\n    if err != nil {\n        t.Fatalf(\"Failed to get PostgreSQL container host: %s\", err)\n    }\n\n    port, err := pgContainer.MappedPort(ctx, \"5432\")\n    if err != nil {\n        t.Fatalf(\"Failed to get PostgreSQL container port: %s\", err)\n    }\n\n    // \u63a5\u7d9a\u6587\u5b57\u5217\u306e\u4f5c\u6210\n    dsn := fmt.Sprintf(\"host=%s port=%s user=postgres password=postgres dbname=testdb sslmode=disable\", host, port.Port())\n\n    // PostgreSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u63a5\u7d9a\n    database, err := gorm.Open(pgdriver.Open(dsn), &amp;gorm.Config{})\n    if err != nil {\n        t.Fatalf(\"Failed to connect to database: %s\", err)\n    }\n\n    // \u30e2\u30c7\u30eb\u306e\u81ea\u52d5\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\n    err = database.AutoMigrate(&amp;postgres.Product{}, &amp;postgres.Seller{})\n    if err != nil {\n        t.Fatalf(\"Failed to migrate database: %s\", err)\n    }\n\n    // \u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u95a2\u6570\n    cleanup := func() {\n        // \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\n        database.Exec(\"DELETE FROM sellers\")\n        database.Exec(\"DELETE FROM products\")\n\n        // PostgreSQL\u30b3\u30f3\u30c6\u30ca\u306e\u505c\u6b62\u3068\u524a\u9664\n        if err := pgContainer.Terminate(ctx); err != nil {\n            t.Fatalf(\"Failed to terminate container: %s\", err)\n        }\n    }\n\n    return database, cleanup\n}\n</code></pre> <p>\u3053\u306e\u5b9f\u88c5\u306f\uff1a</p> <ol> <li>\u516c\u5f0fPostgreSQL Docker\u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u7528\u3057\u3066PostgreSQL\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210</li> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a</li> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u63a5\u7d9a\u3092\u53d7\u3051\u4ed8\u3051\u308b\u6e96\u5099\u304c\u3067\u304d\u308b\u306e\u3092\u5f85\u6a5f</li> <li>\u30b3\u30f3\u30c6\u30ca\u306e\u30db\u30b9\u30c8\u3068\u30dd\u30fc\u30c8\u3092\u53d6\u5f97</li> <li>\u63a5\u7d9a\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a</li> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b9\u30ad\u30fc\u30de\u3092\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3</li> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3068\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u95a2\u6570\u3092\u8fd4\u3059\uff1a</li> <li>\u3059\u3079\u3066\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u524a\u9664\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7</li> <li>\u30b3\u30f3\u30c6\u30ca\u3092\u7d42\u4e86</li> </ol>"},{"location":"testcontainer_implementation/#testcontainer_1","title":"\u30c6\u30b9\u30c8\u3067\u306eTestcontainer\u306e\u4f7f\u7528\u65b9\u6cd5","text":"<p>\u4ee5\u4e0b\u306f\u3001\u30c6\u30b9\u30c8\u3067testcontainer\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u4f7f\u7528\u3059\u308b\u4f8b\u3067\u3059\uff1a</p> <pre><code>func TestGormProductRepository_Save(t *testing.T) {\n    gormDB, cleanup := setupDatabase(t)\n    defer cleanup()\n\n    repo := postgres.NewGormProductRepository(gormDB)\n\n    seller := getPersistedSeller(gormDB)\n    validatedSeller, _ := entities.NewValidatedSeller(&amp;seller.Seller)\n\n    product := entities.NewProduct(\"TestProduct\", 9.99, *validatedSeller)\n    validProduct, _ := entities.NewValidatedProduct(product)\n\n    _, err := repo.Create(validProduct)\n    if err != nil {\n        t.Errorf(\"Unexpected error during save: %s\", err)\n    }\n}\n</code></pre> <p>\u5404\u30c6\u30b9\u30c8\u306f\uff1a 1. \u30b3\u30f3\u30c6\u30ca\u5185\u306b\u65b0\u3057\u3044PostgreSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 2. \u30c6\u30b9\u30c8\u64cd\u4f5c\u3092\u5b9f\u884c 3. \u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u524a\u9664\u3057\u3001\u30b3\u30f3\u30c6\u30ca\u3092\u7d42\u4e86\u3059\u308b\u3053\u3068\u3067\u81ea\u8eab\u306e\u5f8c\u51e6\u7406\u3092\u884c\u3046</p>"},{"location":"testcontainer_implementation/#testcontainers_2","title":"Testcontainers\u3092\u4f7f\u7528\u3059\u308b\u5229\u70b9","text":"<ol> <li>\u672c\u756a\u74b0\u5883\u306b\u8fd1\u3044\u74b0\u5883: \u30c6\u30b9\u30c8\u306f\u672c\u756a\u74b0\u5883\u3067\u4f7f\u7528\u3055\u308c\u308b\u306e\u3068\u540c\u3058\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30bf\u30a4\u30d7\u306b\u5bfe\u3057\u3066\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002</li> <li>\u5206\u96e2: \u5404\u30c6\u30b9\u30c8\u306f\u72ec\u81ea\u306e\u5206\u96e2\u3055\u308c\u305f\u30b3\u30f3\u30c6\u30ca\u3067\u5b9f\u884c\u3055\u308c\u3001\u30c6\u30b9\u30c8\u9593\u306e\u5e72\u6e09\u3092\u9632\u304e\u307e\u3059\u3002</li> <li>\u73fe\u5b9f\u7684\u306a\u30c6\u30b9\u30c8: \u30c6\u30b9\u30c8\u306fPostgreSQL\u306e\u3059\u3079\u3066\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3067\u304d\u3001\u672c\u756a\u74b0\u5883\u3068\u306e\u4e92\u63db\u6027\u3092\u78ba\u4fdd\u3057\u307e\u3059\u3002</li> <li>\u4fe1\u983c\u6027: \u30c6\u30b9\u30c8\u304c\u5408\u683c\u3059\u308b\u3068\u3001\u30b3\u30fc\u30c9\u304c\u672c\u756a\u74b0\u5883\u3067\u52d5\u4f5c\u3059\u308b\u3068\u3044\u3046\u78ba\u4fe1\u304c\u9ad8\u307e\u308a\u307e\u3059\u3002</li> <li>\u30dd\u30fc\u30bf\u30d3\u30ea\u30c6\u30a3: \u30c6\u30b9\u30c8\u306f\u30ed\u30fc\u30ab\u30eb\u306ePostgreSQL\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u5fc5\u8981\u3068\u305b\u305a\u3001Docker\u304c\u3042\u308c\u3070\u4efb\u610f\u306e\u30de\u30b7\u30f3\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002</li> </ol>"},{"location":"testcontainer_implementation/#_2","title":"\u30b7\u30b9\u30c6\u30e0\u8981\u4ef6","text":"<p>Testcontainers\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u304c\u5fc5\u8981\u3067\u3059\uff1a</p> <ol> <li>Docker\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3001\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068</li> <li>Go 1.19\u4ee5\u964d</li> <li>testcontainers-go\u30e9\u30a4\u30d6\u30e9\u30ea: <code>go get github.com/testcontainers/testcontainers-go</code></li> </ol>"},{"location":"testcontainer_implementation/#_3","title":"\u7d50\u8ad6","text":"<p>SQLite\u304b\u3089Testcontainers\u3068PostgreSQL\u306b\u79fb\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u30c6\u30b9\u30c8\u306e\u4fe1\u983c\u6027\u3068\u73fe\u5b9f\u6027\u304c\u5411\u4e0a\u3057\u307e\u3057\u305f\u3002\u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\u6642\u9593\u306b\u3088\u308a\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\u304c\u82e5\u5e72\u9045\u304f\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u672c\u756a\u74b0\u5883\u306b\u8fd1\u3044\u74b0\u5883\u3067\u30c6\u30b9\u30c8\u3092\u884c\u3046\u30e1\u30ea\u30c3\u30c8\u306f\u3053\u306e\u30c7\u30e1\u30ea\u30c3\u30c8\u3092\u4e0a\u56de\u308a\u307e\u3059\u3002</p>"},{"location":"user_stories/","title":"Go-DDD \u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc","text":"<p>\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001Go-DDD\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002</p>"},{"location":"user_stories/#1","title":"1. \u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc\u3068\u306f","text":"<p>\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u8996\u70b9\u304b\u3089\u6a5f\u80fd\u3092\u8a18\u8ff0\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u8a18\u8ff0\u3057\u307e\u3059\uff1a</p> <pre><code>\u300c&lt;\u30e6\u30fc\u30b6\u30fc\u306e\u5f79\u5272&gt;\u3068\u3057\u3066\u3001&lt;\u9054\u6210\u3057\u305f\u3044\u76ee\u6a19&gt;\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f&lt;\u7406\u7531&gt;\u306e\u305f\u3081\u3067\u3042\u308b\u3002\u300d\n</code></pre>"},{"location":"user_stories/#2","title":"2. \u5546\u54c1\u7ba1\u7406\u6a5f\u80fd\u306b\u95a2\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc","text":""},{"location":"user_stories/#21","title":"2.1 \u5546\u54c1\u306e\u57fa\u672c\u64cd\u4f5c","text":"<ol> <li>\u5546\u54c1\u306e\u4f5c\u6210</li> <li>\u51fa\u54c1\u8005\u3068\u3057\u3066\u3001\u65b0\u3057\u3044\u5546\u54c1\u3092\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u81ea\u5206\u306e\u5546\u54c1\u3092\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u3067\u8ca9\u58f2\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> <li> <p>\u7ba1\u7406\u8005\u3068\u3057\u3066\u3001\u65b0\u3057\u3044\u5546\u54c1\u3092\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u51fa\u54c1\u8005\u306e\u4ee3\u308f\u308a\u306b\u5546\u54c1\u3092\u767b\u9332\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</p> </li> <li> <p>\u5546\u54c1\u306e\u691c\u7d22</p> </li> <li>\u8cfc\u5165\u8005\u3068\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u5546\u54c1\u3092\u691c\u7d22\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u8cfc\u5165\u3057\u305f\u3044\u5546\u54c1\u3092\u898b\u3064\u3051\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> <li>\u51fa\u54c1\u8005\u3068\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u5546\u54c1\u3092\u691c\u7d22\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u5e02\u5834\u306e\u72b6\u6cc1\u3092\u628a\u63e1\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> <li> <p>\u7ba1\u7406\u8005\u3068\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u5546\u54c1\u3092\u691c\u7d22\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u5168\u4f53\u306e\u5546\u54c1\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</p> </li> <li> <p>\u5546\u54c1\u306e\u8a73\u7d30\u53d6\u5f97</p> </li> <li>\u8cfc\u5165\u8005\u3068\u3057\u3066\u3001\u5546\u54c1\u306e\u8a73\u7d30\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u5546\u54c1\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u77e5\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> <li>\u51fa\u54c1\u8005\u3068\u3057\u3066\u3001\u81ea\u5206\u306e\u5546\u54c1\u306e\u8a73\u7d30\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u5546\u54c1\u60c5\u5831\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> <li> <p>\u7ba1\u7406\u8005\u3068\u3057\u3066\u3001\u4efb\u610f\u306e\u5546\u54c1\u306e\u8a73\u7d30\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u5546\u54c1\u60c5\u5831\u3092\u78ba\u8a8d\u30fb\u7ba1\u7406\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</p> </li> <li> <p>\u5546\u54c1\u306e\u66f4\u65b0</p> </li> <li>\u51fa\u54c1\u8005\u3068\u3057\u3066\u3001\u81ea\u5206\u306e\u5546\u54c1\u60c5\u5831\u3092\u66f4\u65b0\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u5546\u54c1\u60c5\u5831\u3092\u6700\u65b0\u306e\u72b6\u614b\u306b\u4fdd\u3064\u305f\u3081\u3067\u3042\u308b\u3002</li> <li>\u7ba1\u7406\u8005\u3068\u3057\u3066\u3001\u4efb\u610f\u306e\u5546\u54c1\u60c5\u5831\u3092\u66f4\u65b0\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5546\u54c1\u60c5\u5831\u3092\u4fee\u6b63\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> </ol>"},{"location":"user_stories/#22","title":"2.2 \u5546\u54c1\u306e\u9ad8\u5ea6\u306a\u6a5f\u80fd","text":"<ol> <li>\u5546\u54c1\u306e\u691c\u8a3c</li> <li> <p>\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u3001\u5546\u54c1\u30c7\u30fc\u30bf\u3092\u691c\u8a3c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u4e0d\u6b63\u306a\u30c7\u30fc\u30bf\u306e\u767b\u9332\u3092\u9632\u3050\u305f\u3081\u3067\u3042\u308b\u3002</p> </li> <li> <p>\u5546\u54c1\u3068\u51fa\u54c1\u8005\u306e\u95a2\u9023\u4ed8\u3051</p> </li> <li> <p>\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u3001\u5546\u54c1\u3068\u51fa\u54c1\u8005\u3092\u95a2\u9023\u4ed8\u3051\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u5546\u54c1\u306e\u6240\u6709\u8005\u3092\u660e\u78ba\u306b\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</p> </li> <li> <p>\u5b58\u5728\u3057\u306a\u3044\u51fa\u54c1\u8005\u306e\u30a8\u30e9\u30fc\u51e6\u7406</p> </li> <li> <p>\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u3001\u5b58\u5728\u3057\u306a\u3044\u51fa\u54c1\u8005\u306b\u95a2\u3059\u308b\u30a8\u30e9\u30fc\u3092\u9069\u5207\u306b\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u30e6\u30fc\u30b6\u30fc\u306b\u660e\u78ba\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</p> </li> <li> <p>\u5546\u54c1\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306e404\u30ec\u30b9\u30dd\u30f3\u30b9</p> </li> <li>\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u3001\u5546\u54c1\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306b\u9069\u5207\u306aHTTP\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u8fd4\u305b\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u6b63\u78ba\u306a\u60c5\u5831\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> </ol>"},{"location":"user_stories/#3","title":"3. \u51fa\u54c1\u8005\u7ba1\u7406\u6a5f\u80fd\u306b\u95a2\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc","text":""},{"location":"user_stories/#31","title":"3.1 \u51fa\u54c1\u8005\u306e\u57fa\u672c\u64cd\u4f5c","text":"<ol> <li>\u51fa\u54c1\u8005\u306e\u4f5c\u6210</li> <li>\u51fa\u54c1\u8005\u3068\u3057\u3066\u3001\u81ea\u5206\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u3067\u5546\u54c1\u3092\u8ca9\u58f2\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> <li> <p>\u7ba1\u7406\u8005\u3068\u3057\u3066\u3001\u65b0\u3057\u3044\u51fa\u54c1\u8005\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u51fa\u54c1\u8005\u306e\u4ee3\u308f\u308a\u306b\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u767b\u9332\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</p> </li> <li> <p>\u51fa\u54c1\u8005\u306e\u691c\u7d22</p> <ul> <li>\u8cfc\u5165\u8005\u3068\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u51fa\u54c1\u8005\u3092\u691c\u7d22\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u4fe1\u983c\u3067\u304d\u308b\u51fa\u54c1\u8005\u3092\u898b\u3064\u3051\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> <li>\u7ba1\u7406\u8005\u3068\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u51fa\u54c1\u8005\u3092\u691c\u7d22\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u51fa\u54c1\u8005\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> </ul> </li> <li> <p>\u51fa\u54c1\u8005\u306e\u8a73\u7d30\u53d6\u5f97</p> <ul> <li>\u8cfc\u5165\u8005\u3068\u3057\u3066\u3001\u51fa\u54c1\u8005\u306e\u8a73\u7d30\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u51fa\u54c1\u8005\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u77e5\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> <li>\u51fa\u54c1\u8005\u3068\u3057\u3066\u3001\u81ea\u5206\u306e\u8a73\u7d30\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u81ea\u5206\u306e\u60c5\u5831\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> <li>\u7ba1\u7406\u8005\u3068\u3057\u3066\u3001\u4efb\u610f\u306e\u51fa\u54c1\u8005\u306e\u8a73\u7d30\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u51fa\u54c1\u8005\u60c5\u5831\u3092\u78ba\u8a8d\u30fb\u7ba1\u7406\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> </ul> </li> <li> <p>\u51fa\u54c1\u8005\u306e\u66f4\u65b0</p> <ul> <li>\u51fa\u54c1\u8005\u3068\u3057\u3066\u3001\u81ea\u5206\u306e\u60c5\u5831\u3092\u66f4\u65b0\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u60c5\u5831\u3092\u6700\u65b0\u306e\u72b6\u614b\u306b\u4fdd\u3064\u305f\u3081\u3067\u3042\u308b\u3002</li> <li>\u7ba1\u7406\u8005\u3068\u3057\u3066\u3001\u4efb\u610f\u306e\u51fa\u54c1\u8005\u60c5\u5831\u3092\u66f4\u65b0\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u51fa\u54c1\u8005\u60c5\u5831\u3092\u4fee\u6b63\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> </ul> </li> <li> <p>\u51fa\u54c1\u8005\u306e\u524a\u9664</p> <ul> <li>\u7ba1\u7406\u8005\u3068\u3057\u3066\u3001\u51fa\u54c1\u8005\u3092\u524a\u9664\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u4e0d\u9069\u5207\u306a\u51fa\u54c1\u8005\u3092\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u9664\u5916\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> </ul> </li> </ol>"},{"location":"user_stories/#32","title":"3.2 \u51fa\u54c1\u8005\u306e\u9ad8\u5ea6\u306a\u6a5f\u80fd","text":"<ol> <li> <p>\u51fa\u54c1\u8005\u306e\u691c\u8a3c</p> <ul> <li>\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u3001\u51fa\u54c1\u8005\u30c7\u30fc\u30bf\u3092\u691c\u8a3c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u4e0d\u6b63\u306a\u30c7\u30fc\u30bf\u306e\u767b\u9332\u3092\u9632\u3050\u305f\u3081\u3067\u3042\u308b\u3002</li> </ul> </li> <li> <p>\u51fa\u54c1\u8005\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306e404\u30ec\u30b9\u30dd\u30f3\u30b9</p> <ul> <li>\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u3001\u51fa\u54c1\u8005\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306b\u9069\u5207\u306aHTTP\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u8fd4\u305b\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u6b63\u78ba\u306a\u60c5\u5831\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> </ul> </li> </ol>"},{"location":"user_stories/#4","title":"4. \u30b7\u30b9\u30c6\u30e0\u6a5f\u80fd\u306b\u95a2\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc","text":""},{"location":"user_stories/#41-api","title":"4.1 API\u6a5f\u80fd","text":"<ol> <li> <p>RESTful API</p> <ul> <li>\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u3001RESTful API\u3092\u63d0\u4f9b\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u306e\u6a19\u6e96\u7684\u306a\u901a\u4fe1\u3092\u53ef\u80fd\u306b\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> </ul> </li> <li> <p>DTO\u3068\u30de\u30c3\u30d1\u30fc</p> <ul> <li>\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u3001\u30c9\u30e1\u30a4\u30f3\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u5916\u90e8\u306b\u516c\u958b\u3057\u306a\u3044\u305f\u3081\u306eDTO\u3068\u30de\u30c3\u30d1\u30fc\u6a5f\u80fd\u3092\u63d0\u4f9b\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u3092\u4fdd\u8b77\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> </ul> </li> <li> <p>\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0</p> <ul> <li>\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u3001\u30a8\u30e9\u30fc\u3092\u9069\u5207\u306b\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u30e6\u30fc\u30b6\u30fc\u306b\u660e\u78ba\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> </ul> </li> </ol>"},{"location":"user_stories/#42","title":"4.2 \u30c7\u30fc\u30bf\u7ba1\u7406\u6a5f\u80fd","text":"<ol> <li> <p>\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u7ba1\u7406</p> <ul> <li>\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u4f5c\u6210\u30fb\u66f4\u65b0\u65e5\u6642\u3092\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u30c7\u30fc\u30bf\u306e\u5909\u66f4\u5c65\u6b74\u3092\u8ffd\u8de1\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> </ul> </li> <li> <p>\u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8</p> <ul> <li>\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u8ad6\u7406\u524a\u9664\u3092\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u30c7\u30fc\u30bf\u3092\u5b8c\u5168\u306b\u524a\u9664\u305b\u305a\u306b\u975e\u8868\u793a\u306b\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> </ul> </li> </ol>"},{"location":"user_stories/#43","title":"4.3 \u958b\u767a\u652f\u63f4\u6a5f\u80fd","text":"<ol> <li>\u30c6\u30b9\u30c8<ul> <li>\u7ba1\u7406\u8005\u3068\u3057\u3066\u3001\u5404\u6a5f\u80fd\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\u305d\u308c\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u54c1\u8cea\u3092\u78ba\u4fdd\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</li> </ul> </li> </ol>"},{"location":"user_stories/#5","title":"5. \u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc\u306e\u512a\u5148\u9806\u4f4d\u4ed8\u3051","text":"<p>\u30e6\u30fc\u30b6\u30fc\u30b9\u30c8\u30fc\u30ea\u30fc\u306f\u3001\u4ee5\u4e0b\u306e\u57fa\u6e96\u306b\u57fa\u3065\u3044\u3066\u512a\u5148\u9806\u4f4d\u4ed8\u3051\u3055\u308c\u3066\u3044\u307e\u3059\uff1a</p>"},{"location":"user_stories/#51-1-mvp","title":"5.1 \u9ad8\u512a\u5148\u5ea6\uff08\u30ea\u30ea\u30fc\u30b91: MVP\uff09","text":"<ul> <li>\u5546\u54c1\u306e\u4f5c\u6210 (1)</li> <li>\u5546\u54c1\u306e\u691c\u7d22 (2)</li> <li>\u5546\u54c1\u306e\u8a73\u7d30\u53d6\u5f97 (3)</li> <li>\u51fa\u54c1\u8005\u306e\u4f5c\u6210 (9)</li> <li>\u51fa\u54c1\u8005\u306e\u691c\u7d22 (10)</li> <li>\u51fa\u54c1\u8005\u306e\u8a73\u7d30\u53d6\u5f97 (11)</li> <li>RESTful API (16)</li> <li>\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0 (18)</li> <li>\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u7ba1\u7406 (19)</li> <li>\u30c6\u30b9\u30c8 (21)</li> </ul>"},{"location":"user_stories/#52-2","title":"5.2 \u4e2d\u512a\u5148\u5ea6\uff08\u30ea\u30ea\u30fc\u30b92: \u62e1\u5f35\u6a5f\u80fd\uff09","text":"<ul> <li>\u5546\u54c1\u306e\u66f4\u65b0 (4)</li> <li>\u5546\u54c1\u306e\u691c\u8a3c (5)</li> <li>\u5546\u54c1\u3068\u51fa\u54c1\u8005\u306e\u95a2\u9023\u4ed8\u3051 (6)</li> <li>\u51fa\u54c1\u8005\u306e\u66f4\u65b0 (12)</li> <li>\u51fa\u54c1\u8005\u306e\u691c\u8a3c (14)</li> <li>DTO\u3068\u30de\u30c3\u30d1\u30fc (17)</li> </ul>"},{"location":"user_stories/#53-3","title":"5.3 \u4f4e\u512a\u5148\u5ea6\uff08\u30ea\u30ea\u30fc\u30b93: \u9ad8\u5ea6\u306a\u6a5f\u80fd\uff09","text":"<ul> <li>\u5b58\u5728\u3057\u306a\u3044\u51fa\u54c1\u8005\u306e\u30a8\u30e9\u30fc\u51e6\u7406 (7)</li> <li>\u5546\u54c1\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306e404\u30ec\u30b9\u30dd\u30f3\u30b9 (8)</li> <li>\u51fa\u54c1\u8005\u306e\u524a\u9664 (13)</li> <li>\u51fa\u54c1\u8005\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306e404\u30ec\u30b9\u30dd\u30f3\u30b9 (15)</li> <li>\u30bd\u30d5\u30c8\u30c7\u30ea\u30fc\u30c8 (20)</li> </ul>"}]}